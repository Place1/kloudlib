{
    "version": 3,
    "checkpoint": {
        "stack": "dev",
        "latest": {
            "manifest": {
                "time": "2019-03-30T13:41:52.279831534+11:00",
                "magic": "10484a8cdf491e982db0cd61c77ceebd9db887d282e029dd992b18630a2c5a32",
                "version": "v0.17.1",
                "plugins": [
                    {
                        "name": "nodejs",
                        "path": "/home/james/.pulumi/bin/pulumi-language-nodejs",
                        "type": "language",
                        "version": "0.17.1"
                    },
                    {
                        "name": "kubernetes",
                        "path": "/home/james/.pulumi/plugins/resource-kubernetes-v0.22.0/pulumi-resource-kubernetes",
                        "type": "resource",
                        "version": "0.22.0"
                    },
                    {
                        "name": "pulumi-nodejs",
                        "path": "/home/james/.pulumi/bin/pulumi-resource-pulumi-nodejs",
                        "type": "resource",
                        "version": "0.17.4"
                    }
                ]
            },
            "resources": [
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev",
                    "custom": false,
                    "type": "pulumi:pulumi:Stack",
                    "outputs": {
                        "app": {
                            "name": "my-app",
                            "options": {
                                "env": {
                                    "DB_HOST": "database",
                                    "DB_NAME": "db",
                                    "DB_PASSWORD": "password",
                                    "DB_PORT": "5432",
                                    "DB_USERNAME": "developer"
                                },
                                "ports": [
                                    {
                                        "containerPort": 8000,
                                        "servicePort": 80
                                    }
                                ],
                                "src": "/home/james/pulumi-example/app/"
                            },
                            "urn": "urn:pulumi:dev::pulumi-ts::app::my-app"
                        },
                        "cluster": {
                            "provider": {
                                "context": "minikube",
                                "id": "c97cf98f-b0f9-481f-a4b7-6de2570c5dbb",
                                "urn": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::minikube"
                            }
                        },
                        "database": {
                            "deployment": {
                                "apiVersion": "apps/v1",
                                "id": "default/database",
                                "kind": "Deployment",
                                "metadata": {
                                    "annotations": {
                                        "deployment.kubernetes.io/revision": "1"
                                    },
                                    "creationTimestamp": "2019-03-28T11:23:35Z",
                                    "generation": 1,
                                    "labels": {
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "name": "database"
                                    },
                                    "name": "database",
                                    "namespace": "default",
                                    "resourceVersion": "684",
                                    "selfLink": "/apis/apps/v1/namespaces/default/deployments/database",
                                    "uid": "ed0e5ced-514b-11e9-bd09-080027d8d11f"
                                },
                                "spec": {
                                    "progressDeadlineSeconds": 600,
                                    "replicas": 1,
                                    "revisionHistoryLimit": 10,
                                    "selector": {
                                        "matchLabels": {
                                            "name": "database"
                                        }
                                    },
                                    "strategy": {
                                        "rollingUpdate": {
                                            "maxSurge": "25%",
                                            "maxUnavailable": "25%"
                                        },
                                        "type": "RollingUpdate"
                                    },
                                    "template": {
                                        "metadata": {
                                            "labels": {
                                                "name": "database"
                                            }
                                        },
                                        "spec": {
                                            "containers": [
                                                {
                                                    "env": [
                                                        {
                                                            "name": "POSTGRES_USER",
                                                            "value": "developer"
                                                        },
                                                        {
                                                            "name": "POSTGRES_PASSWORD",
                                                            "value": "password"
                                                        },
                                                        {
                                                            "name": "POSTGRES_DB",
                                                            "value": "db"
                                                        }
                                                    ],
                                                    "image": "postgres:10-alpine",
                                                    "imagePullPolicy": "IfNotPresent",
                                                    "name": "database",
                                                    "ports": [
                                                        {
                                                            "containerPort": 5432,
                                                            "protocol": "TCP"
                                                        }
                                                    ],
                                                    "resources": {},
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File"
                                                }
                                            ],
                                            "dnsPolicy": "ClusterFirst",
                                            "restartPolicy": "Always",
                                            "schedulerName": "default-scheduler",
                                            "securityContext": {},
                                            "terminationGracePeriodSeconds": 30
                                        }
                                    }
                                },
                                "status": {
                                    "availableReplicas": 1,
                                    "conditions": [
                                        {
                                            "lastTransitionTime": "2019-03-28T11:23:49Z",
                                            "lastUpdateTime": "2019-03-28T11:23:49Z",
                                            "message": "Deployment has minimum availability.",
                                            "reason": "MinimumReplicasAvailable",
                                            "status": "True",
                                            "type": "Available"
                                        },
                                        {
                                            "lastTransitionTime": "2019-03-28T11:23:35Z",
                                            "lastUpdateTime": "2019-03-28T11:23:49Z",
                                            "message": "ReplicaSet \"database-78dffc\" has successfully progressed.",
                                            "reason": "NewReplicaSetAvailable",
                                            "status": "True",
                                            "type": "Progressing"
                                        }
                                    ],
                                    "observedGeneration": 1,
                                    "readyReplicas": 1,
                                    "replicas": 1,
                                    "updatedReplicas": 1
                                },
                                "urn": "urn:pulumi:dev::pulumi-ts::database$kubernetes:apps/v1:Deployment::database-deployment"
                            },
                            "name": "database",
                            "options": {
                                "cluster": {
                                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::minikube"
                                }
                            },
                            "service": {
                                "apiVersion": "v1",
                                "id": "default/database",
                                "kind": "Service",
                                "metadata": {
                                    "creationTimestamp": "2019-03-28T11:23:35Z",
                                    "labels": {
                                        "app.kubernetes.io/managed-by": "pulumi",
                                        "name": "database"
                                    },
                                    "name": "database",
                                    "namespace": "default",
                                    "resourceVersion": "649",
                                    "selfLink": "/api/v1/namespaces/default/services/database",
                                    "uid": "ed21e37e-514b-11e9-bd09-080027d8d11f"
                                },
                                "spec": {
                                    "clusterIP": "10.111.90.90",
                                    "ports": [
                                        {
                                            "port": 5432,
                                            "protocol": "TCP",
                                            "targetPort": 5432
                                        }
                                    ],
                                    "selector": {
                                        "name": "database"
                                    },
                                    "sessionAffinity": "None",
                                    "type": "ClusterIP"
                                },
                                "status": {
                                    "loadBalancer": {}
                                },
                                "urn": "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Service::database-service"
                            },
                            "urn": "urn:pulumi:dev::pulumi-ts::database::database"
                        },
                        "namespace": {
                            "apiVersion": "v1",
                            "id": "default",
                            "kind": "Namespace",
                            "metadata": {
                                "creationTimestamp": "2019-03-28T11:19:45Z",
                                "name": "default",
                                "resourceVersion": "11",
                                "selfLink": "/api/v1/namespaces/default",
                                "uid": "63da5db0-514b-11e9-bd09-080027d8d11f"
                            },
                            "spec": {
                                "finalizers": [
                                    "kubernetes"
                                ]
                            },
                            "status": {
                                "phase": "Active"
                            },
                            "urn": "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        }
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::database::database",
                    "custom": false,
                    "type": "database",
                    "parent": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev"
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default",
                    "custom": true,
                    "id": "02267239-103f-4720-b865-18620add8153",
                    "type": "pulumi:providers:kubernetes",
                    "inputs": {
                        "version": "0.22.0"
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::app::my-app",
                    "custom": false,
                    "type": "app",
                    "parent": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev"
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::minikube",
                    "custom": true,
                    "id": "c97cf98f-b0f9-481f-a4b7-6de2570c5dbb",
                    "type": "pulumi:providers:kubernetes",
                    "inputs": {
                        "context": "minikube"
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev",
                    "propertyDependencies": {
                        "context": null
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::my-app-namespace",
                    "custom": true,
                    "id": "default",
                    "type": "kubernetes:core/v1:Namespace",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace"
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "Namespace",
                            "metadata": {
                                "name": "default"
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "creationTimestamp": "2019-03-28T11:19:45Z",
                            "name": "default",
                            "resourceVersion": "11",
                            "selfLink": "/api/v1/namespaces/default",
                            "uid": "63da5db0-514b-11e9-bd09-080027d8d11f"
                        },
                        "spec": {
                            "finalizers": [
                                "kubernetes"
                            ]
                        },
                        "status": {
                            "phase": "Active"
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev",
                    "external": true,
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::02267239-103f-4720-b865-18620add8153"
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::database-namespace",
                    "custom": true,
                    "id": "default",
                    "type": "kubernetes:core/v1:Namespace",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace"
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "Namespace",
                            "metadata": {
                                "name": "default"
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "creationTimestamp": "2019-03-28T11:19:45Z",
                            "name": "default",
                            "resourceVersion": "11",
                            "selfLink": "/api/v1/namespaces/default",
                            "uid": "63da5db0-514b-11e9-bd09-080027d8d11f"
                        },
                        "spec": {
                            "finalizers": [
                                "kubernetes"
                            ]
                        },
                        "status": {
                            "phase": "Active"
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev",
                    "external": true,
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::02267239-103f-4720-b865-18620add8153"
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace",
                    "custom": true,
                    "id": "default",
                    "type": "kubernetes:core/v1:Namespace",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace"
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "Namespace",
                            "metadata": {
                                "name": "default"
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "creationTimestamp": "2019-03-28T11:19:45Z",
                            "name": "default",
                            "resourceVersion": "11",
                            "selfLink": "/api/v1/namespaces/default",
                            "uid": "63da5db0-514b-11e9-bd09-080027d8d11f"
                        },
                        "spec": {
                            "finalizers": [
                                "kubernetes"
                            ]
                        },
                        "status": {
                            "phase": "Active"
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev",
                    "external": true,
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::02267239-103f-4720-b865-18620add8153"
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Service::my-app-service",
                    "custom": true,
                    "id": "default/my-app",
                    "type": "kubernetes:core/v1:Service",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "name": "my-app"
                            },
                            "name": "my-app",
                            "namespace": "default"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "port": 80,
                                    "targetPort": 8000
                                }
                            ],
                            "selector": {
                                "name": "my-app"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "Service",
                            "metadata": {
                                "labels": {
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "name": "my-app"
                                },
                                "name": "my-app",
                                "namespace": "default"
                            },
                            "spec": {
                                "ports": [
                                    {
                                        "port": 80,
                                        "targetPort": 8000
                                    }
                                ],
                                "selector": {
                                    "name": "my-app"
                                },
                                "type": "ClusterIP"
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "creationTimestamp": "2019-03-28T11:25:47Z",
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "name": "my-app"
                            },
                            "name": "my-app",
                            "namespace": "default",
                            "resourceVersion": "826",
                            "selfLink": "/api/v1/namespaces/default/services/my-app",
                            "uid": "3bb0e0b7-514c-11e9-bd09-080027d8d11f"
                        },
                        "spec": {
                            "clusterIP": "10.96.232.248",
                            "ports": [
                                {
                                    "port": 80,
                                    "protocol": "TCP",
                                    "targetPort": 8000
                                }
                            ],
                            "selector": {
                                "name": "my-app"
                            },
                            "sessionAffinity": "None",
                            "type": "ClusterIP"
                        },
                        "status": {
                            "loadBalancer": {}
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::my-app-namespace"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::02267239-103f-4720-b865-18620add8153",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::my-app-namespace"
                        ],
                        "spec": null
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::database$kubernetes:apps/v1:Deployment::database-deployment",
                    "custom": true,
                    "id": "default/database",
                    "type": "kubernetes:apps/v1:Deployment",
                    "inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "name": "database"
                            },
                            "name": "database",
                            "namespace": "default"
                        },
                        "spec": {
                            "selector": {
                                "matchLabels": {
                                    "name": "database"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "name": "database"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "env": [
                                                {
                                                    "name": "POSTGRES_USER",
                                                    "value": "developer"
                                                },
                                                {
                                                    "name": "POSTGRES_PASSWORD",
                                                    "value": "password"
                                                },
                                                {
                                                    "name": "POSTGRES_DB",
                                                    "value": "db"
                                                }
                                            ],
                                            "image": "postgres:10-alpine",
                                            "imagePullPolicy": "IfNotPresent",
                                            "name": "database",
                                            "ports": [
                                                {
                                                    "containerPort": 5432
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "apps/v1",
                            "kind": "Deployment",
                            "metadata": {
                                "labels": {
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "name": "database"
                                },
                                "name": "database",
                                "namespace": "default"
                            },
                            "spec": {
                                "selector": {
                                    "matchLabels": {
                                        "name": "database"
                                    }
                                },
                                "template": {
                                    "metadata": {
                                        "labels": {
                                            "name": "database"
                                        }
                                    },
                                    "spec": {
                                        "containers": [
                                            {
                                                "env": [
                                                    {
                                                        "name": "POSTGRES_USER",
                                                        "value": "developer"
                                                    },
                                                    {
                                                        "name": "POSTGRES_PASSWORD",
                                                        "value": "password"
                                                    },
                                                    {
                                                        "name": "POSTGRES_DB",
                                                        "value": "db"
                                                    }
                                                ],
                                                "image": "postgres:10-alpine",
                                                "imagePullPolicy": "IfNotPresent",
                                                "name": "database",
                                                "ports": [
                                                    {
                                                        "containerPort": 5432
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "deployment.kubernetes.io/revision": "1"
                            },
                            "creationTimestamp": "2019-03-28T11:23:35Z",
                            "generation": 1,
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "name": "database"
                            },
                            "name": "database",
                            "namespace": "default",
                            "resourceVersion": "684",
                            "selfLink": "/apis/apps/v1/namespaces/default/deployments/database",
                            "uid": "ed0e5ced-514b-11e9-bd09-080027d8d11f"
                        },
                        "spec": {
                            "progressDeadlineSeconds": 600,
                            "replicas": 1,
                            "revisionHistoryLimit": 10,
                            "selector": {
                                "matchLabels": {
                                    "name": "database"
                                }
                            },
                            "strategy": {
                                "rollingUpdate": {
                                    "maxSurge": "25%",
                                    "maxUnavailable": "25%"
                                },
                                "type": "RollingUpdate"
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "name": "database"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "env": [
                                                {
                                                    "name": "POSTGRES_USER",
                                                    "value": "developer"
                                                },
                                                {
                                                    "name": "POSTGRES_PASSWORD",
                                                    "value": "password"
                                                },
                                                {
                                                    "name": "POSTGRES_DB",
                                                    "value": "db"
                                                }
                                            ],
                                            "image": "postgres:10-alpine",
                                            "imagePullPolicy": "IfNotPresent",
                                            "name": "database",
                                            "ports": [
                                                {
                                                    "containerPort": 5432,
                                                    "protocol": "TCP"
                                                }
                                            ],
                                            "resources": {},
                                            "terminationMessagePath": "/dev/termination-log",
                                            "terminationMessagePolicy": "File"
                                        }
                                    ],
                                    "dnsPolicy": "ClusterFirst",
                                    "restartPolicy": "Always",
                                    "schedulerName": "default-scheduler",
                                    "securityContext": {},
                                    "terminationGracePeriodSeconds": 30
                                }
                            }
                        },
                        "status": {
                            "availableReplicas": 1,
                            "conditions": [
                                {
                                    "lastTransitionTime": "2019-03-28T11:23:49Z",
                                    "lastUpdateTime": "2019-03-28T11:23:49Z",
                                    "message": "Deployment has minimum availability.",
                                    "reason": "MinimumReplicasAvailable",
                                    "status": "True",
                                    "type": "Available"
                                },
                                {
                                    "lastTransitionTime": "2019-03-28T11:23:35Z",
                                    "lastUpdateTime": "2019-03-28T11:23:49Z",
                                    "message": "ReplicaSet \"database-78dffc\" has successfully progressed.",
                                    "reason": "NewReplicaSetAvailable",
                                    "status": "True",
                                    "type": "Progressing"
                                }
                            ],
                            "observedGeneration": 1,
                            "readyReplicas": 1,
                            "replicas": 1,
                            "updatedReplicas": 1
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::database::database",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::database-namespace"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::minikube::c97cf98f-b0f9-481f-a4b7-6de2570c5dbb",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::database-namespace"
                        ],
                        "spec": null
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Service::database-service",
                    "custom": true,
                    "id": "default/database",
                    "type": "kubernetes:core/v1:Service",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "name": "database"
                            },
                            "name": "database",
                            "namespace": "default"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "port": 5432,
                                    "targetPort": 5432
                                }
                            ],
                            "selector": {
                                "name": "database"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "Service",
                            "metadata": {
                                "labels": {
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "name": "database"
                                },
                                "name": "database",
                                "namespace": "default"
                            },
                            "spec": {
                                "ports": [
                                    {
                                        "port": 5432,
                                        "targetPort": 5432
                                    }
                                ],
                                "selector": {
                                    "name": "database"
                                },
                                "type": "ClusterIP"
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "creationTimestamp": "2019-03-28T11:23:35Z",
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "name": "database"
                            },
                            "name": "database",
                            "namespace": "default",
                            "resourceVersion": "649",
                            "selfLink": "/api/v1/namespaces/default/services/database",
                            "uid": "ed21e37e-514b-11e9-bd09-080027d8d11f"
                        },
                        "spec": {
                            "clusterIP": "10.111.90.90",
                            "ports": [
                                {
                                    "port": 5432,
                                    "protocol": "TCP",
                                    "targetPort": 5432
                                }
                            ],
                            "selector": {
                                "name": "database"
                            },
                            "sessionAffinity": "None",
                            "type": "ClusterIP"
                        },
                        "status": {
                            "loadBalancer": {}
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::database-namespace"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::02267239-103f-4720-b865-18620add8153",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::database-namespace"
                        ],
                        "spec": null
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::pulumi:providers:pulumi-nodejs::default",
                    "custom": true,
                    "id": "261db23a-ac2d-4178-9b2b-70c240b52ec2",
                    "type": "pulumi:providers:pulumi-nodejs"
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::pulumi-nodejs:dynamic:Resource::my-app-image",
                    "custom": true,
                    "id": "sha256:6dd9c1b50e04318d50d6052a313b4c9e87aa0d286e6384045ff794f29b487b3f",
                    "type": "pulumi-nodejs:dynamic:Resource",
                    "inputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\n__f1.prototype = __provider_proto;\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nvar __tar_fs_1 = {default: require(\"tar-fs/index.js\")};\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f2 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f4 });\nvar __dockerode_1 = {default: require(\"dockerode/lib/docker.js\")};\nObject.defineProperty(__provider_proto, \"getDockerClient\", { configurable: true, writable: true, value: __f5 });\nvar __provider = Object.create(__provider_proto);\n\nfunction __f1() {\n  return (function() {\n    with({  }) {\n\nreturn function /*constructor*/() { };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3() {\n  return (function() {\n    with({  }) {\n\nreturn function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __buildImage() {\n  return (function() {\n    with({ __awaiter: __f3, tar_fs_1: __tar_fs_1, buildImage: __buildImage }) {\n\nreturn function /*buildImage*/(client, imageName, build) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const tarStream = tar_fs_1.default.pack(build.context || process.cwd());\n        const options = {\n            t: imageName,\n            // args: build.args,\n            dockerfile: build.dockerfile || 'Dockerfile',\n        };\n        const stream = yield client.buildImage(tarStream, options);\n        // wait for the build to finish.\n        yield new Promise((resolve, reject) =\u003e {\n            client.modem.followProgress(stream, (err, res) =\u003e err ? reject(err) : resolve(res), (progress) =\u003e progress.stream \u0026\u0026 process.stdout.write(progress.stream));\n        });\n        // return the image id\n        const dockerImage = yield client.getImage(imageName).inspect();\n        return dockerImage.Id;\n    });\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2() {\n  return (function() {\n    with({ __awaiter: __f3, buildImage: __buildImage }) {\n\nreturn function /*create*/(inputs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const imageName = inputs.localImageName;\n            let build;\n            if (typeof (inputs.build) === 'string') {\n                build = { context: inputs.build };\n            }\n            else {\n                build = inputs.build;\n            }\n            const imageId = yield buildImage(this.getDockerClient(inputs), imageName, build);\n            return {\n                id: imageId,\n                outs: {\n                    sha: imageId,\n                }\n            };\n        });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4() {\n  return (function() {\n    with({ __awaiter: __f3 }) {\n\nreturn function /*delete*/(id, inputs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getDockerClient(inputs).getImage(id).remove();\n        });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5() {\n  return (function() {\n    with({ dockerode_1: __dockerode_1 }) {\n\nreturn function /*getDockerClient*/(inputs) {\n        return new dockerode_1.default(inputs.dockerEnv);\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider }) {\n\nreturn () =\u003e provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "build": "/home/james/pulumi-example/app/",
                        "dockerEnv": {
                            "ca": "/home/james/.minikube/certs/ca.pem",
                            "cert": "/home/james/.minikube/certs/cert.pem",
                            "host": "192.168.99.102",
                            "key": "/home/james/.minikube/certs/key.pem",
                            "port": 2376
                        },
                        "imageName": "my-app",
                        "localImageName": "my-app",
                        "push": false
                    },
                    "outputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\n__f1.prototype = __provider_proto;\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nvar __tar_fs_1 = {default: require(\"tar-fs/index.js\")};\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f2 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f4 });\nvar __dockerode_1 = {default: require(\"dockerode/lib/docker.js\")};\nObject.defineProperty(__provider_proto, \"getDockerClient\", { configurable: true, writable: true, value: __f5 });\nvar __provider = Object.create(__provider_proto);\n\nfunction __f1() {\n  return (function() {\n    with({  }) {\n\nreturn function /*constructor*/() { };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3() {\n  return (function() {\n    with({  }) {\n\nreturn function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __buildImage() {\n  return (function() {\n    with({ __awaiter: __f3, tar_fs_1: __tar_fs_1, buildImage: __buildImage }) {\n\nreturn function /*buildImage*/(client, imageName, build) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const tarStream = tar_fs_1.default.pack(build.context || process.cwd());\n        const options = {\n            t: imageName,\n            // args: build.args,\n            dockerfile: build.dockerfile || 'Dockerfile',\n        };\n        const stream = yield client.buildImage(tarStream, options);\n        // wait for the build to finish.\n        yield new Promise((resolve, reject) =\u003e {\n            client.modem.followProgress(stream, (err, res) =\u003e err ? reject(err) : resolve(res), (progress) =\u003e progress.stream \u0026\u0026 process.stdout.write(progress.stream));\n        });\n        // return the image id\n        const dockerImage = yield client.getImage(imageName).inspect();\n        return dockerImage.Id;\n    });\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2() {\n  return (function() {\n    with({ __awaiter: __f3, buildImage: __buildImage }) {\n\nreturn function /*create*/(inputs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const imageName = inputs.localImageName;\n            let build;\n            if (typeof (inputs.build) === 'string') {\n                build = { context: inputs.build };\n            }\n            else {\n                build = inputs.build;\n            }\n            const imageId = yield buildImage(this.getDockerClient(inputs), imageName, build);\n            return {\n                id: imageId,\n                outs: {\n                    sha: imageId,\n                }\n            };\n        });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4() {\n  return (function() {\n    with({ __awaiter: __f3 }) {\n\nreturn function /*delete*/(id, inputs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getDockerClient(inputs).getImage(id).remove();\n        });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5() {\n  return (function() {\n    with({ dockerode_1: __dockerode_1 }) {\n\nreturn function /*getDockerClient*/(inputs) {\n        return new dockerode_1.default(inputs.dockerEnv);\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider }) {\n\nreturn () =\u003e provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n"
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev",
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:pulumi-nodejs::default::261db23a-ac2d-4178-9b2b-70c240b52ec2",
                    "propertyDependencies": {
                        "__provider": null,
                        "build": null,
                        "dockerEnv": null,
                        "imageName": null,
                        "localImageName": null,
                        "push": null
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::app$kubernetes:apps/v1:Deployment::my-app-deployment",
                    "custom": true,
                    "id": "default/my-app",
                    "type": "kubernetes:apps/v1:Deployment",
                    "inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "name": "my-app"
                            },
                            "name": "my-app",
                            "namespace": "default"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "name": "my-app"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "name": "my-app"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "env": [
                                                {
                                                    "name": "DB_NAME",
                                                    "value": "db"
                                                },
                                                {
                                                    "name": "DB_USERNAME",
                                                    "value": "developer"
                                                },
                                                {
                                                    "name": "DB_PASSWORD",
                                                    "value": "password"
                                                },
                                                {
                                                    "name": "DB_HOST",
                                                    "value": "database"
                                                },
                                                {
                                                    "name": "DB_PORT",
                                                    "value": "5432"
                                                }
                                            ],
                                            "image": "my-app",
                                            "imagePullPolicy": "IfNotPresent",
                                            "name": "my-app",
                                            "ports": [
                                                {
                                                    "containerPort": 8000
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "apps/v1",
                            "kind": "Deployment",
                            "metadata": {
                                "labels": {
                                    "app.kubernetes.io/managed-by": "pulumi",
                                    "name": "my-app"
                                },
                                "name": "my-app",
                                "namespace": "default"
                            },
                            "spec": {
                                "replicas": 1,
                                "selector": {
                                    "matchLabels": {
                                        "name": "my-app"
                                    }
                                },
                                "template": {
                                    "metadata": {
                                        "labels": {
                                            "name": "my-app"
                                        }
                                    },
                                    "spec": {
                                        "containers": [
                                            {
                                                "env": [
                                                    {
                                                        "name": "DB_NAME",
                                                        "value": "db"
                                                    },
                                                    {
                                                        "name": "DB_USERNAME",
                                                        "value": "developer"
                                                    },
                                                    {
                                                        "name": "DB_PASSWORD",
                                                        "value": "password"
                                                    },
                                                    {
                                                        "name": "DB_HOST",
                                                        "value": "database"
                                                    },
                                                    {
                                                        "name": "DB_PORT",
                                                        "value": "5432"
                                                    }
                                                ],
                                                "image": "my-app",
                                                "imagePullPolicy": "IfNotPresent",
                                                "name": "my-app",
                                                "ports": [
                                                    {
                                                        "containerPort": 8000
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "deployment.kubernetes.io/revision": "1"
                            },
                            "creationTimestamp": "2019-03-30T01:55:20Z",
                            "generation": 1,
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "name": "my-app"
                            },
                            "name": "my-app",
                            "namespace": "default",
                            "resourceVersion": "4389",
                            "selfLink": "/apis/apps/v1/namespaces/default/deployments/my-app",
                            "uid": "e005f793-528e-11e9-8ae7-080027d8d11f"
                        },
                        "spec": {
                            "progressDeadlineSeconds": 600,
                            "replicas": 1,
                            "revisionHistoryLimit": 10,
                            "selector": {
                                "matchLabels": {
                                    "name": "my-app"
                                }
                            },
                            "strategy": {
                                "rollingUpdate": {
                                    "maxSurge": "25%",
                                    "maxUnavailable": "25%"
                                },
                                "type": "RollingUpdate"
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "name": "my-app"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "env": [
                                                {
                                                    "name": "DB_NAME",
                                                    "value": "db"
                                                },
                                                {
                                                    "name": "DB_USERNAME",
                                                    "value": "developer"
                                                },
                                                {
                                                    "name": "DB_PASSWORD",
                                                    "value": "password"
                                                },
                                                {
                                                    "name": "DB_HOST",
                                                    "value": "database"
                                                },
                                                {
                                                    "name": "DB_PORT",
                                                    "value": "5432"
                                                }
                                            ],
                                            "image": "my-app",
                                            "imagePullPolicy": "IfNotPresent",
                                            "name": "my-app",
                                            "ports": [
                                                {
                                                    "containerPort": 8000,
                                                    "protocol": "TCP"
                                                }
                                            ],
                                            "resources": {},
                                            "terminationMessagePath": "/dev/termination-log",
                                            "terminationMessagePolicy": "File"
                                        }
                                    ],
                                    "dnsPolicy": "ClusterFirst",
                                    "restartPolicy": "Always",
                                    "schedulerName": "default-scheduler",
                                    "securityContext": {},
                                    "terminationGracePeriodSeconds": 30
                                }
                            }
                        },
                        "status": {
                            "availableReplicas": 1,
                            "conditions": [
                                {
                                    "lastTransitionTime": "2019-03-30T01:55:22Z",
                                    "lastUpdateTime": "2019-03-30T01:55:22Z",
                                    "message": "Deployment has minimum availability.",
                                    "reason": "MinimumReplicasAvailable",
                                    "status": "True",
                                    "type": "Available"
                                },
                                {
                                    "lastTransitionTime": "2019-03-30T01:55:20Z",
                                    "lastUpdateTime": "2019-03-30T01:55:22Z",
                                    "message": "ReplicaSet \"my-app-57f978dcfd\" has successfully progressed.",
                                    "reason": "NewReplicaSetAvailable",
                                    "status": "True",
                                    "type": "Progressing"
                                }
                            ],
                            "observedGeneration": 1,
                            "readyReplicas": 1,
                            "replicas": 1,
                            "updatedReplicas": 1
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::app::my-app",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::my-app-namespace",
                        "urn:pulumi:dev::pulumi-ts::pulumi-nodejs:dynamic:Resource::my-app-image"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::minikube::c97cf98f-b0f9-481f-a4b7-6de2570c5dbb",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::my-app-namespace"
                        ],
                        "spec": [
                            "urn:pulumi:dev::pulumi-ts::pulumi-nodejs:dynamic:Resource::my-app-image"
                        ]
                    }
                }
            ]
        }
    }
}