{
    "version": 3,
    "checkpoint": {
        "stack": "dev",
        "latest": {
            "manifest": {
                "time": "2019-03-19T01:27:53.175715896-07:00",
                "magic": "10484a8cdf491e982db0cd61c77ceebd9db887d282e029dd992b18630a2c5a32",
                "version": "v0.17.1",
                "plugins": [
                    {
                        "name": "nodejs",
                        "path": "/home/james/go/bin/pulumi-language-nodejs",
                        "type": "language",
                        "version": ""
                    },
                    {
                        "name": "pulumi-nodejs",
                        "path": "/home/james/.pulumi/bin/pulumi-resource-pulumi-nodejs",
                        "type": "resource",
                        "version": "0.16.14"
                    },
                    {
                        "name": "kubernetes",
                        "path": "/home/james/.pulumi/plugins/resource-kubernetes-v0.20.1/pulumi-resource-kubernetes",
                        "type": "resource",
                        "version": "0.20.1"
                    }
                ]
            },
            "resources": [
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev",
                    "custom": false,
                    "type": "pulumi:pulumi:Stack",
                    "outputs": {
                        "app": {
                            "name": "my-app",
                            "options": {
                                "port": 8000,
                                "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::minikube",
                                "src": "/home/james/learning-pulumi/pulumi-ts/app"
                            },
                            "urn": "urn:pulumi:dev::pulumi-ts::app::my-app"
                        },
                        "monitoringStack": {
                            "grafana": {
                                "configMap": {
                                    "apiVersion": "v1",
                                    "data": {
                                        "dashboard-provider.yaml": "apiVersion: 1\nproviders:\n  - name: 'default'\n    folder: ''\n    type: file\n    disableDeletion: false\n    updateIntervalSeconds: 10 # how often Grafana will scan for changed dashboards\n    options:\n      path: /var/lib/grafana/dashboards",
                                        "datasource-provider.yaml": "apiVersion: 1\ndatasources:\n  - name: prometheus\n    type: prometheus\n    access: proxy\n    url: http://prometheus:9090\n    basicAuth: false\n    editable: false\n  - name: loki\n    type: loki\n    access: proxy\n    url: http://loki:3100\n    basicAuth: false\n    editable: false",
                                        "grafana.ini": "[auth.anonymous]\nenabled = true\norg_name = Main Org.\norg_role = Editor\n[auth.basic]\nenabled = false",
                                        "kubernetes-monitoring.json": "{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": \"-- Grafana --\",\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations \u0026 Alerts\",\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"description\": \"https://grafana.com/dashboards/3119 - Monitors Kubernetes cluster using Prometheus. Shows overall cluster CPU / Memory / Filesystem usage as well as individual pod, containers, control plane (as deployed by kops) statistics. Uses cAdvisor metrics only.\\r\\nTweaked from original https://grafana.com/dashboards/315 to add templating for:\\r\\n- adaptable $interval (instead of hardcoded 1m)\\r\\n- selectable $datasource (very useful to have a single dashboard tackling several prometheis )\",\n  \"editable\": true,\n  \"gnetId\": 3119,\n  \"graphTooltip\": 0,\n  \"iteration\": 1541985505736,\n  \"links\": [],\n  \"panels\": [\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 33,\n      \"panels\": [],\n      \"repeat\": null,\n      \"title\": \"Network I/O pressure\",\n      \"type\": \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"fill\": 1,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 1\n      },\n      \"height\": \"200px\",\n      \"id\": 32,\n      \"legend\": {\n        \"alignAsTable\": false,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": false,\n        \"sideWidth\": 200,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"sum (rate (container_network_receive_bytes_total{kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval]))\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"Received\",\n          \"metric\": \"network\",\n          \"refId\": \"A\",\n          \"step\": 10\n        },\n        {\n          \"expr\": \"- sum (rate (container_network_transmit_bytes_total{kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval]))\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"Sent\",\n          \"metric\": \"network\",\n          \"refId\": \"B\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Network I/O pressure\",\n      \"tooltip\": {\n        \"msResolution\": false,\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"cumulative\"\n      },\n      \"transparent\": false,\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"Bps\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"Bps\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 6\n      },\n      \"id\": 34,\n      \"panels\": [],\n      \"repeat\": null,\n      \"title\": \"Total usage\",\n      \"type\": \"row\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": true,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"percent\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": true,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 8,\n        \"x\": 0,\n        \"y\": 7\n      },\n      \"height\": \"180px\",\n      \"id\": 6,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (rate (container_cpu_usage_seconds_total{id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) / sum (machine_cpu_cores{kubernetes_io_hostname=~\\\"^$Node$\\\"}) * 100\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"65, 90\",\n      \"title\": \"Cluster CPU usage ($interval avg)\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"80%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": true,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"percent\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": true,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 8,\n        \"x\": 8,\n        \"y\": 7\n      },\n      \"height\": \"180px\",\n      \"id\": 4,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_memory_working_set_bytes{id=\\\"/\\\", kubernetes_io_hostname=~\\\"^$Node$\\\"}) / sum (machine_memory_bytes{kubernetes_io_hostname=~\\\"^$Node$\\\"}) * 100\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"65, 90\",\n      \"title\": \"Cluster memory usage\",\n      \"transparent\": false,\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"80%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": true,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"percent\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": true,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 8,\n        \"x\": 16,\n        \"y\": 7\n      },\n      \"height\": \"180px\",\n      \"id\": 7,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_fs_usage_bytes{device=~\\\"^/dev/(xvda|sda).$\\\",id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}) / sum (container_fs_limit_bytes{device=~\\\"^/dev/(xvda|sda).$\\\",id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}) * 100\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\",\n          \"metric\": \"\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"65, 90\",\n      \"title\": \"Cluster filesystem usage\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"80%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"none\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 0,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 11,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \" cores\",\n      \"postfixFontSize\": \"30%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (rate (container_cpu_usage_seconds_total{id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval]))\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Used\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"none\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 4,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 12,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \" cores\",\n      \"postfixFontSize\": \"30%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (machine_cpu_cores{kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Total\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"bytes\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 8,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 9,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"20%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"20%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_memory_working_set_bytes{id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Used\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"bytes\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 12,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 10,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (machine_memory_bytes{kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Total\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"bytes\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 16,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 13,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_fs_usage_bytes{device=~\\\"^/dev/(xvda|sda).$\\\",id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Used\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"bytes\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 20,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 14,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_fs_limit_bytes{device=~\\\"^/dev/(xvda|sda).$\\\",id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Total\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 15\n      },\n      \"id\": 47,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": false,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": true,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"(1 - (kubelet_volume_stats_available_bytes{instance=~\\\"^$Node$\\\"} / kubelet_volume_stats_capacity_bytes{instance=~\\\"^$Node$\\\"})) * 100\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{ persistentvolumeclaim }}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Persistent Volume Claim (% Used)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"percent\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": \"100\",\n          \"min\": \"0\",\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 23\n      },\n      \"id\": 37,\n      \"panels\": [],\n      \"repeat\": null,\n      \"title\": \"Containers CPU usage\",\n      \"type\": \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"decimals\": 3,\n      \"editable\": true,\n      \"error\": false,\n      \"fill\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 24\n      },\n      \"height\": \"\",\n      \"id\": 24,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"hideEmpty\": false,\n        \"hideZero\": false,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": true,\n        \"show\": true,\n        \"sideWidth\": null,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": true,\n      \"targets\": [\n        {\n          \"expr\": \"sum (rate (container_cpu_usage_seconds_total{image!=\\\"\\\", name=~\\\"^k8s_.*\\\", container_name!=\\\"POD\\\", namespace=~\\\"^$Namespace$\\\", pod_name=~\\\"^$deployment-.*\\\", pod_name=~\\\"^$Pod$\\\", kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (container_name, pod_name)\",\n          \"format\": \"time_series\",\n          \"hide\": false,\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"pod: {{ pod_name }} | {{ container_name }}\",\n          \"metric\": \"container_cpu\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Containers CPU usage ($interval avg)\",\n      \"tooltip\": {\n        \"msResolution\": true,\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"none\",\n          \"label\": \"cores\",\n          \"logBase\": 1,\n          \"max\": \"1\",\n          \"min\": \"0\",\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 31\n      },\n      \"id\": 41,\n      \"panels\": [],\n      \"repeat\": null,\n      \"title\": \"Containers memory usage\",\n      \"type\": \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"fill\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 32\n      },\n      \"id\": 27,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": true,\n        \"show\": true,\n        \"sideWidth\": 200,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": true,\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_memory_working_set_bytes{image!=\\\"\\\", name=~\\\"^k8s_.*\\\", container_name!=\\\"POD\\\", namespace=~\\\"^$Namespace$\\\", pod_name=~\\\"^$deployment-.*\\\", pod_name=~\\\"^$Pod$\\\", kubernetes_io_hostname=~\\\"^$Node$\\\"}) by (container_name, pod_name)\",\n          \"format\": \"time_series\",\n          \"hide\": false,\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"pod: {{ pod_name }} | {{ container_name }}\",\n          \"metric\": \"container_memory_usage:sort_desc\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Containers memory usage\",\n      \"tooltip\": {\n        \"msResolution\": false,\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"bytes\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"collapsed\": true,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 39\n      },\n      \"id\": 38,\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": \"$datasource\",\n          \"decimals\": 3,\n          \"editable\": true,\n          \"error\": false,\n          \"fill\": 0,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 13,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 33\n          },\n          \"id\": 20,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": false,\n            \"min\": false,\n            \"rightSide\": false,\n            \"show\": true,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n          \"percentage\": false,\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": true,\n          \"targets\": [\n            {\n              \"expr\": \"sum (rate (container_cpu_usage_seconds_total{id!=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (id)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"{{ id }}\",\n              \"metric\": \"container_cpu\",\n              \"refId\": \"A\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeFrom\": null,\n          \"timeShift\": null,\n          \"title\": \"All processes CPU usage ($interval avg)\",\n          \"tooltip\": {\n            \"msResolution\": true,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"buckets\": null,\n            \"mode\": \"time\",\n            \"name\": null,\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"format\": \"none\",\n              \"label\": \"cores\",\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": true\n            },\n            {\n              \"format\": \"short\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false,\n            \"alignLevel\": null\n          }\n        }\n      ],\n      \"repeat\": null,\n      \"title\": \"All processes CPU usage\",\n      \"type\": \"row\"\n    },\n    {\n      \"collapsed\": true,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 40\n      },\n      \"id\": 42,\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": \"$datasource\",\n          \"decimals\": 2,\n          \"editable\": true,\n          \"error\": false,\n          \"fill\": 0,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 13,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 44\n          },\n          \"id\": 28,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": false,\n            \"min\": false,\n            \"rightSide\": false,\n            \"show\": true,\n            \"sideWidth\": 200,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n          \"percentage\": false,\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": true,\n          \"targets\": [\n            {\n              \"expr\": \"sum (container_memory_working_set_bytes{id!=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}) by (id)\",\n              \"format\": \"time_series\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"{{ id }}\",\n              \"metric\": \"container_memory_usage:sort_desc\",\n              \"refId\": \"A\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeFrom\": null,\n          \"timeShift\": null,\n          \"title\": \"All processes memory usage\",\n          \"tooltip\": {\n            \"msResolution\": false,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"buckets\": null,\n            \"mode\": \"time\",\n            \"name\": null,\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"format\": \"bytes\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": true\n            },\n            {\n              \"format\": \"short\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false,\n            \"alignLevel\": null\n          }\n        }\n      ],\n      \"repeat\": null,\n      \"title\": \"All processes memory usage\",\n      \"type\": \"row\"\n    },\n    {\n      \"collapsed\": true,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 41\n      },\n      \"id\": 44,\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": \"$datasource\",\n          \"decimals\": 2,\n          \"editable\": true,\n          \"error\": false,\n          \"fill\": 1,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 7,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 46\n          },\n          \"id\": 30,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": false,\n            \"min\": false,\n            \"rightSide\": true,\n            \"show\": true,\n            \"sideWidth\": 200,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n          \"percentage\": false,\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": false,\n          \"targets\": [\n            {\n              \"expr\": \"sum (rate (container_network_receive_bytes_total{image!=\\\"\\\",name=~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (container_name, pod_name)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"-\u003e pod: {{ pod_name }} | {{ container_name }}\",\n              \"metric\": \"network\",\n              \"refId\": \"B\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"- sum (rate (container_network_transmit_bytes_total{image!=\\\"\\\",name=~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (container_name, pod_name)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"\u003c- pod: {{ pod_name }} | {{ container_name }}\",\n              \"metric\": \"network\",\n              \"refId\": \"D\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"sum (rate (container_network_receive_bytes_total{image!=\\\"\\\",name!~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (kubernetes_io_hostname, name, image)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"-\u003e docker: {{ kubernetes_io_hostname }} | {{ image }} ({{ name }})\",\n              \"metric\": \"network\",\n              \"refId\": \"A\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"- sum (rate (container_network_transmit_bytes_total{image!=\\\"\\\",name!~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (kubernetes_io_hostname, name, image)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"\u003c- docker: {{ kubernetes_io_hostname }} | {{ image }} ({{ name }})\",\n              \"metric\": \"network\",\n              \"refId\": \"C\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"sum (rate (container_network_transmit_bytes_total{rkt_container_name!=\\\"\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (kubernetes_io_hostname, rkt_container_name)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"-\u003e rkt: {{ kubernetes_io_hostname }} | {{ rkt_container_name }}\",\n              \"metric\": \"network\",\n              \"refId\": \"E\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"- sum (rate (container_network_transmit_bytes_total{rkt_container_name!=\\\"\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (kubernetes_io_hostname, rkt_container_name)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"\u003c- rkt: {{ kubernetes_io_hostname }} | {{ rkt_container_name }}\",\n              \"metric\": \"network\",\n              \"refId\": \"F\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeFrom\": null,\n          \"timeShift\": null,\n          \"title\": \"Containers network I/O ($interval avg)\",\n          \"tooltip\": {\n            \"msResolution\": false,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"buckets\": null,\n            \"mode\": \"time\",\n            \"name\": null,\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"format\": \"Bps\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": true\n            },\n            {\n              \"format\": \"short\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false,\n            \"alignLevel\": null\n          }\n        }\n      ],\n      \"repeat\": null,\n      \"title\": \"Containers network I/O\",\n      \"type\": \"row\"\n    },\n    {\n      \"collapsed\": true,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 42\n      },\n      \"id\": 45,\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": \"$datasource\",\n          \"decimals\": 2,\n          \"editable\": true,\n          \"error\": false,\n          \"fill\": 1,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 13,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 47\n          },\n          \"id\": 29,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": false,\n            \"min\": false,\n            \"rightSide\": false,\n            \"show\": true,\n            \"sideWidth\": 200,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n          \"percentage\": false,\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": false,\n          \"targets\": [\n            {\n              \"expr\": \"sum (rate (container_network_receive_bytes_total{id!=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (id)\",\n              \"format\": \"time_series\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"-\u003e {{ id }}\",\n              \"metric\": \"network\",\n              \"refId\": \"A\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"- sum (rate (container_network_transmit_bytes_total{id!=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (id)\",\n              \"format\": \"time_series\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"\u003c- {{ id }}\",\n              \"metric\": \"network\",\n              \"refId\": \"B\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeFrom\": null,\n          \"timeShift\": null,\n          \"title\": \"All processes network I/O ($interval avg)\",\n          \"tooltip\": {\n            \"msResolution\": false,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"buckets\": null,\n            \"mode\": \"time\",\n            \"name\": null,\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"format\": \"Bps\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": true\n            },\n            {\n              \"format\": \"short\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false,\n            \"alignLevel\": null\n          }\n        }\n      ],\n      \"repeat\": null,\n      \"title\": \"All processes network I/O\",\n      \"type\": \"row\"\n    }\n  ],\n  \"refresh\": \"5s\",\n  \"schemaVersion\": 16,\n  \"style\": \"dark\",\n  \"tags\": [\n    \"kubernetes\"\n  ],\n  \"templating\": {\n    \"list\": [\n      {\n        \"auto\": true,\n        \"auto_count\": 20,\n        \"auto_min\": \"2m\",\n        \"current\": {\n          \"text\": \"auto\",\n          \"value\": \"$__auto_interval_interval\"\n        },\n        \"hide\": 0,\n        \"label\": \"Interval\",\n        \"name\": \"interval\",\n        \"options\": [\n          {\n            \"selected\": true,\n            \"text\": \"auto\",\n            \"value\": \"$__auto_interval_interval\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"2m\",\n            \"value\": \"2m\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"5m10m\",\n            \"value\": \"5m10m\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"30m\",\n            \"value\": \"30m\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"1h\",\n            \"value\": \"1h\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"6h\",\n            \"value\": \"6h\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"12h\",\n            \"value\": \"12h\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"1d\",\n            \"value\": \"1d\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"7d\",\n            \"value\": \"7d\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"14d\",\n            \"value\": \"14d\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"30d\",\n            \"value\": \"30d\"\n          }\n        ],\n        \"query\": \"2m,5m10m,30m,1h,6h,12h,1d,7d,14d,30d\",\n        \"refresh\": 2,\n        \"type\": \"interval\"\n      },\n      {\n        \"current\": {\n          \"text\": \"prometheus\",\n          \"value\": \"prometheus\"\n        },\n        \"hide\": 0,\n        \"label\": null,\n        \"name\": \"datasource\",\n        \"options\": [],\n        \"query\": \"prometheus\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"type\": \"datasource\"\n      },\n      {\n        \"allValue\": \".*\",\n        \"current\": {\n          \"tags\": [],\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": \"$datasource\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": null,\n        \"multi\": false,\n        \"name\": \"Node\",\n        \"options\": [],\n        \"query\": \"label_values(kubernetes_io_hostname)\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"sort\": 0,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"allValue\": \".*\",\n        \"current\": {\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": \"$datasource\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Namespace\",\n        \"multi\": false,\n        \"name\": \"Namespace\",\n        \"options\": [],\n        \"query\": \"label_values(namespace)\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"sort\": 0,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"allValue\": \".*\",\n        \"current\": {\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": \"$datasource\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Pod\",\n        \"multi\": false,\n        \"name\": \"Pod\",\n        \"options\": [],\n        \"query\": \"label_values(pod_name)\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"sort\": 0,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"allValue\": \".*\",\n        \"current\": {\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": \"$datasource\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Deployment\",\n        \"multi\": false,\n        \"name\": \"deployment\",\n        \"options\": [],\n        \"query\": \"label_values(pod_name)\",\n        \"refresh\": 1,\n        \"regex\": \"/(\\\\w+)/\",\n        \"sort\": 0,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-5m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"browser\",\n  \"title\": \"Kubernetes - Cluster Monitoring\",\n  \"uid\": \"5zTZMuOmz\",\n  \"version\": 3\n}\n"
                                    },
                                    "id": "default/grafana",
                                    "kind": "ConfigMap",
                                    "metadata": {
                                        "creationTimestamp": "2019-03-19T08:27:19Z",
                                        "labels": {
                                            "name": "grafana"
                                        },
                                        "name": "grafana",
                                        "namespace": "default",
                                        "resourceVersion": "13288",
                                        "selfLink": "/api/v1/namespaces/default/configmaps/grafana",
                                        "uid": "cfee3228-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:Grafana$kubernetes:core/v1:ConfigMap::grafana-config"
                                },
                                "deployment": {
                                    "apiVersion": "apps/v1",
                                    "id": "default/grafana",
                                    "kind": "Deployment",
                                    "metadata": {
                                        "annotations": {
                                            "deployment.kubernetes.io/revision": "1"
                                        },
                                        "creationTimestamp": "2019-03-19T08:27:20Z",
                                        "generation": 1,
                                        "labels": {
                                            "name": "grafana"
                                        },
                                        "name": "grafana",
                                        "namespace": "default",
                                        "resourceVersion": "13334",
                                        "selfLink": "/apis/apps/v1/namespaces/default/deployments/grafana",
                                        "uid": "d02d0100-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "spec": {
                                        "progressDeadlineSeconds": 600,
                                        "replicas": 1,
                                        "revisionHistoryLimit": 10,
                                        "selector": {
                                            "matchLabels": {
                                                "name": "grafana"
                                            }
                                        },
                                        "strategy": {
                                            "rollingUpdate": {
                                                "maxSurge": "25%",
                                                "maxUnavailable": "25%"
                                            },
                                            "type": "RollingUpdate"
                                        },
                                        "template": {
                                            "metadata": {
                                                "labels": {
                                                    "name": "grafana"
                                                },
                                                "name": "grafana",
                                                "namespace": "default"
                                            },
                                            "spec": {
                                                "containers": [
                                                    {
                                                        "image": "grafana/grafana:6.0.0-beta1",
                                                        "imagePullPolicy": "IfNotPresent",
                                                        "name": "grafana",
                                                        "ports": [
                                                            {
                                                                "containerPort": 3000,
                                                                "protocol": "TCP"
                                                            }
                                                        ],
                                                        "resources": {},
                                                        "securityContext": {
                                                            "fsGroup": 472,
                                                            "procMount": "Default",
                                                            "runAsUser": 472
                                                        },
                                                        "terminationMessagePath": "/dev/termination-log",
                                                        "terminationMessagePolicy": "File",
                                                        "volumeMounts": [
                                                            {
                                                                "mountPath": "/var/lib/grafana",
                                                                "name": "grafana-storage"
                                                            },
                                                            {
                                                                "mountPath": "/etc/grafana",
                                                                "name": "grafana-config"
                                                            },
                                                            {
                                                                "mountPath": "/var/lib/grafana/dashboards",
                                                                "name": "grafana-dashboards"
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "dnsPolicy": "ClusterFirst",
                                                "restartPolicy": "Always",
                                                "schedulerName": "default-scheduler",
                                                "securityContext": {},
                                                "terminationGracePeriodSeconds": 30,
                                                "volumes": [
                                                    {
                                                        "name": "grafana-storage",
                                                        "persistentVolumeClaim": {
                                                            "claimName": "grafana"
                                                        }
                                                    },
                                                    {
                                                        "configMap": {
                                                            "defaultMode": 420,
                                                            "items": [
                                                                {
                                                                    "key": "grafana.ini",
                                                                    "path": "grafana.ini"
                                                                },
                                                                {
                                                                    "key": "dashboard-provider.yaml",
                                                                    "path": "provisioning/dashboards/dashboard-provider.yaml"
                                                                },
                                                                {
                                                                    "key": "datasource-provider.yaml",
                                                                    "path": "provisioning/datasources/datasource-provider.yaml"
                                                                }
                                                            ],
                                                            "name": "grafana"
                                                        },
                                                        "name": "grafana-config"
                                                    },
                                                    {
                                                        "configMap": {
                                                            "defaultMode": 420,
                                                            "items": [
                                                                {
                                                                    "key": "kubernetes-monitoring.json",
                                                                    "path": "kubernetes-monitoring.json"
                                                                }
                                                            ],
                                                            "name": "grafana"
                                                        },
                                                        "name": "grafana-dashboards"
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "status": {
                                        "availableReplicas": 1,
                                        "conditions": [
                                            {
                                                "lastTransitionTime": "2019-03-19T08:27:42Z",
                                                "lastUpdateTime": "2019-03-19T08:27:42Z",
                                                "message": "Deployment has minimum availability.",
                                                "reason": "MinimumReplicasAvailable",
                                                "status": "True",
                                                "type": "Available"
                                            },
                                            {
                                                "lastTransitionTime": "2019-03-19T08:27:20Z",
                                                "lastUpdateTime": "2019-03-19T08:27:42Z",
                                                "message": "ReplicaSet \"grafana-77dddfcfcd\" has successfully progressed.",
                                                "reason": "NewReplicaSetAvailable",
                                                "status": "True",
                                                "type": "Progressing"
                                            }
                                        ],
                                        "observedGeneration": 1,
                                        "readyReplicas": 1,
                                        "replicas": 1,
                                        "updatedReplicas": 1
                                    },
                                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:Grafana$kubernetes:apps/v1:Deployment::grafana-deployment"
                                },
                                "pvc": {
                                    "apiVersion": "v1",
                                    "id": "default/grafana",
                                    "kind": "PersistentVolumeClaim",
                                    "metadata": {
                                        "annotations": {
                                            "control-plane.alpha.kubernetes.io/leader": "{\"holderIdentity\":\"be2dc2f6-4959-11e9-9b3d-000c29997d29\",\"leaseDurationSeconds\":15,\"acquireTime\":\"2019-03-19T08:26:40Z\",\"renewTime\":\"2019-03-19T08:26:42Z\",\"leaderTransitions\":0}",
                                            "pv.kubernetes.io/bind-completed": "yes",
                                            "pv.kubernetes.io/bound-by-controller": "yes",
                                            "volume.beta.kubernetes.io/storage-provisioner": "k8s.io/minikube-hostpath"
                                        },
                                        "creationTimestamp": "2019-03-19T08:26:40Z",
                                        "finalizers": [
                                            "kubernetes.io/pvc-protection"
                                        ],
                                        "labels": {
                                            "name": "grafana"
                                        },
                                        "name": "grafana",
                                        "namespace": "default",
                                        "resourceVersion": "13136",
                                        "selfLink": "/api/v1/namespaces/default/persistentvolumeclaims/grafana",
                                        "uid": "b8b00480-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "spec": {
                                        "accessModes": [
                                            "ReadWriteOnce"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "storage": "5Gi"
                                            }
                                        },
                                        "storageClassName": "standard",
                                        "volumeMode": "Filesystem",
                                        "volumeName": "pvc-b8b00480-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "status": {
                                        "accessModes": [
                                            "ReadWriteOnce"
                                        ],
                                        "capacity": {
                                            "storage": "5Gi"
                                        },
                                        "phase": "Bound"
                                    },
                                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:Grafana$kubernetes:core/v1:PersistentVolumeClaim::grafana-storage"
                                },
                                "service": {
                                    "apiVersion": "v1",
                                    "id": "default/grafana",
                                    "kind": "Service",
                                    "metadata": {
                                        "creationTimestamp": "2019-03-19T08:27:42Z",
                                        "labels": {
                                            "name": "grafana"
                                        },
                                        "name": "grafana",
                                        "namespace": "default",
                                        "resourceVersion": "13338",
                                        "selfLink": "/api/v1/namespaces/default/services/grafana",
                                        "uid": "dd9f33e7-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "spec": {
                                        "clusterIP": "10.101.172.208",
                                        "ports": [
                                            {
                                                "port": 3000,
                                                "protocol": "TCP",
                                                "targetPort": 3000
                                            }
                                        ],
                                        "selector": {
                                            "name": "grafana"
                                        },
                                        "sessionAffinity": "None",
                                        "type": "ClusterIP"
                                    },
                                    "status": {
                                        "loadBalancer": {}
                                    },
                                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:Grafana$kubernetes:core/v1:Service::grafana-service"
                                },
                                "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:Grafana::grafana"
                            },
                            "loki": {
                                "configMap": {
                                    "apiVersion": "v1",
                                    "data": {
                                        "loki.yaml": "auth_enabled: false\nserver:\n  http_listen_port: 3100\ningester:\n  lifecycler:\n    ring:\n      store: inmemory\n      replication_factor: 1\nschema_config:\n  configs:\n    - from: 0\n      store: boltdb\n      object_store: filesystem\n      schema: v9\n      index:\n        prefix: index_\n        period: 168h\nstorage_config:\n  boltdb:\n    directory: /var/opt/loki/index\n  filesystem:\n    directory: /var/opt/loki/chunks"
                                    },
                                    "id": "default/loki",
                                    "kind": "ConfigMap",
                                    "metadata": {
                                        "creationTimestamp": "2019-03-19T08:26:39Z",
                                        "labels": {
                                            "name": "loki"
                                        },
                                        "name": "loki",
                                        "namespace": "default",
                                        "resourceVersion": "13072",
                                        "selfLink": "/api/v1/namespaces/default/configmaps/loki",
                                        "uid": "b7ba7236-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:loki$kubernetes:core/v1:ConfigMap::loki-config"
                                },
                                "deployment": {
                                    "apiVersion": "apps/v1",
                                    "id": "default/loki",
                                    "kind": "Deployment",
                                    "metadata": {
                                        "annotations": {
                                            "deployment.kubernetes.io/revision": "1"
                                        },
                                        "creationTimestamp": "2019-03-19T08:26:43Z",
                                        "generation": 1,
                                        "labels": {
                                            "name": "loki"
                                        },
                                        "name": "loki",
                                        "namespace": "default",
                                        "resourceVersion": "13211",
                                        "selfLink": "/apis/apps/v1/namespaces/default/deployments/loki",
                                        "uid": "ba5b49da-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "spec": {
                                        "progressDeadlineSeconds": 600,
                                        "replicas": 1,
                                        "revisionHistoryLimit": 10,
                                        "selector": {
                                            "matchLabels": {
                                                "name": "loki"
                                            }
                                        },
                                        "strategy": {
                                            "rollingUpdate": {
                                                "maxSurge": "25%",
                                                "maxUnavailable": "25%"
                                            },
                                            "type": "RollingUpdate"
                                        },
                                        "template": {
                                            "metadata": {
                                                "labels": {
                                                    "name": "loki"
                                                },
                                                "name": "loki",
                                                "namespace": "default"
                                            },
                                            "spec": {
                                                "containers": [
                                                    {
                                                        "args": [
                                                            "-config.file=/etc/loki/loki.yaml"
                                                        ],
                                                        "image": "grafana/loki:master-ffe1093",
                                                        "imagePullPolicy": "IfNotPresent",
                                                        "name": "loki",
                                                        "ports": [
                                                            {
                                                                "containerPort": 3100,
                                                                "protocol": "TCP"
                                                            }
                                                        ],
                                                        "resources": {},
                                                        "terminationMessagePath": "/dev/termination-log",
                                                        "terminationMessagePolicy": "File",
                                                        "volumeMounts": [
                                                            {
                                                                "mountPath": "/etc/loki",
                                                                "name": "loki-config"
                                                            },
                                                            {
                                                                "mountPath": "/var/opt/loki",
                                                                "name": "loki-storage"
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "dnsPolicy": "ClusterFirst",
                                                "restartPolicy": "Always",
                                                "schedulerName": "default-scheduler",
                                                "securityContext": {},
                                                "terminationGracePeriodSeconds": 30,
                                                "volumes": [
                                                    {
                                                        "configMap": {
                                                            "defaultMode": 420,
                                                            "name": "loki"
                                                        },
                                                        "name": "loki-config"
                                                    },
                                                    {
                                                        "name": "loki-storage",
                                                        "persistentVolumeClaim": {
                                                            "claimName": "loki"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "status": {
                                        "availableReplicas": 1,
                                        "conditions": [
                                            {
                                                "lastTransitionTime": "2019-03-19T08:26:54Z",
                                                "lastUpdateTime": "2019-03-19T08:26:54Z",
                                                "message": "Deployment has minimum availability.",
                                                "reason": "MinimumReplicasAvailable",
                                                "status": "True",
                                                "type": "Available"
                                            },
                                            {
                                                "lastTransitionTime": "2019-03-19T08:26:43Z",
                                                "lastUpdateTime": "2019-03-19T08:26:54Z",
                                                "message": "ReplicaSet \"loki-79b8b5c66d\" has successfully progressed.",
                                                "reason": "NewReplicaSetAvailable",
                                                "status": "True",
                                                "type": "Progressing"
                                            }
                                        ],
                                        "observedGeneration": 1,
                                        "readyReplicas": 1,
                                        "replicas": 1,
                                        "updatedReplicas": 1
                                    },
                                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:loki$kubernetes:apps/v1:Deployment::loki-deployment"
                                },
                                "name": "loki",
                                "persistentVolumeClaim": {
                                    "apiVersion": "v1",
                                    "id": "default/loki",
                                    "kind": "PersistentVolumeClaim",
                                    "metadata": {
                                        "annotations": {
                                            "control-plane.alpha.kubernetes.io/leader": "{\"holderIdentity\":\"be2dc2f6-4959-11e9-9b3d-000c29997d29\",\"leaseDurationSeconds\":15,\"acquireTime\":\"2019-03-19T08:26:40Z\",\"renewTime\":\"2019-03-19T08:26:40Z\",\"leaderTransitions\":1}",
                                            "pv.kubernetes.io/bind-completed": "yes",
                                            "pv.kubernetes.io/bound-by-controller": "yes"
                                        },
                                        "creationTimestamp": "2019-03-19T08:26:40Z",
                                        "finalizers": [
                                            "kubernetes.io/pvc-protection"
                                        ],
                                        "labels": {
                                            "name": "loki"
                                        },
                                        "name": "loki",
                                        "namespace": "default",
                                        "resourceVersion": "13085",
                                        "selfLink": "/api/v1/namespaces/default/persistentvolumeclaims/loki",
                                        "uid": "b835fe8c-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "spec": {
                                        "accessModes": [
                                            "ReadWriteOnce"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "storage": "5Gi"
                                            }
                                        },
                                        "storageClassName": "standard",
                                        "volumeMode": "Filesystem",
                                        "volumeName": "pvc-b835fe8c-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "status": {
                                        "accessModes": [
                                            "ReadWriteOnce"
                                        ],
                                        "capacity": {
                                            "storage": "5Gi"
                                        },
                                        "phase": "Bound"
                                    },
                                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:loki$kubernetes:core/v1:PersistentVolumeClaim::loki-storage"
                                },
                                "service": {
                                    "apiVersion": "v1",
                                    "id": "default/loki",
                                    "kind": "Service",
                                    "metadata": {
                                        "creationTimestamp": "2019-03-19T08:26:41Z",
                                        "labels": {
                                            "name": "loki"
                                        },
                                        "name": "loki",
                                        "namespace": "default",
                                        "resourceVersion": "13124",
                                        "selfLink": "/api/v1/namespaces/default/services/loki",
                                        "uid": "b92ab3e4-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "spec": {
                                        "clusterIP": "10.100.62.189",
                                        "ports": [
                                            {
                                                "port": 3100,
                                                "protocol": "TCP",
                                                "targetPort": 3100
                                            }
                                        ],
                                        "selector": {
                                            "name": "loki"
                                        },
                                        "sessionAffinity": "None",
                                        "type": "ClusterIP"
                                    },
                                    "status": {
                                        "loadBalancer": {}
                                    },
                                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:loki$kubernetes:core/v1:Service::loki-service"
                                },
                                "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:loki::loki"
                            },
                            "namespace": {
                                "apiVersion": "v1",
                                "id": "default",
                                "kind": "Namespace",
                                "metadata": {
                                    "creationTimestamp": "2019-03-17T10:56:06Z",
                                    "name": "default",
                                    "resourceVersion": "4",
                                    "selfLink": "/api/v1/namespaces/default",
                                    "uid": "4376386e-48a3-11e9-a636-000c29997d29"
                                },
                                "spec": {
                                    "finalizers": [
                                        "kubernetes"
                                    ]
                                },
                                "status": {
                                    "phase": "Active"
                                },
                                "urn": "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                            },
                            "prometheus": {
                                "clusterRole": {
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "id": "prometheus",
                                    "kind": "ClusterRole",
                                    "metadata": {
                                        "creationTimestamp": "2019-03-19T08:26:42Z",
                                        "labels": {
                                            "name": "prometheus"
                                        },
                                        "name": "prometheus",
                                        "namespace": "default",
                                        "resourceVersion": "13126",
                                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/prometheus",
                                        "uid": "b967d59a-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "rules": [
                                        {
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes",
                                                "nodes/proxy",
                                                "services",
                                                "endpoints",
                                                "pods"
                                            ],
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ]
                                        },
                                        {
                                            "apiGroups": [
                                                "extensions"
                                            ],
                                            "resources": [
                                                "ingress"
                                            ],
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ]
                                        }
                                    ],
                                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::prometheus-cluster-role"
                                },
                                "clusterRoleBinding": {
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "id": "prometheus",
                                    "kind": "ClusterRoleBinding",
                                    "metadata": {
                                        "creationTimestamp": "2019-03-19T08:26:44Z",
                                        "labels": {
                                            "name": "prometheus"
                                        },
                                        "name": "prometheus",
                                        "namespace": "default",
                                        "resourceVersion": "13173",
                                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/prometheus",
                                        "uid": "baf68628-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "prometheus"
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "prometheus",
                                            "namespace": "default"
                                        }
                                    ],
                                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::prometheus-cluster-role-binding"
                                },
                                "config": {
                                    "apiVersion": "v1",
                                    "data": {
                                        "prometheus.yaml": "scrape_configs:\n- job_name: 'kubernetes-apiservers'\n  kubernetes_sd_configs:\n  - role: endpoints\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: default;kubernetes;https\n- job_name: 'kubernetes-nodes'\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - target_label: __address__\n    replacement: kubernetes.default.svc:443\n  - source_labels: [__meta_kubernetes_node_name]\n    regex: (.+)\n    target_label: __metrics_path__\n    replacement: /api/v1/nodes/$1/proxy/metrics\n- job_name: 'kubernetes-cadvisor'\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - target_label: __address__\n    replacement: kubernetes.default.svc:443\n  - source_labels: [__meta_kubernetes_node_name]\n    regex: (.+)\n    target_label: __metrics_path__\n    replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor\n- job_name: 'kubernetes-service-endpoints'\n  kubernetes_sd_configs:\n  - role: endpoints\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_annotation_example_io_should_be_scraped]\n    action: keep\n    regex: true\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n    action: replace\n    target_label: kubernetes_name\n- job_name: 'kubernetes-pods'\n  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n    action: replace\n    target_label: kubernetes_pod_name"
                                    },
                                    "id": "default/prometheus",
                                    "kind": "ConfigMap",
                                    "metadata": {
                                        "creationTimestamp": "2019-03-19T08:26:39Z",
                                        "labels": {
                                            "name": "prometheus"
                                        },
                                        "name": "prometheus",
                                        "namespace": "default",
                                        "resourceVersion": "13075",
                                        "selfLink": "/api/v1/namespaces/default/configmaps/prometheus",
                                        "uid": "b8177ded-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:core/v1:ConfigMap::prometheus-config"
                                },
                                "deployment": {
                                    "apiVersion": "apps/v1",
                                    "id": "default/prometheus",
                                    "kind": "Deployment",
                                    "metadata": {
                                        "annotations": {
                                            "deployment.kubernetes.io/revision": "1"
                                        },
                                        "creationTimestamp": "2019-03-19T08:26:44Z",
                                        "generation": 1,
                                        "labels": {
                                            "name": "prometheus"
                                        },
                                        "name": "prometheus",
                                        "namespace": "default",
                                        "resourceVersion": "13264",
                                        "selfLink": "/apis/apps/v1/namespaces/default/deployments/prometheus",
                                        "uid": "bad554b6-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "spec": {
                                        "progressDeadlineSeconds": 600,
                                        "replicas": 1,
                                        "revisionHistoryLimit": 10,
                                        "selector": {
                                            "matchLabels": {
                                                "name": "prometheus"
                                            }
                                        },
                                        "strategy": {
                                            "rollingUpdate": {
                                                "maxSurge": "25%",
                                                "maxUnavailable": "25%"
                                            },
                                            "type": "RollingUpdate"
                                        },
                                        "template": {
                                            "metadata": {
                                                "labels": {
                                                    "name": "prometheus"
                                                },
                                                "name": "prometheus",
                                                "namespace": "default"
                                            },
                                            "spec": {
                                                "containers": [
                                                    {
                                                        "args": [
                                                            "--config.file=/etc/prometheus/prometheus.yaml",
                                                            "--storage.tsdb.path=/prometheus",
                                                            "--storage.tsdb.retention=48h"
                                                        ],
                                                        "image": "prom/prometheus:v2.4.3",
                                                        "imagePullPolicy": "IfNotPresent",
                                                        "name": "prometheus",
                                                        "ports": [
                                                            {
                                                                "containerPort": 9090,
                                                                "protocol": "TCP"
                                                            }
                                                        ],
                                                        "resources": {},
                                                        "terminationMessagePath": "/dev/termination-log",
                                                        "terminationMessagePolicy": "File",
                                                        "volumeMounts": [
                                                            {
                                                                "mountPath": "/prometheus",
                                                                "name": "prometheus-storage"
                                                            },
                                                            {
                                                                "mountPath": "/etc/prometheus",
                                                                "name": "prometheus-config"
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "dnsPolicy": "ClusterFirst",
                                                "restartPolicy": "Always",
                                                "schedulerName": "default-scheduler",
                                                "securityContext": {
                                                    "fsGroup": 2000
                                                },
                                                "serviceAccount": "prometheus",
                                                "serviceAccountName": "prometheus",
                                                "terminationGracePeriodSeconds": 30,
                                                "volumes": [
                                                    {
                                                        "name": "prometheus-storage",
                                                        "persistentVolumeClaim": {
                                                            "claimName": "prometheus"
                                                        }
                                                    },
                                                    {
                                                        "configMap": {
                                                            "defaultMode": 420,
                                                            "name": "prometheus"
                                                        },
                                                        "name": "prometheus-config"
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "status": {
                                        "availableReplicas": 1,
                                        "conditions": [
                                            {
                                                "lastTransitionTime": "2019-03-19T08:27:09Z",
                                                "lastUpdateTime": "2019-03-19T08:27:09Z",
                                                "message": "Deployment has minimum availability.",
                                                "reason": "MinimumReplicasAvailable",
                                                "status": "True",
                                                "type": "Available"
                                            },
                                            {
                                                "lastTransitionTime": "2019-03-19T08:26:44Z",
                                                "lastUpdateTime": "2019-03-19T08:27:09Z",
                                                "message": "ReplicaSet \"prometheus-76b4796d98\" has successfully progressed.",
                                                "reason": "NewReplicaSetAvailable",
                                                "status": "True",
                                                "type": "Progressing"
                                            }
                                        ],
                                        "observedGeneration": 1,
                                        "readyReplicas": 1,
                                        "replicas": 1,
                                        "updatedReplicas": 1
                                    },
                                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:apps/v1:Deployment::prometheus"
                                },
                                "name": "prometheus",
                                "options": {
                                    "namespace": "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                                },
                                "pvc": {
                                    "apiVersion": "v1",
                                    "id": "default/prometheus",
                                    "kind": "PersistentVolumeClaim",
                                    "metadata": {
                                        "annotations": {
                                            "control-plane.alpha.kubernetes.io/leader": "{\"holderIdentity\":\"be2dc2f6-4959-11e9-9b3d-000c29997d29\",\"leaseDurationSeconds\":15,\"acquireTime\":\"2019-03-19T08:26:39Z\",\"renewTime\":\"2019-03-19T08:26:39Z\",\"leaderTransitions\":1}",
                                            "pv.kubernetes.io/bind-completed": "yes",
                                            "pv.kubernetes.io/bound-by-controller": "yes"
                                        },
                                        "creationTimestamp": "2019-03-19T08:26:39Z",
                                        "finalizers": [
                                            "kubernetes.io/pvc-protection"
                                        ],
                                        "labels": {
                                            "name": "prometheus"
                                        },
                                        "name": "prometheus",
                                        "namespace": "default",
                                        "resourceVersion": "13070",
                                        "selfLink": "/api/v1/namespaces/default/persistentvolumeclaims/prometheus",
                                        "uid": "b7a27033-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "spec": {
                                        "accessModes": [
                                            "ReadWriteOnce"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "storage": "5Gi"
                                            }
                                        },
                                        "storageClassName": "standard",
                                        "volumeMode": "Filesystem",
                                        "volumeName": "pvc-b7a27033-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "status": {
                                        "accessModes": [
                                            "ReadWriteOnce"
                                        ],
                                        "capacity": {
                                            "storage": "5Gi"
                                        },
                                        "phase": "Bound"
                                    },
                                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:core/v1:PersistentVolumeClaim::prometheus-storage"
                                },
                                "service": {
                                    "apiVersion": "v1",
                                    "id": "default/prometheus",
                                    "kind": "Service",
                                    "metadata": {
                                        "creationTimestamp": "2019-03-19T08:27:09Z",
                                        "labels": {
                                            "name": "prometheus"
                                        },
                                        "name": "prometheus",
                                        "namespace": "default",
                                        "resourceVersion": "13266",
                                        "selfLink": "/api/v1/namespaces/default/services/prometheus",
                                        "uid": "c9ca4cdd-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "spec": {
                                        "clusterIP": "10.107.81.254",
                                        "ports": [
                                            {
                                                "port": 9090,
                                                "protocol": "TCP",
                                                "targetPort": 9090
                                            }
                                        ],
                                        "selector": {
                                            "name": "prometheus"
                                        },
                                        "sessionAffinity": "None",
                                        "type": "ClusterIP"
                                    },
                                    "status": {
                                        "loadBalancer": {}
                                    },
                                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:core/v1:Service::prometheus-service"
                                },
                                "serviceAccount": {
                                    "apiVersion": "v1",
                                    "id": "default/prometheus",
                                    "kind": "ServiceAccount",
                                    "metadata": {
                                        "creationTimestamp": "2019-03-19T08:26:40Z",
                                        "labels": {
                                            "name": "prometheus"
                                        },
                                        "name": "prometheus",
                                        "namespace": "default",
                                        "resourceVersion": "13089",
                                        "selfLink": "/api/v1/namespaces/default/serviceaccounts/prometheus",
                                        "uid": "b87369fc-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "secrets": [
                                        {
                                            "name": "prometheus-token-bclsk"
                                        }
                                    ],
                                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:core/v1:ServiceAccount::prometheus-service-account"
                                },
                                "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus::prometheus"
                            },
                            "promtail": {
                                "clusterRole": {
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "id": "promtail",
                                    "kind": "ClusterRole",
                                    "metadata": {
                                        "creationTimestamp": "2019-03-19T08:26:41Z",
                                        "labels": {
                                            "name": "promtail"
                                        },
                                        "name": "promtail",
                                        "namespace": "default",
                                        "resourceVersion": "13114",
                                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/promtail",
                                        "uid": "b8ceb37e-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "rules": [
                                        {
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes",
                                                "nodes/proxy",
                                                "services",
                                                "endpoints",
                                                "pods"
                                            ],
                                            "verbs": [
                                                "get",
                                                "watch",
                                                "list"
                                            ]
                                        }
                                    ],
                                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::promtail-cluster-role"
                                },
                                "clusterRoleBinding": {
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "id": "promtail",
                                    "kind": "ClusterRoleBinding",
                                    "metadata": {
                                        "creationTimestamp": "2019-03-19T08:26:44Z",
                                        "labels": {
                                            "name": "promtail"
                                        },
                                        "name": "promtail",
                                        "namespace": "default",
                                        "resourceVersion": "13174",
                                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/promtail",
                                        "uid": "bb13daa6-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "promtail"
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "promtail",
                                            "namespace": "default"
                                        }
                                    ],
                                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::promtail-cluster-role-binding"
                                },
                                "configMap": {
                                    "apiVersion": "v1",
                                    "data": {
                                        "promtail.yaml": "scrape_configs:\n  - job_name: kubernetes-pods\n    kubernetes_sd_configs:\n    - role: pod\n    relabel_configs:\n    - source_labels:\n      - __meta_kubernetes_pod_node_name\n      target_label: __host__\n    - action: drop\n      regex: ^$\n      source_labels:\n      - __meta_kubernetes_pod_label_name\n    - action: replace\n      replacement: $1\n      separator: /\n      source_labels:\n      - __meta_kubernetes_namespace\n      - __meta_kubernetes_pod_label_name\n      target_label: job\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_namespace\n      target_label: namespace\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_pod_name\n      target_label: instance\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_pod_container_name\n      target_label: container_name\n    - action: labelmap\n      regex: __meta_kubernetes_pod_label_(.+)\n    - replacement: /var/log/pods/$1/*.log\n      separator: /\n      source_labels:\n      - __meta_kubernetes_pod_uid\n      - __meta_kubernetes_pod_container_name\n      target_label: __path__\n  - job_name: kubernetes-pods-app\n    kubernetes_sd_configs:\n    - role: pod\n    relabel_configs:\n    - source_labels:\n      - __meta_kubernetes_pod_node_name\n      target_label: __host__\n    - action: drop\n      regex: ^$\n      source_labels:\n      - __meta_kubernetes_pod_label_app\n    - action: replace\n      replacement: $1\n      separator: /\n      source_labels:\n      - __meta_kubernetes_namespace\n      - __meta_kubernetes_pod_label_app\n      target_label: job\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_namespace\n      target_label: namespace\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_pod_name\n      target_label: instance\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_pod_container_name\n      target_label: container_name\n    - action: labelmap\n      regex: __meta_kubernetes_pod_label_(.+)\n    - replacement: /var/log/pods/$1/*.log\n      separator: /\n      source_labels:\n      - __meta_kubernetes_pod_uid\n      - __meta_kubernetes_pod_container_name\n      target_label: __path__"
                                    },
                                    "id": "default/promtail",
                                    "kind": "ConfigMap",
                                    "metadata": {
                                        "creationTimestamp": "2019-03-19T08:26:39Z",
                                        "labels": {
                                            "name": "promtail"
                                        },
                                        "name": "promtail",
                                        "namespace": "default",
                                        "resourceVersion": "13074",
                                        "selfLink": "/api/v1/namespaces/default/configmaps/promtail",
                                        "uid": "b7e5c8ae-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:core/v1:ConfigMap::promtail-config"
                                },
                                "daemonset": {
                                    "apiVersion": "apps/v1",
                                    "id": "default/promtail",
                                    "kind": "DaemonSet",
                                    "metadata": {
                                        "annotations": {
                                            "deprecated.daemonset.template.generation": "1"
                                        },
                                        "creationTimestamp": "2019-03-19T08:27:05Z",
                                        "generation": 1,
                                        "labels": {
                                            "name": "promtail"
                                        },
                                        "name": "promtail",
                                        "namespace": "default",
                                        "resourceVersion": "13240",
                                        "selfLink": "/apis/apps/v1/namespaces/default/daemonsets/promtail",
                                        "uid": "c7288fad-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "spec": {
                                        "revisionHistoryLimit": 10,
                                        "selector": {
                                            "matchLabels": {
                                                "name": "promtail"
                                            }
                                        },
                                        "template": {
                                            "metadata": {
                                                "labels": {
                                                    "name": "promtail"
                                                },
                                                "name": "promtail",
                                                "namespace": "default"
                                            },
                                            "spec": {
                                                "containers": [
                                                    {
                                                        "args": [
                                                            "-config.file=/etc/promtail/promtail.yaml",
                                                            "-client.url=http://loki:3100/api/prom/push"
                                                        ],
                                                        "env": [
                                                            {
                                                                "name": "HOSTNAME",
                                                                "valueFrom": {
                                                                    "fieldRef": {
                                                                        "apiVersion": "v1",
                                                                        "fieldPath": "spec.nodeName"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "image": "grafana/promtail:master-ffe1093",
                                                        "imagePullPolicy": "IfNotPresent",
                                                        "name": "promtail",
                                                        "ports": [
                                                            {
                                                                "containerPort": 3100,
                                                                "protocol": "TCP"
                                                            }
                                                        ],
                                                        "resources": {},
                                                        "securityContext": {
                                                            "privileged": true,
                                                            "procMount": "Default",
                                                            "runAsUser": 0
                                                        },
                                                        "terminationMessagePath": "/dev/termination-log",
                                                        "terminationMessagePolicy": "File",
                                                        "volumeMounts": [
                                                            {
                                                                "mountPath": "/etc/promtail",
                                                                "name": "promtail-config"
                                                            },
                                                            {
                                                                "mountPath": "/var/log",
                                                                "name": "varlog"
                                                            },
                                                            {
                                                                "mountPath": "/var/lib/docker/containers",
                                                                "name": "varlibdockercontainers"
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "dnsPolicy": "ClusterFirst",
                                                "restartPolicy": "Always",
                                                "schedulerName": "default-scheduler",
                                                "securityContext": {},
                                                "serviceAccount": "promtail",
                                                "serviceAccountName": "promtail",
                                                "terminationGracePeriodSeconds": 30,
                                                "volumes": [
                                                    {
                                                        "configMap": {
                                                            "defaultMode": 420,
                                                            "name": "promtail"
                                                        },
                                                        "name": "promtail-config"
                                                    },
                                                    {
                                                        "hostPath": {
                                                            "path": "/var/log",
                                                            "type": ""
                                                        },
                                                        "name": "varlog"
                                                    },
                                                    {
                                                        "hostPath": {
                                                            "path": "/var/lib/docker/containers",
                                                            "type": ""
                                                        },
                                                        "name": "varlibdockercontainers"
                                                    }
                                                ]
                                            }
                                        },
                                        "updateStrategy": {
                                            "rollingUpdate": {
                                                "maxUnavailable": 1
                                            },
                                            "type": "RollingUpdate"
                                        }
                                    },
                                    "status": {
                                        "currentNumberScheduled": 0,
                                        "desiredNumberScheduled": 0,
                                        "numberMisscheduled": 0,
                                        "numberReady": 0
                                    },
                                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:apps/v1:DaemonSet::promtail-daemonset"
                                },
                                "name": "promtail",
                                "options": {
                                    "loki": "urn:pulumi:dev::pulumi-ts::james:monitoring:loki::loki",
                                    "namespace": "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                                },
                                "serviceAccount": {
                                    "apiVersion": "v1",
                                    "id": "default/promtail",
                                    "kind": "ServiceAccount",
                                    "metadata": {
                                        "creationTimestamp": "2019-03-19T08:26:41Z",
                                        "labels": {
                                            "name": "promtail"
                                        },
                                        "name": "promtail",
                                        "namespace": "default",
                                        "resourceVersion": "13121",
                                        "selfLink": "/api/v1/namespaces/default/serviceaccounts/promtail",
                                        "uid": "b8ed07ae-4a20-11e9-ba02-000c29997d29"
                                    },
                                    "secrets": [
                                        {
                                            "name": "promtail-token-c875t"
                                        }
                                    ],
                                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:core/v1:ServiceAccount::promtail-service-account"
                                },
                                "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail::promtail"
                            },
                            "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:MonitoringStack::monitoring-stack"
                        },
                        "provider": {
                            "context": "minikube",
                            "id": "2c5bbefb-71cd-4bc4-a0af-b2bee92fb7c9",
                            "urn": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::minikube"
                        }
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default",
                    "custom": true,
                    "id": "3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "type": "pulumi:providers:kubernetes",
                    "inputs": {
                        "version": "0.20.1"
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:loki::loki",
                    "custom": false,
                    "type": "james:monitoring:loki",
                    "parent": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev"
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:MonitoringStack::monitoring-stack",
                    "custom": false,
                    "type": "james:monitoring:MonitoringStack",
                    "parent": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev"
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus::prometheus",
                    "custom": false,
                    "type": "james:monitoring:prometheus",
                    "parent": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev"
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:Grafana::grafana",
                    "custom": false,
                    "type": "james:monitoring:Grafana",
                    "parent": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev"
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::app::my-app",
                    "custom": false,
                    "type": "app",
                    "parent": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev"
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail::promtail",
                    "custom": false,
                    "type": "james:monitoring:promtail",
                    "parent": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev"
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::minikube",
                    "custom": true,
                    "id": "2c5bbefb-71cd-4bc4-a0af-b2bee92fb7c9",
                    "type": "pulumi:providers:kubernetes",
                    "inputs": {
                        "context": "minikube"
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev",
                    "propertyDependencies": {
                        "context": null
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::pulumi:providers:pulumi-nodejs::default",
                    "custom": true,
                    "id": "2eb3917b-cdd0-46df-9b7f-d14dfb32499d",
                    "type": "pulumi:providers:pulumi-nodejs"
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace",
                    "custom": true,
                    "id": "default",
                    "type": "kubernetes:core/v1:Namespace",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace"
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "Namespace",
                            "metadata": {
                                "name": "default"
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "creationTimestamp": "2019-03-17T10:56:06Z",
                            "name": "default",
                            "resourceVersion": "4",
                            "selfLink": "/api/v1/namespaces/default",
                            "uid": "4376386e-48a3-11e9-a636-000c29997d29"
                        },
                        "spec": {
                            "finalizers": [
                                "kubernetes"
                            ]
                        },
                        "status": {
                            "phase": "Active"
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev",
                    "external": true,
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba"
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::my-app-namespace",
                    "custom": true,
                    "id": "default",
                    "type": "kubernetes:core/v1:Namespace",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace"
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "Namespace",
                            "metadata": {
                                "name": "default"
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "creationTimestamp": "2019-03-17T10:56:06Z",
                            "name": "default",
                            "resourceVersion": "4",
                            "selfLink": "/api/v1/namespaces/default",
                            "uid": "4376386e-48a3-11e9-a636-000c29997d29"
                        },
                        "spec": {
                            "finalizers": [
                                "kubernetes"
                            ]
                        },
                        "status": {
                            "phase": "Active"
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev",
                    "external": true,
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba"
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::pulumi-nodejs:dynamic:Resource::my-app-image",
                    "custom": true,
                    "id": "sha256:f2d0f71eac8328d02837d6918e08738abafce469d524a9ee913f73b4442aac28",
                    "type": "pulumi-nodejs:dynamic:Resource",
                    "inputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\n__f1.prototype = __provider_proto;\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f2 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f4 });\nvar __provider = Object.create(__provider_proto);\n\nfunction __f1() {\n  return (function() {\n    with({  }) {\n\nreturn function /*constructor*/() { };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3() {\n  return (function() {\n    with({  }) {\n\nreturn function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __exec() {\n  return (function() {\n    with({ cp: require(\"child_process\"), exec: __exec }) {\n\nreturn function /*exec*/(command, options = { cwd: process.cwd() }) {\n    return new Promise((resolve, reject) =\u003e {\n        cp.exec(command, Object.assign({}, options), (err, stdout, stderr) =\u003e {\n            if (err) {\n                reject(err);\n                return;\n            }\n            resolve({ stdout, stderr });\n        });\n    });\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2() {\n  return (function() {\n    with({ __awaiter: __f3, exec: __exec }) {\n\nreturn function /*create*/(inputs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const imageName = inputs.localImageName;\n            const context = inputs.build;\n            const { stdout } = yield exec(`docker build -q -t ${imageName} ${context}`);\n            const imageId = stdout.trim();\n            return {\n                id: stdout.trim(),\n                outs: {\n                    sha: imageId,\n                }\n            };\n        });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4() {\n  return (function() {\n    with({ __awaiter: __f3, exec: __exec }) {\n\nreturn function /*delete*/(id, props) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield exec(`docker rmi ${id}`);\n        });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider }) {\n\nreturn () =\u003e provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "build": "/home/james/learning-pulumi/pulumi-ts/app",
                        "imageName": "my-app",
                        "localImageName": "my-app"
                    },
                    "outputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\n__f1.prototype = __provider_proto;\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f2 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f4 });\nvar __provider = Object.create(__provider_proto);\n\nfunction __f1() {\n  return (function() {\n    with({  }) {\n\nreturn function /*constructor*/() { };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3() {\n  return (function() {\n    with({  }) {\n\nreturn function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __exec() {\n  return (function() {\n    with({ cp: require(\"child_process\"), exec: __exec }) {\n\nreturn function /*exec*/(command, options = { cwd: process.cwd() }) {\n    return new Promise((resolve, reject) =\u003e {\n        cp.exec(command, Object.assign({}, options), (err, stdout, stderr) =\u003e {\n            if (err) {\n                reject(err);\n                return;\n            }\n            resolve({ stdout, stderr });\n        });\n    });\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2() {\n  return (function() {\n    with({ __awaiter: __f3, exec: __exec }) {\n\nreturn function /*create*/(inputs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const imageName = inputs.localImageName;\n            const context = inputs.build;\n            const { stdout } = yield exec(`docker build -q -t ${imageName} ${context}`);\n            const imageId = stdout.trim();\n            return {\n                id: stdout.trim(),\n                outs: {\n                    sha: imageId,\n                }\n            };\n        });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4() {\n  return (function() {\n    with({ __awaiter: __f3, exec: __exec }) {\n\nreturn function /*delete*/(id, props) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield exec(`docker rmi ${id}`);\n        });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider }) {\n\nreturn () =\u003e provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "sha": "sha256:f2d0f71eac8328d02837d6918e08738abafce469d524a9ee913f73b4442aac28"
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev",
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:pulumi-nodejs::default::2eb3917b-cdd0-46df-9b7f-d14dfb32499d",
                    "propertyDependencies": {
                        "__provider": null,
                        "build": null,
                        "imageName": null,
                        "localImageName": null
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:loki$kubernetes:core/v1:ConfigMap::loki-config",
                    "custom": true,
                    "id": "default/loki",
                    "type": "kubernetes:core/v1:ConfigMap",
                    "inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "loki.yaml": "auth_enabled: false\nserver:\n  http_listen_port: 3100\ningester:\n  lifecycler:\n    ring:\n      store: inmemory\n      replication_factor: 1\nschema_config:\n  configs:\n    - from: 0\n      store: boltdb\n      object_store: filesystem\n      schema: v9\n      index:\n        prefix: index_\n        period: 168h\nstorage_config:\n  boltdb:\n    directory: /var/opt/loki/index\n  filesystem:\n    directory: /var/opt/loki/chunks"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "name": "loki"
                            },
                            "name": "loki",
                            "namespace": "default"
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "v1",
                            "data": {
                                "loki.yaml": "auth_enabled: false\nserver:\n  http_listen_port: 3100\ningester:\n  lifecycler:\n    ring:\n      store: inmemory\n      replication_factor: 1\nschema_config:\n  configs:\n    - from: 0\n      store: boltdb\n      object_store: filesystem\n      schema: v9\n      index:\n        prefix: index_\n        period: 168h\nstorage_config:\n  boltdb:\n    directory: /var/opt/loki/index\n  filesystem:\n    directory: /var/opt/loki/chunks"
                            },
                            "kind": "ConfigMap",
                            "metadata": {
                                "labels": {
                                    "name": "loki"
                                },
                                "name": "loki",
                                "namespace": "default"
                            }
                        },
                        "apiVersion": "v1",
                        "data": {
                            "loki.yaml": "auth_enabled: false\nserver:\n  http_listen_port: 3100\ningester:\n  lifecycler:\n    ring:\n      store: inmemory\n      replication_factor: 1\nschema_config:\n  configs:\n    - from: 0\n      store: boltdb\n      object_store: filesystem\n      schema: v9\n      index:\n        prefix: index_\n        period: 168h\nstorage_config:\n  boltdb:\n    directory: /var/opt/loki/index\n  filesystem:\n    directory: /var/opt/loki/chunks"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "creationTimestamp": "2019-03-19T08:26:39Z",
                            "labels": {
                                "name": "loki"
                            },
                            "name": "loki",
                            "namespace": "default",
                            "resourceVersion": "13072",
                            "selfLink": "/api/v1/namespaces/default/configmaps/loki",
                            "uid": "b7ba7236-4a20-11e9-ba02-000c29997d29"
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:loki::loki",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "data": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ]
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:rbac.authorization.k8s.io/v1:Role::promtail-role",
                    "custom": true,
                    "id": "default/promtail",
                    "type": "kubernetes:rbac.authorization.k8s.io/v1:Role",
                    "inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "labels": {
                                "name": "promtail"
                            },
                            "name": "promtail",
                            "namespace": "default"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "extensions"
                                ],
                                "resourceNames": [
                                    "promtail"
                                ],
                                "resources": [
                                    "podsecuritypolicies"
                                ],
                                "verbs": [
                                    "use"
                                ]
                            }
                        ]
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "kind": "Role",
                            "metadata": {
                                "labels": {
                                    "name": "promtail"
                                },
                                "name": "promtail",
                                "namespace": "default"
                            },
                            "rules": [
                                {
                                    "apiGroups": [
                                        "extensions"
                                    ],
                                    "resourceNames": [
                                        "promtail"
                                    ],
                                    "resources": [
                                        "podsecuritypolicies"
                                    ],
                                    "verbs": [
                                        "use"
                                    ]
                                }
                            ]
                        },
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "creationTimestamp": "2019-03-19T08:26:39Z",
                            "labels": {
                                "name": "promtail"
                            },
                            "name": "promtail",
                            "namespace": "default",
                            "resourceVersion": "13073",
                            "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/default/roles/promtail",
                            "uid": "b7d104c9-4a20-11e9-ba02-000c29997d29"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "extensions"
                                ],
                                "resourceNames": [
                                    "promtail"
                                ],
                                "resources": [
                                    "podsecuritypolicies"
                                ],
                                "verbs": [
                                    "use"
                                ]
                            }
                        ]
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail::promtail",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ],
                        "rules": null
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:core/v1:ConfigMap::promtail-config",
                    "custom": true,
                    "id": "default/promtail",
                    "type": "kubernetes:core/v1:ConfigMap",
                    "inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "promtail.yaml": "scrape_configs:\n  - job_name: kubernetes-pods\n    kubernetes_sd_configs:\n    - role: pod\n    relabel_configs:\n    - source_labels:\n      - __meta_kubernetes_pod_node_name\n      target_label: __host__\n    - action: drop\n      regex: ^$\n      source_labels:\n      - __meta_kubernetes_pod_label_name\n    - action: replace\n      replacement: $1\n      separator: /\n      source_labels:\n      - __meta_kubernetes_namespace\n      - __meta_kubernetes_pod_label_name\n      target_label: job\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_namespace\n      target_label: namespace\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_pod_name\n      target_label: instance\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_pod_container_name\n      target_label: container_name\n    - action: labelmap\n      regex: __meta_kubernetes_pod_label_(.+)\n    - replacement: /var/log/pods/$1/*.log\n      separator: /\n      source_labels:\n      - __meta_kubernetes_pod_uid\n      - __meta_kubernetes_pod_container_name\n      target_label: __path__\n  - job_name: kubernetes-pods-app\n    kubernetes_sd_configs:\n    - role: pod\n    relabel_configs:\n    - source_labels:\n      - __meta_kubernetes_pod_node_name\n      target_label: __host__\n    - action: drop\n      regex: ^$\n      source_labels:\n      - __meta_kubernetes_pod_label_app\n    - action: replace\n      replacement: $1\n      separator: /\n      source_labels:\n      - __meta_kubernetes_namespace\n      - __meta_kubernetes_pod_label_app\n      target_label: job\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_namespace\n      target_label: namespace\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_pod_name\n      target_label: instance\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_pod_container_name\n      target_label: container_name\n    - action: labelmap\n      regex: __meta_kubernetes_pod_label_(.+)\n    - replacement: /var/log/pods/$1/*.log\n      separator: /\n      source_labels:\n      - __meta_kubernetes_pod_uid\n      - __meta_kubernetes_pod_container_name\n      target_label: __path__"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "name": "promtail"
                            },
                            "name": "promtail",
                            "namespace": "default"
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "v1",
                            "data": {
                                "promtail.yaml": "scrape_configs:\n  - job_name: kubernetes-pods\n    kubernetes_sd_configs:\n    - role: pod\n    relabel_configs:\n    - source_labels:\n      - __meta_kubernetes_pod_node_name\n      target_label: __host__\n    - action: drop\n      regex: ^$\n      source_labels:\n      - __meta_kubernetes_pod_label_name\n    - action: replace\n      replacement: $1\n      separator: /\n      source_labels:\n      - __meta_kubernetes_namespace\n      - __meta_kubernetes_pod_label_name\n      target_label: job\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_namespace\n      target_label: namespace\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_pod_name\n      target_label: instance\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_pod_container_name\n      target_label: container_name\n    - action: labelmap\n      regex: __meta_kubernetes_pod_label_(.+)\n    - replacement: /var/log/pods/$1/*.log\n      separator: /\n      source_labels:\n      - __meta_kubernetes_pod_uid\n      - __meta_kubernetes_pod_container_name\n      target_label: __path__\n  - job_name: kubernetes-pods-app\n    kubernetes_sd_configs:\n    - role: pod\n    relabel_configs:\n    - source_labels:\n      - __meta_kubernetes_pod_node_name\n      target_label: __host__\n    - action: drop\n      regex: ^$\n      source_labels:\n      - __meta_kubernetes_pod_label_app\n    - action: replace\n      replacement: $1\n      separator: /\n      source_labels:\n      - __meta_kubernetes_namespace\n      - __meta_kubernetes_pod_label_app\n      target_label: job\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_namespace\n      target_label: namespace\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_pod_name\n      target_label: instance\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_pod_container_name\n      target_label: container_name\n    - action: labelmap\n      regex: __meta_kubernetes_pod_label_(.+)\n    - replacement: /var/log/pods/$1/*.log\n      separator: /\n      source_labels:\n      - __meta_kubernetes_pod_uid\n      - __meta_kubernetes_pod_container_name\n      target_label: __path__"
                            },
                            "kind": "ConfigMap",
                            "metadata": {
                                "labels": {
                                    "name": "promtail"
                                },
                                "name": "promtail",
                                "namespace": "default"
                            }
                        },
                        "apiVersion": "v1",
                        "data": {
                            "promtail.yaml": "scrape_configs:\n  - job_name: kubernetes-pods\n    kubernetes_sd_configs:\n    - role: pod\n    relabel_configs:\n    - source_labels:\n      - __meta_kubernetes_pod_node_name\n      target_label: __host__\n    - action: drop\n      regex: ^$\n      source_labels:\n      - __meta_kubernetes_pod_label_name\n    - action: replace\n      replacement: $1\n      separator: /\n      source_labels:\n      - __meta_kubernetes_namespace\n      - __meta_kubernetes_pod_label_name\n      target_label: job\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_namespace\n      target_label: namespace\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_pod_name\n      target_label: instance\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_pod_container_name\n      target_label: container_name\n    - action: labelmap\n      regex: __meta_kubernetes_pod_label_(.+)\n    - replacement: /var/log/pods/$1/*.log\n      separator: /\n      source_labels:\n      - __meta_kubernetes_pod_uid\n      - __meta_kubernetes_pod_container_name\n      target_label: __path__\n  - job_name: kubernetes-pods-app\n    kubernetes_sd_configs:\n    - role: pod\n    relabel_configs:\n    - source_labels:\n      - __meta_kubernetes_pod_node_name\n      target_label: __host__\n    - action: drop\n      regex: ^$\n      source_labels:\n      - __meta_kubernetes_pod_label_app\n    - action: replace\n      replacement: $1\n      separator: /\n      source_labels:\n      - __meta_kubernetes_namespace\n      - __meta_kubernetes_pod_label_app\n      target_label: job\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_namespace\n      target_label: namespace\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_pod_name\n      target_label: instance\n    - action: replace\n      source_labels:\n      - __meta_kubernetes_pod_container_name\n      target_label: container_name\n    - action: labelmap\n      regex: __meta_kubernetes_pod_label_(.+)\n    - replacement: /var/log/pods/$1/*.log\n      separator: /\n      source_labels:\n      - __meta_kubernetes_pod_uid\n      - __meta_kubernetes_pod_container_name\n      target_label: __path__"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "creationTimestamp": "2019-03-19T08:26:39Z",
                            "labels": {
                                "name": "promtail"
                            },
                            "name": "promtail",
                            "namespace": "default",
                            "resourceVersion": "13074",
                            "selfLink": "/api/v1/namespaces/default/configmaps/promtail",
                            "uid": "b7e5c8ae-4a20-11e9-ba02-000c29997d29"
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail::promtail",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "data": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ]
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:core/v1:PersistentVolumeClaim::prometheus-storage",
                    "custom": true,
                    "id": "default/prometheus",
                    "type": "kubernetes:core/v1:PersistentVolumeClaim",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "PersistentVolumeClaim",
                        "metadata": {
                            "labels": {
                                "name": "prometheus"
                            },
                            "name": "prometheus",
                            "namespace": "default"
                        },
                        "spec": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "resources": {
                                "requests": {
                                    "storage": "5Gi"
                                }
                            }
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "PersistentVolumeClaim",
                            "metadata": {
                                "labels": {
                                    "name": "prometheus"
                                },
                                "name": "prometheus",
                                "namespace": "default"
                            },
                            "spec": {
                                "accessModes": [
                                    "ReadWriteOnce"
                                ],
                                "resources": {
                                    "requests": {
                                        "storage": "5Gi"
                                    }
                                }
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "PersistentVolumeClaim",
                        "metadata": {
                            "annotations": {
                                "control-plane.alpha.kubernetes.io/leader": "{\"holderIdentity\":\"be2dc2f6-4959-11e9-9b3d-000c29997d29\",\"leaseDurationSeconds\":15,\"acquireTime\":\"2019-03-19T08:26:39Z\",\"renewTime\":\"2019-03-19T08:26:39Z\",\"leaderTransitions\":1}",
                                "pv.kubernetes.io/bind-completed": "yes",
                                "pv.kubernetes.io/bound-by-controller": "yes"
                            },
                            "creationTimestamp": "2019-03-19T08:26:39Z",
                            "finalizers": [
                                "kubernetes.io/pvc-protection"
                            ],
                            "labels": {
                                "name": "prometheus"
                            },
                            "name": "prometheus",
                            "namespace": "default",
                            "resourceVersion": "13070",
                            "selfLink": "/api/v1/namespaces/default/persistentvolumeclaims/prometheus",
                            "uid": "b7a27033-4a20-11e9-ba02-000c29997d29"
                        },
                        "spec": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "resources": {
                                "requests": {
                                    "storage": "5Gi"
                                }
                            },
                            "storageClassName": "standard",
                            "volumeMode": "Filesystem",
                            "volumeName": "pvc-b7a27033-4a20-11e9-ba02-000c29997d29"
                        },
                        "status": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "capacity": {
                                "storage": "5Gi"
                            },
                            "phase": "Bound"
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus::prometheus",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ],
                        "spec": null
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:core/v1:ConfigMap::prometheus-config",
                    "custom": true,
                    "id": "default/prometheus",
                    "type": "kubernetes:core/v1:ConfigMap",
                    "inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "prometheus.yaml": "scrape_configs:\n- job_name: 'kubernetes-apiservers'\n  kubernetes_sd_configs:\n  - role: endpoints\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: default;kubernetes;https\n- job_name: 'kubernetes-nodes'\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - target_label: __address__\n    replacement: kubernetes.default.svc:443\n  - source_labels: [__meta_kubernetes_node_name]\n    regex: (.+)\n    target_label: __metrics_path__\n    replacement: /api/v1/nodes/$1/proxy/metrics\n- job_name: 'kubernetes-cadvisor'\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - target_label: __address__\n    replacement: kubernetes.default.svc:443\n  - source_labels: [__meta_kubernetes_node_name]\n    regex: (.+)\n    target_label: __metrics_path__\n    replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor\n- job_name: 'kubernetes-service-endpoints'\n  kubernetes_sd_configs:\n  - role: endpoints\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_annotation_example_io_should_be_scraped]\n    action: keep\n    regex: true\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n    action: replace\n    target_label: kubernetes_name\n- job_name: 'kubernetes-pods'\n  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n    action: replace\n    target_label: kubernetes_pod_name"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "name": "prometheus"
                            },
                            "name": "prometheus",
                            "namespace": "default"
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "v1",
                            "data": {
                                "prometheus.yaml": "scrape_configs:\n- job_name: 'kubernetes-apiservers'\n  kubernetes_sd_configs:\n  - role: endpoints\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: default;kubernetes;https\n- job_name: 'kubernetes-nodes'\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - target_label: __address__\n    replacement: kubernetes.default.svc:443\n  - source_labels: [__meta_kubernetes_node_name]\n    regex: (.+)\n    target_label: __metrics_path__\n    replacement: /api/v1/nodes/$1/proxy/metrics\n- job_name: 'kubernetes-cadvisor'\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - target_label: __address__\n    replacement: kubernetes.default.svc:443\n  - source_labels: [__meta_kubernetes_node_name]\n    regex: (.+)\n    target_label: __metrics_path__\n    replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor\n- job_name: 'kubernetes-service-endpoints'\n  kubernetes_sd_configs:\n  - role: endpoints\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_annotation_example_io_should_be_scraped]\n    action: keep\n    regex: true\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n    action: replace\n    target_label: kubernetes_name\n- job_name: 'kubernetes-pods'\n  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n    action: replace\n    target_label: kubernetes_pod_name"
                            },
                            "kind": "ConfigMap",
                            "metadata": {
                                "labels": {
                                    "name": "prometheus"
                                },
                                "name": "prometheus",
                                "namespace": "default"
                            }
                        },
                        "apiVersion": "v1",
                        "data": {
                            "prometheus.yaml": "scrape_configs:\n- job_name: 'kubernetes-apiservers'\n  kubernetes_sd_configs:\n  - role: endpoints\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: default;kubernetes;https\n- job_name: 'kubernetes-nodes'\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - target_label: __address__\n    replacement: kubernetes.default.svc:443\n  - source_labels: [__meta_kubernetes_node_name]\n    regex: (.+)\n    target_label: __metrics_path__\n    replacement: /api/v1/nodes/$1/proxy/metrics\n- job_name: 'kubernetes-cadvisor'\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - target_label: __address__\n    replacement: kubernetes.default.svc:443\n  - source_labels: [__meta_kubernetes_node_name]\n    regex: (.+)\n    target_label: __metrics_path__\n    replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor\n- job_name: 'kubernetes-service-endpoints'\n  kubernetes_sd_configs:\n  - role: endpoints\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_annotation_example_io_should_be_scraped]\n    action: keep\n    regex: true\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n    action: replace\n    target_label: kubernetes_name\n- job_name: 'kubernetes-pods'\n  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n    action: replace\n    target_label: kubernetes_pod_name"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "creationTimestamp": "2019-03-19T08:26:39Z",
                            "labels": {
                                "name": "prometheus"
                            },
                            "name": "prometheus",
                            "namespace": "default",
                            "resourceVersion": "13075",
                            "selfLink": "/api/v1/namespaces/default/configmaps/prometheus",
                            "uid": "b8177ded-4a20-11e9-ba02-000c29997d29"
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus::prometheus",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "data": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ]
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:loki$kubernetes:core/v1:PersistentVolumeClaim::loki-storage",
                    "custom": true,
                    "id": "default/loki",
                    "type": "kubernetes:core/v1:PersistentVolumeClaim",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "PersistentVolumeClaim",
                        "metadata": {
                            "labels": {
                                "name": "loki"
                            },
                            "name": "loki",
                            "namespace": "default"
                        },
                        "spec": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "resources": {
                                "requests": {
                                    "storage": "5Gi"
                                }
                            }
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "PersistentVolumeClaim",
                            "metadata": {
                                "labels": {
                                    "name": "loki"
                                },
                                "name": "loki",
                                "namespace": "default"
                            },
                            "spec": {
                                "accessModes": [
                                    "ReadWriteOnce"
                                ],
                                "resources": {
                                    "requests": {
                                        "storage": "5Gi"
                                    }
                                }
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "PersistentVolumeClaim",
                        "metadata": {
                            "annotations": {
                                "control-plane.alpha.kubernetes.io/leader": "{\"holderIdentity\":\"be2dc2f6-4959-11e9-9b3d-000c29997d29\",\"leaseDurationSeconds\":15,\"acquireTime\":\"2019-03-19T08:26:40Z\",\"renewTime\":\"2019-03-19T08:26:40Z\",\"leaderTransitions\":1}",
                                "pv.kubernetes.io/bind-completed": "yes",
                                "pv.kubernetes.io/bound-by-controller": "yes"
                            },
                            "creationTimestamp": "2019-03-19T08:26:40Z",
                            "finalizers": [
                                "kubernetes.io/pvc-protection"
                            ],
                            "labels": {
                                "name": "loki"
                            },
                            "name": "loki",
                            "namespace": "default",
                            "resourceVersion": "13085",
                            "selfLink": "/api/v1/namespaces/default/persistentvolumeclaims/loki",
                            "uid": "b835fe8c-4a20-11e9-ba02-000c29997d29"
                        },
                        "spec": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "resources": {
                                "requests": {
                                    "storage": "5Gi"
                                }
                            },
                            "storageClassName": "standard",
                            "volumeMode": "Filesystem",
                            "volumeName": "pvc-b835fe8c-4a20-11e9-ba02-000c29997d29"
                        },
                        "status": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "capacity": {
                                "storage": "5Gi"
                            },
                            "phase": "Bound"
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:loki::loki",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ],
                        "spec": null
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::promtail-cluster-role",
                    "custom": true,
                    "id": "promtail",
                    "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                    "inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "name": "promtail"
                            },
                            "name": "promtail",
                            "namespace": "default"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes",
                                    "nodes/proxy",
                                    "services",
                                    "endpoints",
                                    "pods"
                                ],
                                "verbs": [
                                    "get",
                                    "watch",
                                    "list"
                                ]
                            }
                        ]
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "kind": "ClusterRole",
                            "metadata": {
                                "labels": {
                                    "name": "promtail"
                                },
                                "name": "promtail",
                                "namespace": "default"
                            },
                            "rules": [
                                {
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "nodes",
                                        "nodes/proxy",
                                        "services",
                                        "endpoints",
                                        "pods"
                                    ],
                                    "verbs": [
                                        "get",
                                        "watch",
                                        "list"
                                    ]
                                }
                            ]
                        },
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "creationTimestamp": "2019-03-19T08:26:41Z",
                            "labels": {
                                "name": "promtail"
                            },
                            "name": "promtail",
                            "resourceVersion": "13114",
                            "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/promtail",
                            "uid": "b8ceb37e-4a20-11e9-ba02-000c29997d29"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes",
                                    "nodes/proxy",
                                    "services",
                                    "endpoints",
                                    "pods"
                                ],
                                "verbs": [
                                    "get",
                                    "watch",
                                    "list"
                                ]
                            }
                        ]
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail::promtail",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ],
                        "rules": null
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:core/v1:ServiceAccount::prometheus-service-account",
                    "custom": true,
                    "id": "default/prometheus",
                    "type": "kubernetes:core/v1:ServiceAccount",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "name": "prometheus"
                            },
                            "name": "prometheus",
                            "namespace": "default"
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "ServiceAccount",
                            "metadata": {
                                "labels": {
                                    "name": "prometheus"
                                },
                                "name": "prometheus",
                                "namespace": "default"
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "creationTimestamp": "2019-03-19T08:26:40Z",
                            "labels": {
                                "name": "prometheus"
                            },
                            "name": "prometheus",
                            "namespace": "default",
                            "resourceVersion": "13089",
                            "selfLink": "/api/v1/namespaces/default/serviceaccounts/prometheus",
                            "uid": "b87369fc-4a20-11e9-ba02-000c29997d29"
                        },
                        "secrets": [
                            {
                                "name": "prometheus-token-bclsk"
                            }
                        ]
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus::prometheus",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ]
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::prometheus-cluster-role",
                    "custom": true,
                    "id": "prometheus",
                    "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                    "inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "name": "prometheus"
                            },
                            "name": "prometheus",
                            "namespace": "default"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes",
                                    "nodes/proxy",
                                    "services",
                                    "endpoints",
                                    "pods"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "extensions"
                                ],
                                "resources": [
                                    "ingress"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "kind": "ClusterRole",
                            "metadata": {
                                "labels": {
                                    "name": "prometheus"
                                },
                                "name": "prometheus",
                                "namespace": "default"
                            },
                            "rules": [
                                {
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "nodes",
                                        "nodes/proxy",
                                        "services",
                                        "endpoints",
                                        "pods"
                                    ],
                                    "verbs": [
                                        "get",
                                        "list",
                                        "watch"
                                    ]
                                },
                                {
                                    "apiGroups": [
                                        "extensions"
                                    ],
                                    "resources": [
                                        "ingress"
                                    ],
                                    "verbs": [
                                        "get",
                                        "list",
                                        "watch"
                                    ]
                                }
                            ]
                        },
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "creationTimestamp": "2019-03-19T08:26:42Z",
                            "labels": {
                                "name": "prometheus"
                            },
                            "name": "prometheus",
                            "resourceVersion": "13126",
                            "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/prometheus",
                            "uid": "b967d59a-4a20-11e9-ba02-000c29997d29"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes",
                                    "nodes/proxy",
                                    "services",
                                    "endpoints",
                                    "pods"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "extensions"
                                ],
                                "resources": [
                                    "ingress"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus::prometheus",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ],
                        "rules": null
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::app$kubernetes:apps/v1:Deployment::my-app-deployment",
                    "custom": true,
                    "id": "default/my-app",
                    "type": "kubernetes:apps/v1:Deployment",
                    "inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "labels": {
                                "name": "my-app"
                            },
                            "name": "my-app",
                            "namespace": "default"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "name": "my-app"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "name": "my-app"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "envFrom": [],
                                            "image": "my-app",
                                            "imagePullPolicy": "IfNotPresent",
                                            "name": "my-app",
                                            "ports": [
                                                {
                                                    "containerPort": 8000
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "apps/v1",
                            "kind": "Deployment",
                            "metadata": {
                                "labels": {
                                    "name": "my-app"
                                },
                                "name": "my-app",
                                "namespace": "default"
                            },
                            "spec": {
                                "replicas": 1,
                                "selector": {
                                    "matchLabels": {
                                        "name": "my-app"
                                    }
                                },
                                "template": {
                                    "metadata": {
                                        "labels": {
                                            "name": "my-app"
                                        }
                                    },
                                    "spec": {
                                        "containers": [
                                            {
                                                "envFrom": [],
                                                "image": "my-app",
                                                "imagePullPolicy": "IfNotPresent",
                                                "name": "my-app",
                                                "ports": [
                                                    {
                                                        "containerPort": 8000
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "deployment.kubernetes.io/revision": "1"
                            },
                            "creationTimestamp": "2019-03-19T08:26:41Z",
                            "generation": 1,
                            "labels": {
                                "name": "my-app"
                            },
                            "name": "my-app",
                            "namespace": "default",
                            "resourceVersion": "13141",
                            "selfLink": "/apis/apps/v1/namespaces/default/deployments/my-app",
                            "uid": "b8c5e7fd-4a20-11e9-ba02-000c29997d29"
                        },
                        "spec": {
                            "progressDeadlineSeconds": 600,
                            "replicas": 1,
                            "revisionHistoryLimit": 10,
                            "selector": {
                                "matchLabels": {
                                    "name": "my-app"
                                }
                            },
                            "strategy": {
                                "rollingUpdate": {
                                    "maxSurge": "25%",
                                    "maxUnavailable": "25%"
                                },
                                "type": "RollingUpdate"
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "name": "my-app"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "image": "my-app",
                                            "imagePullPolicy": "IfNotPresent",
                                            "name": "my-app",
                                            "ports": [
                                                {
                                                    "containerPort": 8000,
                                                    "protocol": "TCP"
                                                }
                                            ],
                                            "resources": {},
                                            "terminationMessagePath": "/dev/termination-log",
                                            "terminationMessagePolicy": "File"
                                        }
                                    ],
                                    "dnsPolicy": "ClusterFirst",
                                    "restartPolicy": "Always",
                                    "schedulerName": "default-scheduler",
                                    "securityContext": {},
                                    "terminationGracePeriodSeconds": 30
                                }
                            }
                        },
                        "status": {
                            "availableReplicas": 1,
                            "conditions": [
                                {
                                    "lastTransitionTime": "2019-03-19T08:26:43Z",
                                    "lastUpdateTime": "2019-03-19T08:26:43Z",
                                    "message": "Deployment has minimum availability.",
                                    "reason": "MinimumReplicasAvailable",
                                    "status": "True",
                                    "type": "Available"
                                },
                                {
                                    "lastTransitionTime": "2019-03-19T08:26:41Z",
                                    "lastUpdateTime": "2019-03-19T08:26:43Z",
                                    "message": "ReplicaSet \"my-app-748c744ddd\" has successfully progressed.",
                                    "reason": "NewReplicaSetAvailable",
                                    "status": "True",
                                    "type": "Progressing"
                                }
                            ],
                            "observedGeneration": 1,
                            "readyReplicas": 1,
                            "replicas": 1,
                            "updatedReplicas": 1
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::app::my-app",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::my-app-namespace",
                        "urn:pulumi:dev::pulumi-ts::pulumi-nodejs:dynamic:Resource::my-app-image"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::minikube::2c5bbefb-71cd-4bc4-a0af-b2bee92fb7c9",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::my-app-namespace"
                        ],
                        "spec": [
                            "urn:pulumi:dev::pulumi-ts::pulumi-nodejs:dynamic:Resource::my-app-image"
                        ]
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:extensions/v1beta1:PodSecurityPolicy::promtail-pod-security-policy",
                    "custom": true,
                    "id": "promtail",
                    "type": "kubernetes:extensions/v1beta1:PodSecurityPolicy",
                    "inputs": {
                        "apiVersion": "extensions/v1beta1",
                        "kind": "PodSecurityPolicy",
                        "metadata": {
                            "labels": {
                                "name": "promtail"
                            },
                            "name": "promtail",
                            "namespace": "default"
                        },
                        "spec": {
                            "allowPrivilegeEscalation": true,
                            "fsGroup": {
                                "readOnlyRootFilesystem": false,
                                "rule": "RunAsAny"
                            },
                            "hostIPC": false,
                            "hostNetwork": false,
                            "hostPID": false,
                            "privileged": true,
                            "runAsUser": {
                                "rule": "RunAsAny"
                            },
                            "seLinux": {
                                "rule": "RunAsAny"
                            },
                            "supplementalGroups": {
                                "rule": "RunAsAny"
                            },
                            "volumes": [
                                "secret",
                                "configMap",
                                "hostPath"
                            ]
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "extensions/v1beta1",
                            "kind": "PodSecurityPolicy",
                            "metadata": {
                                "labels": {
                                    "name": "promtail"
                                },
                                "name": "promtail",
                                "namespace": "default"
                            },
                            "spec": {
                                "allowPrivilegeEscalation": true,
                                "fsGroup": {
                                    "readOnlyRootFilesystem": false,
                                    "rule": "RunAsAny"
                                },
                                "hostIPC": false,
                                "hostNetwork": false,
                                "hostPID": false,
                                "privileged": true,
                                "runAsUser": {
                                    "rule": "RunAsAny"
                                },
                                "seLinux": {
                                    "rule": "RunAsAny"
                                },
                                "supplementalGroups": {
                                    "rule": "RunAsAny"
                                },
                                "volumes": [
                                    "secret",
                                    "configMap",
                                    "hostPath"
                                ]
                            }
                        },
                        "apiVersion": "extensions/v1beta1",
                        "kind": "PodSecurityPolicy",
                        "metadata": {
                            "creationTimestamp": "2019-03-19T08:26:42Z",
                            "labels": {
                                "name": "promtail"
                            },
                            "name": "promtail",
                            "resourceVersion": "13128",
                            "selfLink": "/apis/extensions/v1beta1/podsecuritypolicies/promtail",
                            "uid": "b986ce1d-4a20-11e9-ba02-000c29997d29"
                        },
                        "spec": {
                            "allowPrivilegeEscalation": true,
                            "fsGroup": {
                                "rule": "RunAsAny"
                            },
                            "privileged": true,
                            "runAsUser": {
                                "rule": "RunAsAny"
                            },
                            "seLinux": {
                                "rule": "RunAsAny"
                            },
                            "supplementalGroups": {
                                "rule": "RunAsAny"
                            },
                            "volumes": [
                                "secret",
                                "configMap",
                                "hostPath"
                            ]
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail::promtail",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ],
                        "spec": null
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:Grafana$kubernetes:core/v1:PersistentVolumeClaim::grafana-storage",
                    "custom": true,
                    "id": "default/grafana",
                    "type": "kubernetes:core/v1:PersistentVolumeClaim",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "PersistentVolumeClaim",
                        "metadata": {
                            "labels": {
                                "name": "grafana"
                            },
                            "name": "grafana",
                            "namespace": "default"
                        },
                        "spec": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "resources": {
                                "requests": {
                                    "storage": "5Gi"
                                }
                            }
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "PersistentVolumeClaim",
                            "metadata": {
                                "labels": {
                                    "name": "grafana"
                                },
                                "name": "grafana",
                                "namespace": "default"
                            },
                            "spec": {
                                "accessModes": [
                                    "ReadWriteOnce"
                                ],
                                "resources": {
                                    "requests": {
                                        "storage": "5Gi"
                                    }
                                }
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "PersistentVolumeClaim",
                        "metadata": {
                            "annotations": {
                                "control-plane.alpha.kubernetes.io/leader": "{\"holderIdentity\":\"be2dc2f6-4959-11e9-9b3d-000c29997d29\",\"leaseDurationSeconds\":15,\"acquireTime\":\"2019-03-19T08:26:40Z\",\"renewTime\":\"2019-03-19T08:26:42Z\",\"leaderTransitions\":0}",
                                "pv.kubernetes.io/bind-completed": "yes",
                                "pv.kubernetes.io/bound-by-controller": "yes",
                                "volume.beta.kubernetes.io/storage-provisioner": "k8s.io/minikube-hostpath"
                            },
                            "creationTimestamp": "2019-03-19T08:26:40Z",
                            "finalizers": [
                                "kubernetes.io/pvc-protection"
                            ],
                            "labels": {
                                "name": "grafana"
                            },
                            "name": "grafana",
                            "namespace": "default",
                            "resourceVersion": "13136",
                            "selfLink": "/api/v1/namespaces/default/persistentvolumeclaims/grafana",
                            "uid": "b8b00480-4a20-11e9-ba02-000c29997d29"
                        },
                        "spec": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "resources": {
                                "requests": {
                                    "storage": "5Gi"
                                }
                            },
                            "storageClassName": "standard",
                            "volumeMode": "Filesystem",
                            "volumeName": "pvc-b8b00480-4a20-11e9-ba02-000c29997d29"
                        },
                        "status": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "capacity": {
                                "storage": "5Gi"
                            },
                            "phase": "Bound"
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:Grafana::grafana",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ],
                        "spec": null
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:core/v1:ServiceAccount::promtail-service-account",
                    "custom": true,
                    "id": "default/promtail",
                    "type": "kubernetes:core/v1:ServiceAccount",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "name": "promtail"
                            },
                            "name": "promtail",
                            "namespace": "default"
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "ServiceAccount",
                            "metadata": {
                                "labels": {
                                    "name": "promtail"
                                },
                                "name": "promtail",
                                "namespace": "default"
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "creationTimestamp": "2019-03-19T08:26:41Z",
                            "labels": {
                                "name": "promtail"
                            },
                            "name": "promtail",
                            "namespace": "default",
                            "resourceVersion": "13121",
                            "selfLink": "/api/v1/namespaces/default/serviceaccounts/promtail",
                            "uid": "b8ed07ae-4a20-11e9-ba02-000c29997d29"
                        },
                        "secrets": [
                            {
                                "name": "promtail-token-c875t"
                            }
                        ]
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail::promtail",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ]
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::prometheus-cluster-role-binding",
                    "custom": true,
                    "id": "prometheus",
                    "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                    "inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "name": "prometheus"
                            },
                            "name": "prometheus",
                            "namespace": "default"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "prometheus"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "prometheus",
                                "namespace": "default"
                            }
                        ]
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "kind": "ClusterRoleBinding",
                            "metadata": {
                                "labels": {
                                    "name": "prometheus"
                                },
                                "name": "prometheus",
                                "namespace": "default"
                            },
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "ClusterRole",
                                "name": "prometheus"
                            },
                            "subjects": [
                                {
                                    "kind": "ServiceAccount",
                                    "name": "prometheus",
                                    "namespace": "default"
                                }
                            ]
                        },
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "creationTimestamp": "2019-03-19T08:26:44Z",
                            "labels": {
                                "name": "prometheus"
                            },
                            "name": "prometheus",
                            "resourceVersion": "13173",
                            "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/prometheus",
                            "uid": "baf68628-4a20-11e9-ba02-000c29997d29"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "prometheus"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "prometheus",
                                "namespace": "default"
                            }
                        ]
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus::prometheus",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace",
                        "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::prometheus-cluster-role",
                        "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:core/v1:ServiceAccount::prometheus-service-account"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ],
                        "roleRef": [
                            "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::prometheus-cluster-role"
                        ],
                        "subjects": [
                            "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:core/v1:ServiceAccount::prometheus-service-account"
                        ]
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::promtail-cluster-role-binding",
                    "custom": true,
                    "id": "promtail",
                    "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                    "inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "name": "promtail"
                            },
                            "name": "promtail",
                            "namespace": "default"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "promtail"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "promtail",
                                "namespace": "default"
                            }
                        ]
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "kind": "ClusterRoleBinding",
                            "metadata": {
                                "labels": {
                                    "name": "promtail"
                                },
                                "name": "promtail",
                                "namespace": "default"
                            },
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "ClusterRole",
                                "name": "promtail"
                            },
                            "subjects": [
                                {
                                    "kind": "ServiceAccount",
                                    "name": "promtail",
                                    "namespace": "default"
                                }
                            ]
                        },
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "creationTimestamp": "2019-03-19T08:26:44Z",
                            "labels": {
                                "name": "promtail"
                            },
                            "name": "promtail",
                            "resourceVersion": "13174",
                            "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/promtail",
                            "uid": "bb13daa6-4a20-11e9-ba02-000c29997d29"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "promtail"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "promtail",
                                "namespace": "default"
                            }
                        ]
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail::promtail",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace",
                        "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::promtail-cluster-role",
                        "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:core/v1:ServiceAccount::promtail-service-account"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ],
                        "roleRef": [
                            "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::promtail-cluster-role"
                        ],
                        "subjects": [
                            "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:core/v1:ServiceAccount::promtail-service-account"
                        ]
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::promtail-role-binding",
                    "custom": true,
                    "id": "default/promtail",
                    "type": "kubernetes:rbac.authorization.k8s.io/v1:RoleBinding",
                    "inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "labels": {
                                "name": "promtail"
                            },
                            "name": "promtail",
                            "namespace": "default"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "promtail"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "promtail"
                            }
                        ]
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "kind": "RoleBinding",
                            "metadata": {
                                "labels": {
                                    "name": "promtail"
                                },
                                "name": "promtail",
                                "namespace": "default"
                            },
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "promtail"
                            },
                            "subjects": [
                                {
                                    "kind": "ServiceAccount",
                                    "name": "promtail"
                                }
                            ]
                        },
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "creationTimestamp": "2019-03-19T08:26:45Z",
                            "labels": {
                                "name": "promtail"
                            },
                            "name": "promtail",
                            "namespace": "default",
                            "resourceVersion": "13176",
                            "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/default/rolebindings/promtail",
                            "uid": "bb4f95c1-4a20-11e9-ba02-000c29997d29"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "promtail"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "promtail"
                            }
                        ]
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail::promtail",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace",
                        "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:rbac.authorization.k8s.io/v1:Role::promtail-role",
                        "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:core/v1:ServiceAccount::promtail-service-account"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ],
                        "roleRef": [
                            "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:rbac.authorization.k8s.io/v1:Role::promtail-role"
                        ],
                        "subjects": [
                            "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:core/v1:ServiceAccount::promtail-service-account"
                        ]
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Service::my-app-service",
                    "custom": true,
                    "id": "default/my-app",
                    "type": "kubernetes:core/v1:Service",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "labels": {
                                "name": "my-app"
                            },
                            "name": "my-app",
                            "namespace": "default"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "port": 8000,
                                    "targetPort": 8000
                                }
                            ],
                            "selector": {
                                "name": "my-app"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "Service",
                            "metadata": {
                                "labels": {
                                    "name": "my-app"
                                },
                                "name": "my-app",
                                "namespace": "default"
                            },
                            "spec": {
                                "ports": [
                                    {
                                        "port": 8000,
                                        "targetPort": 8000
                                    }
                                ],
                                "selector": {
                                    "name": "my-app"
                                },
                                "type": "ClusterIP"
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "creationTimestamp": "2019-03-19T08:26:42Z",
                            "labels": {
                                "name": "my-app"
                            },
                            "name": "my-app",
                            "namespace": "default",
                            "resourceVersion": "13134",
                            "selfLink": "/api/v1/namespaces/default/services/my-app",
                            "uid": "b9e1d2b6-4a20-11e9-ba02-000c29997d29"
                        },
                        "spec": {
                            "clusterIP": "10.97.252.74",
                            "ports": [
                                {
                                    "port": 8000,
                                    "protocol": "TCP",
                                    "targetPort": 8000
                                }
                            ],
                            "selector": {
                                "name": "my-app"
                            },
                            "sessionAffinity": "None",
                            "type": "ClusterIP"
                        },
                        "status": {
                            "loadBalancer": {}
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::pulumi:pulumi:Stack::pulumi-ts-dev",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::my-app-namespace"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::my-app-namespace"
                        ],
                        "spec": null
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:loki$kubernetes:apps/v1:Deployment::loki-deployment",
                    "custom": true,
                    "id": "default/loki",
                    "type": "kubernetes:apps/v1:Deployment",
                    "inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "labels": {
                                "name": "loki"
                            },
                            "name": "loki",
                            "namespace": "default"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "name": "loki"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "name": "loki"
                                    },
                                    "name": "loki",
                                    "namespace": "default"
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "args": [
                                                "-config.file=/etc/loki/loki.yaml"
                                            ],
                                            "image": "grafana/loki:master-ffe1093",
                                            "name": "loki",
                                            "ports": [
                                                {
                                                    "containerPort": 3100
                                                }
                                            ],
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/etc/loki",
                                                    "name": "loki-config"
                                                },
                                                {
                                                    "mountPath": "/var/opt/loki",
                                                    "name": "loki-storage"
                                                }
                                            ]
                                        }
                                    ],
                                    "volumes": [
                                        {
                                            "configMap": {
                                                "name": "loki"
                                            },
                                            "name": "loki-config"
                                        },
                                        {
                                            "name": "loki-storage",
                                            "persistentVolumeClaim": {
                                                "claimName": "loki"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "apps/v1",
                            "kind": "Deployment",
                            "metadata": {
                                "labels": {
                                    "name": "loki"
                                },
                                "name": "loki",
                                "namespace": "default"
                            },
                            "spec": {
                                "replicas": 1,
                                "selector": {
                                    "matchLabels": {
                                        "name": "loki"
                                    }
                                },
                                "template": {
                                    "metadata": {
                                        "labels": {
                                            "name": "loki"
                                        },
                                        "name": "loki",
                                        "namespace": "default"
                                    },
                                    "spec": {
                                        "containers": [
                                            {
                                                "args": [
                                                    "-config.file=/etc/loki/loki.yaml"
                                                ],
                                                "image": "grafana/loki:master-ffe1093",
                                                "name": "loki",
                                                "ports": [
                                                    {
                                                        "containerPort": 3100
                                                    }
                                                ],
                                                "volumeMounts": [
                                                    {
                                                        "mountPath": "/etc/loki",
                                                        "name": "loki-config"
                                                    },
                                                    {
                                                        "mountPath": "/var/opt/loki",
                                                        "name": "loki-storage"
                                                    }
                                                ]
                                            }
                                        ],
                                        "volumes": [
                                            {
                                                "configMap": {
                                                    "name": "loki"
                                                },
                                                "name": "loki-config"
                                            },
                                            {
                                                "name": "loki-storage",
                                                "persistentVolumeClaim": {
                                                    "claimName": "loki"
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "deployment.kubernetes.io/revision": "1"
                            },
                            "creationTimestamp": "2019-03-19T08:26:43Z",
                            "generation": 1,
                            "labels": {
                                "name": "loki"
                            },
                            "name": "loki",
                            "namespace": "default",
                            "resourceVersion": "13211",
                            "selfLink": "/apis/apps/v1/namespaces/default/deployments/loki",
                            "uid": "ba5b49da-4a20-11e9-ba02-000c29997d29"
                        },
                        "spec": {
                            "progressDeadlineSeconds": 600,
                            "replicas": 1,
                            "revisionHistoryLimit": 10,
                            "selector": {
                                "matchLabels": {
                                    "name": "loki"
                                }
                            },
                            "strategy": {
                                "rollingUpdate": {
                                    "maxSurge": "25%",
                                    "maxUnavailable": "25%"
                                },
                                "type": "RollingUpdate"
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "name": "loki"
                                    },
                                    "name": "loki",
                                    "namespace": "default"
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "args": [
                                                "-config.file=/etc/loki/loki.yaml"
                                            ],
                                            "image": "grafana/loki:master-ffe1093",
                                            "imagePullPolicy": "IfNotPresent",
                                            "name": "loki",
                                            "ports": [
                                                {
                                                    "containerPort": 3100,
                                                    "protocol": "TCP"
                                                }
                                            ],
                                            "resources": {},
                                            "terminationMessagePath": "/dev/termination-log",
                                            "terminationMessagePolicy": "File",
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/etc/loki",
                                                    "name": "loki-config"
                                                },
                                                {
                                                    "mountPath": "/var/opt/loki",
                                                    "name": "loki-storage"
                                                }
                                            ]
                                        }
                                    ],
                                    "dnsPolicy": "ClusterFirst",
                                    "restartPolicy": "Always",
                                    "schedulerName": "default-scheduler",
                                    "securityContext": {},
                                    "terminationGracePeriodSeconds": 30,
                                    "volumes": [
                                        {
                                            "configMap": {
                                                "defaultMode": 420,
                                                "name": "loki"
                                            },
                                            "name": "loki-config"
                                        },
                                        {
                                            "name": "loki-storage",
                                            "persistentVolumeClaim": {
                                                "claimName": "loki"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        "status": {
                            "availableReplicas": 1,
                            "conditions": [
                                {
                                    "lastTransitionTime": "2019-03-19T08:26:54Z",
                                    "lastUpdateTime": "2019-03-19T08:26:54Z",
                                    "message": "Deployment has minimum availability.",
                                    "reason": "MinimumReplicasAvailable",
                                    "status": "True",
                                    "type": "Available"
                                },
                                {
                                    "lastTransitionTime": "2019-03-19T08:26:43Z",
                                    "lastUpdateTime": "2019-03-19T08:26:54Z",
                                    "message": "ReplicaSet \"loki-79b8b5c66d\" has successfully progressed.",
                                    "reason": "NewReplicaSetAvailable",
                                    "status": "True",
                                    "type": "Progressing"
                                }
                            ],
                            "observedGeneration": 1,
                            "readyReplicas": 1,
                            "replicas": 1,
                            "updatedReplicas": 1
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:loki::loki",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace",
                        "urn:pulumi:dev::pulumi-ts::james:monitoring:loki$kubernetes:core/v1:ConfigMap::loki-config",
                        "urn:pulumi:dev::pulumi-ts::james:monitoring:loki$kubernetes:core/v1:PersistentVolumeClaim::loki-storage"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ],
                        "spec": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace",
                            "urn:pulumi:dev::pulumi-ts::james:monitoring:loki$kubernetes:core/v1:ConfigMap::loki-config",
                            "urn:pulumi:dev::pulumi-ts::james:monitoring:loki$kubernetes:core/v1:PersistentVolumeClaim::loki-storage"
                        ]
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:loki$kubernetes:core/v1:Service::loki-service",
                    "custom": true,
                    "id": "default/loki",
                    "type": "kubernetes:core/v1:Service",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "labels": {
                                "name": "loki"
                            },
                            "name": "loki",
                            "namespace": "default"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "port": 3100,
                                    "targetPort": 3100
                                }
                            ],
                            "selector": {
                                "name": "loki"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "Service",
                            "metadata": {
                                "labels": {
                                    "name": "loki"
                                },
                                "name": "loki",
                                "namespace": "default"
                            },
                            "spec": {
                                "ports": [
                                    {
                                        "port": 3100,
                                        "targetPort": 3100
                                    }
                                ],
                                "selector": {
                                    "name": "loki"
                                },
                                "type": "ClusterIP"
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "creationTimestamp": "2019-03-19T08:26:41Z",
                            "labels": {
                                "name": "loki"
                            },
                            "name": "loki",
                            "namespace": "default",
                            "resourceVersion": "13124",
                            "selfLink": "/api/v1/namespaces/default/services/loki",
                            "uid": "b92ab3e4-4a20-11e9-ba02-000c29997d29"
                        },
                        "spec": {
                            "clusterIP": "10.100.62.189",
                            "ports": [
                                {
                                    "port": 3100,
                                    "protocol": "TCP",
                                    "targetPort": 3100
                                }
                            ],
                            "selector": {
                                "name": "loki"
                            },
                            "sessionAffinity": "None",
                            "type": "ClusterIP"
                        },
                        "status": {
                            "loadBalancer": {}
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:loki::loki",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ],
                        "spec": null
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:apps/v1:DaemonSet::promtail-daemonset",
                    "custom": true,
                    "id": "default/promtail",
                    "type": "kubernetes:apps/v1:DaemonSet",
                    "inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "metadata": {
                            "labels": {
                                "name": "promtail"
                            },
                            "name": "promtail",
                            "namespace": "default"
                        },
                        "spec": {
                            "selector": {
                                "matchLabels": {
                                    "name": "promtail"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "name": "promtail"
                                    },
                                    "name": "promtail",
                                    "namespace": "default"
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "args": [
                                                "-config.file=/etc/promtail/promtail.yaml",
                                                "-client.url=http://loki:3100/api/prom/push"
                                            ],
                                            "env": [
                                                {
                                                    "name": "HOSTNAME",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "spec.nodeName"
                                                        }
                                                    }
                                                }
                                            ],
                                            "image": "grafana/promtail:master-ffe1093",
                                            "name": "promtail",
                                            "ports": [
                                                {
                                                    "containerPort": 3100
                                                }
                                            ],
                                            "securityContext": {
                                                "privileged": true,
                                                "runAsUser": 0
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/etc/promtail",
                                                    "name": "promtail-config"
                                                },
                                                {
                                                    "mountPath": "/var/log",
                                                    "name": "varlog"
                                                },
                                                {
                                                    "mountPath": "/var/lib/docker/containers",
                                                    "name": "varlibdockercontainers"
                                                }
                                            ]
                                        }
                                    ],
                                    "serviceAccount": "promtail",
                                    "volumes": [
                                        {
                                            "configMap": {
                                                "name": "promtail"
                                            },
                                            "name": "promtail-config"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/var/log"
                                            },
                                            "name": "varlog"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/var/lib/docker/containers"
                                            },
                                            "name": "varlibdockercontainers"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "apps/v1",
                            "kind": "DaemonSet",
                            "metadata": {
                                "labels": {
                                    "name": "promtail"
                                },
                                "name": "promtail",
                                "namespace": "default"
                            },
                            "spec": {
                                "selector": {
                                    "matchLabels": {
                                        "name": "promtail"
                                    }
                                },
                                "template": {
                                    "metadata": {
                                        "labels": {
                                            "name": "promtail"
                                        },
                                        "name": "promtail",
                                        "namespace": "default"
                                    },
                                    "spec": {
                                        "containers": [
                                            {
                                                "args": [
                                                    "-config.file=/etc/promtail/promtail.yaml",
                                                    "-client.url=http://loki:3100/api/prom/push"
                                                ],
                                                "env": [
                                                    {
                                                        "name": "HOSTNAME",
                                                        "valueFrom": {
                                                            "fieldRef": {
                                                                "fieldPath": "spec.nodeName"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "image": "grafana/promtail:master-ffe1093",
                                                "name": "promtail",
                                                "ports": [
                                                    {
                                                        "containerPort": 3100
                                                    }
                                                ],
                                                "securityContext": {
                                                    "privileged": true,
                                                    "runAsUser": 0
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "mountPath": "/etc/promtail",
                                                        "name": "promtail-config"
                                                    },
                                                    {
                                                        "mountPath": "/var/log",
                                                        "name": "varlog"
                                                    },
                                                    {
                                                        "mountPath": "/var/lib/docker/containers",
                                                        "name": "varlibdockercontainers"
                                                    }
                                                ]
                                            }
                                        ],
                                        "serviceAccount": "promtail",
                                        "volumes": [
                                            {
                                                "configMap": {
                                                    "name": "promtail"
                                                },
                                                "name": "promtail-config"
                                            },
                                            {
                                                "hostPath": {
                                                    "path": "/var/log"
                                                },
                                                "name": "varlog"
                                            },
                                            {
                                                "hostPath": {
                                                    "path": "/var/lib/docker/containers"
                                                },
                                                "name": "varlibdockercontainers"
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "metadata": {
                            "annotations": {
                                "deprecated.daemonset.template.generation": "1"
                            },
                            "creationTimestamp": "2019-03-19T08:27:05Z",
                            "generation": 1,
                            "labels": {
                                "name": "promtail"
                            },
                            "name": "promtail",
                            "namespace": "default",
                            "resourceVersion": "13240",
                            "selfLink": "/apis/apps/v1/namespaces/default/daemonsets/promtail",
                            "uid": "c7288fad-4a20-11e9-ba02-000c29997d29"
                        },
                        "spec": {
                            "revisionHistoryLimit": 10,
                            "selector": {
                                "matchLabels": {
                                    "name": "promtail"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "name": "promtail"
                                    },
                                    "name": "promtail",
                                    "namespace": "default"
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "args": [
                                                "-config.file=/etc/promtail/promtail.yaml",
                                                "-client.url=http://loki:3100/api/prom/push"
                                            ],
                                            "env": [
                                                {
                                                    "name": "HOSTNAME",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "apiVersion": "v1",
                                                            "fieldPath": "spec.nodeName"
                                                        }
                                                    }
                                                }
                                            ],
                                            "image": "grafana/promtail:master-ffe1093",
                                            "imagePullPolicy": "IfNotPresent",
                                            "name": "promtail",
                                            "ports": [
                                                {
                                                    "containerPort": 3100,
                                                    "protocol": "TCP"
                                                }
                                            ],
                                            "resources": {},
                                            "securityContext": {
                                                "privileged": true,
                                                "procMount": "Default",
                                                "runAsUser": 0
                                            },
                                            "terminationMessagePath": "/dev/termination-log",
                                            "terminationMessagePolicy": "File",
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/etc/promtail",
                                                    "name": "promtail-config"
                                                },
                                                {
                                                    "mountPath": "/var/log",
                                                    "name": "varlog"
                                                },
                                                {
                                                    "mountPath": "/var/lib/docker/containers",
                                                    "name": "varlibdockercontainers"
                                                }
                                            ]
                                        }
                                    ],
                                    "dnsPolicy": "ClusterFirst",
                                    "restartPolicy": "Always",
                                    "schedulerName": "default-scheduler",
                                    "securityContext": {},
                                    "serviceAccount": "promtail",
                                    "serviceAccountName": "promtail",
                                    "terminationGracePeriodSeconds": 30,
                                    "volumes": [
                                        {
                                            "configMap": {
                                                "defaultMode": 420,
                                                "name": "promtail"
                                            },
                                            "name": "promtail-config"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/var/log",
                                                "type": ""
                                            },
                                            "name": "varlog"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/var/lib/docker/containers",
                                                "type": ""
                                            },
                                            "name": "varlibdockercontainers"
                                        }
                                    ]
                                }
                            },
                            "updateStrategy": {
                                "rollingUpdate": {
                                    "maxUnavailable": 1
                                },
                                "type": "RollingUpdate"
                            }
                        },
                        "status": {
                            "currentNumberScheduled": 0,
                            "desiredNumberScheduled": 0,
                            "numberMisscheduled": 0,
                            "numberReady": 0
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail::promtail",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace",
                        "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:core/v1:ServiceAccount::promtail-service-account",
                        "urn:pulumi:dev::pulumi-ts::james:monitoring:loki$kubernetes:core/v1:Service::loki-service",
                        "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:core/v1:ConfigMap::promtail-config"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ],
                        "spec": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace",
                            "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:core/v1:ServiceAccount::promtail-service-account",
                            "urn:pulumi:dev::pulumi-ts::james:monitoring:loki$kubernetes:core/v1:Service::loki-service",
                            "urn:pulumi:dev::pulumi-ts::james:monitoring:promtail$kubernetes:core/v1:ConfigMap::promtail-config"
                        ]
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:apps/v1:Deployment::prometheus",
                    "custom": true,
                    "id": "default/prometheus",
                    "type": "kubernetes:apps/v1:Deployment",
                    "inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "labels": {
                                "name": "prometheus"
                            },
                            "name": "prometheus",
                            "namespace": "default"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "name": "prometheus"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "name": "prometheus"
                                    },
                                    "name": "prometheus",
                                    "namespace": "default"
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "args": [
                                                "--config.file=/etc/prometheus/prometheus.yaml",
                                                "--storage.tsdb.path=/prometheus",
                                                "--storage.tsdb.retention=48h"
                                            ],
                                            "image": "prom/prometheus:v2.4.3",
                                            "name": "prometheus",
                                            "ports": [
                                                {
                                                    "containerPort": 9090
                                                }
                                            ],
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/prometheus",
                                                    "name": "prometheus-storage"
                                                },
                                                {
                                                    "mountPath": "/etc/prometheus",
                                                    "name": "prometheus-config"
                                                }
                                            ]
                                        }
                                    ],
                                    "securityContext": {
                                        "fsGroup": 2000
                                    },
                                    "serviceAccount": "prometheus",
                                    "volumes": [
                                        {
                                            "name": "prometheus-storage",
                                            "persistentVolumeClaim": {
                                                "claimName": "prometheus"
                                            }
                                        },
                                        {
                                            "configMap": {
                                                "name": "prometheus"
                                            },
                                            "name": "prometheus-config"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "apps/v1",
                            "kind": "Deployment",
                            "metadata": {
                                "labels": {
                                    "name": "prometheus"
                                },
                                "name": "prometheus",
                                "namespace": "default"
                            },
                            "spec": {
                                "replicas": 1,
                                "selector": {
                                    "matchLabels": {
                                        "name": "prometheus"
                                    }
                                },
                                "template": {
                                    "metadata": {
                                        "labels": {
                                            "name": "prometheus"
                                        },
                                        "name": "prometheus",
                                        "namespace": "default"
                                    },
                                    "spec": {
                                        "containers": [
                                            {
                                                "args": [
                                                    "--config.file=/etc/prometheus/prometheus.yaml",
                                                    "--storage.tsdb.path=/prometheus",
                                                    "--storage.tsdb.retention=48h"
                                                ],
                                                "image": "prom/prometheus:v2.4.3",
                                                "name": "prometheus",
                                                "ports": [
                                                    {
                                                        "containerPort": 9090
                                                    }
                                                ],
                                                "volumeMounts": [
                                                    {
                                                        "mountPath": "/prometheus",
                                                        "name": "prometheus-storage"
                                                    },
                                                    {
                                                        "mountPath": "/etc/prometheus",
                                                        "name": "prometheus-config"
                                                    }
                                                ]
                                            }
                                        ],
                                        "securityContext": {
                                            "fsGroup": 2000
                                        },
                                        "serviceAccount": "prometheus",
                                        "volumes": [
                                            {
                                                "name": "prometheus-storage",
                                                "persistentVolumeClaim": {
                                                    "claimName": "prometheus"
                                                }
                                            },
                                            {
                                                "configMap": {
                                                    "name": "prometheus"
                                                },
                                                "name": "prometheus-config"
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "deployment.kubernetes.io/revision": "1"
                            },
                            "creationTimestamp": "2019-03-19T08:26:44Z",
                            "generation": 1,
                            "labels": {
                                "name": "prometheus"
                            },
                            "name": "prometheus",
                            "namespace": "default",
                            "resourceVersion": "13264",
                            "selfLink": "/apis/apps/v1/namespaces/default/deployments/prometheus",
                            "uid": "bad554b6-4a20-11e9-ba02-000c29997d29"
                        },
                        "spec": {
                            "progressDeadlineSeconds": 600,
                            "replicas": 1,
                            "revisionHistoryLimit": 10,
                            "selector": {
                                "matchLabels": {
                                    "name": "prometheus"
                                }
                            },
                            "strategy": {
                                "rollingUpdate": {
                                    "maxSurge": "25%",
                                    "maxUnavailable": "25%"
                                },
                                "type": "RollingUpdate"
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "name": "prometheus"
                                    },
                                    "name": "prometheus",
                                    "namespace": "default"
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "args": [
                                                "--config.file=/etc/prometheus/prometheus.yaml",
                                                "--storage.tsdb.path=/prometheus",
                                                "--storage.tsdb.retention=48h"
                                            ],
                                            "image": "prom/prometheus:v2.4.3",
                                            "imagePullPolicy": "IfNotPresent",
                                            "name": "prometheus",
                                            "ports": [
                                                {
                                                    "containerPort": 9090,
                                                    "protocol": "TCP"
                                                }
                                            ],
                                            "resources": {},
                                            "terminationMessagePath": "/dev/termination-log",
                                            "terminationMessagePolicy": "File",
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/prometheus",
                                                    "name": "prometheus-storage"
                                                },
                                                {
                                                    "mountPath": "/etc/prometheus",
                                                    "name": "prometheus-config"
                                                }
                                            ]
                                        }
                                    ],
                                    "dnsPolicy": "ClusterFirst",
                                    "restartPolicy": "Always",
                                    "schedulerName": "default-scheduler",
                                    "securityContext": {
                                        "fsGroup": 2000
                                    },
                                    "serviceAccount": "prometheus",
                                    "serviceAccountName": "prometheus",
                                    "terminationGracePeriodSeconds": 30,
                                    "volumes": [
                                        {
                                            "name": "prometheus-storage",
                                            "persistentVolumeClaim": {
                                                "claimName": "prometheus"
                                            }
                                        },
                                        {
                                            "configMap": {
                                                "defaultMode": 420,
                                                "name": "prometheus"
                                            },
                                            "name": "prometheus-config"
                                        }
                                    ]
                                }
                            }
                        },
                        "status": {
                            "availableReplicas": 1,
                            "conditions": [
                                {
                                    "lastTransitionTime": "2019-03-19T08:27:09Z",
                                    "lastUpdateTime": "2019-03-19T08:27:09Z",
                                    "message": "Deployment has minimum availability.",
                                    "reason": "MinimumReplicasAvailable",
                                    "status": "True",
                                    "type": "Available"
                                },
                                {
                                    "lastTransitionTime": "2019-03-19T08:26:44Z",
                                    "lastUpdateTime": "2019-03-19T08:27:09Z",
                                    "message": "ReplicaSet \"prometheus-76b4796d98\" has successfully progressed.",
                                    "reason": "NewReplicaSetAvailable",
                                    "status": "True",
                                    "type": "Progressing"
                                }
                            ],
                            "observedGeneration": 1,
                            "readyReplicas": 1,
                            "replicas": 1,
                            "updatedReplicas": 1
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus::prometheus",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace",
                        "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:core/v1:ServiceAccount::prometheus-service-account",
                        "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:core/v1:PersistentVolumeClaim::prometheus-storage",
                        "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:core/v1:ConfigMap::prometheus-config"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ],
                        "spec": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace",
                            "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:core/v1:ServiceAccount::prometheus-service-account",
                            "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:core/v1:PersistentVolumeClaim::prometheus-storage",
                            "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:core/v1:ConfigMap::prometheus-config"
                        ]
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:core/v1:Service::prometheus-service",
                    "custom": true,
                    "id": "default/prometheus",
                    "type": "kubernetes:core/v1:Service",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "labels": {
                                "name": "prometheus"
                            },
                            "name": "prometheus",
                            "namespace": "default"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "port": 9090,
                                    "targetPort": 9090
                                }
                            ],
                            "selector": {
                                "name": "prometheus"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "Service",
                            "metadata": {
                                "labels": {
                                    "name": "prometheus"
                                },
                                "name": "prometheus",
                                "namespace": "default"
                            },
                            "spec": {
                                "ports": [
                                    {
                                        "port": 9090,
                                        "targetPort": 9090
                                    }
                                ],
                                "selector": {
                                    "name": "prometheus"
                                },
                                "type": "ClusterIP"
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "creationTimestamp": "2019-03-19T08:27:09Z",
                            "labels": {
                                "name": "prometheus"
                            },
                            "name": "prometheus",
                            "namespace": "default",
                            "resourceVersion": "13266",
                            "selfLink": "/api/v1/namespaces/default/services/prometheus",
                            "uid": "c9ca4cdd-4a20-11e9-ba02-000c29997d29"
                        },
                        "spec": {
                            "clusterIP": "10.107.81.254",
                            "ports": [
                                {
                                    "port": 9090,
                                    "protocol": "TCP",
                                    "targetPort": 9090
                                }
                            ],
                            "selector": {
                                "name": "prometheus"
                            },
                            "sessionAffinity": "None",
                            "type": "ClusterIP"
                        },
                        "status": {
                            "loadBalancer": {}
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus::prometheus",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace",
                        "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:apps/v1:Deployment::prometheus"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ],
                        "spec": [
                            "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:apps/v1:Deployment::prometheus"
                        ]
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:Grafana$kubernetes:core/v1:ConfigMap::grafana-config",
                    "custom": true,
                    "id": "default/grafana",
                    "type": "kubernetes:core/v1:ConfigMap",
                    "inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "dashboard-provider.yaml": "apiVersion: 1\nproviders:\n  - name: 'default'\n    folder: ''\n    type: file\n    disableDeletion: false\n    updateIntervalSeconds: 10 # how often Grafana will scan for changed dashboards\n    options:\n      path: /var/lib/grafana/dashboards",
                            "datasource-provider.yaml": "apiVersion: 1\ndatasources:\n  - name: prometheus\n    type: prometheus\n    access: proxy\n    url: http://prometheus:9090\n    basicAuth: false\n    editable: false\n  - name: loki\n    type: loki\n    access: proxy\n    url: http://loki:3100\n    basicAuth: false\n    editable: false",
                            "grafana.ini": "[auth.anonymous]\nenabled = true\norg_name = Main Org.\norg_role = Editor\n[auth.basic]\nenabled = false",
                            "kubernetes-monitoring.json": "{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": \"-- Grafana --\",\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations \u0026 Alerts\",\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"description\": \"https://grafana.com/dashboards/3119 - Monitors Kubernetes cluster using Prometheus. Shows overall cluster CPU / Memory / Filesystem usage as well as individual pod, containers, control plane (as deployed by kops) statistics. Uses cAdvisor metrics only.\\r\\nTweaked from original https://grafana.com/dashboards/315 to add templating for:\\r\\n- adaptable $interval (instead of hardcoded 1m)\\r\\n- selectable $datasource (very useful to have a single dashboard tackling several prometheis )\",\n  \"editable\": true,\n  \"gnetId\": 3119,\n  \"graphTooltip\": 0,\n  \"iteration\": 1541985505736,\n  \"links\": [],\n  \"panels\": [\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 33,\n      \"panels\": [],\n      \"repeat\": null,\n      \"title\": \"Network I/O pressure\",\n      \"type\": \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"fill\": 1,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 1\n      },\n      \"height\": \"200px\",\n      \"id\": 32,\n      \"legend\": {\n        \"alignAsTable\": false,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": false,\n        \"sideWidth\": 200,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"sum (rate (container_network_receive_bytes_total{kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval]))\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"Received\",\n          \"metric\": \"network\",\n          \"refId\": \"A\",\n          \"step\": 10\n        },\n        {\n          \"expr\": \"- sum (rate (container_network_transmit_bytes_total{kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval]))\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"Sent\",\n          \"metric\": \"network\",\n          \"refId\": \"B\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Network I/O pressure\",\n      \"tooltip\": {\n        \"msResolution\": false,\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"cumulative\"\n      },\n      \"transparent\": false,\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"Bps\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"Bps\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 6\n      },\n      \"id\": 34,\n      \"panels\": [],\n      \"repeat\": null,\n      \"title\": \"Total usage\",\n      \"type\": \"row\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": true,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"percent\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": true,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 8,\n        \"x\": 0,\n        \"y\": 7\n      },\n      \"height\": \"180px\",\n      \"id\": 6,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (rate (container_cpu_usage_seconds_total{id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) / sum (machine_cpu_cores{kubernetes_io_hostname=~\\\"^$Node$\\\"}) * 100\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"65, 90\",\n      \"title\": \"Cluster CPU usage ($interval avg)\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"80%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": true,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"percent\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": true,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 8,\n        \"x\": 8,\n        \"y\": 7\n      },\n      \"height\": \"180px\",\n      \"id\": 4,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_memory_working_set_bytes{id=\\\"/\\\", kubernetes_io_hostname=~\\\"^$Node$\\\"}) / sum (machine_memory_bytes{kubernetes_io_hostname=~\\\"^$Node$\\\"}) * 100\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"65, 90\",\n      \"title\": \"Cluster memory usage\",\n      \"transparent\": false,\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"80%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": true,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"percent\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": true,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 8,\n        \"x\": 16,\n        \"y\": 7\n      },\n      \"height\": \"180px\",\n      \"id\": 7,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_fs_usage_bytes{device=~\\\"^/dev/(xvda|sda).$\\\",id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}) / sum (container_fs_limit_bytes{device=~\\\"^/dev/(xvda|sda).$\\\",id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}) * 100\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\",\n          \"metric\": \"\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"65, 90\",\n      \"title\": \"Cluster filesystem usage\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"80%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"none\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 0,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 11,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \" cores\",\n      \"postfixFontSize\": \"30%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (rate (container_cpu_usage_seconds_total{id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval]))\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Used\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"none\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 4,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 12,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \" cores\",\n      \"postfixFontSize\": \"30%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (machine_cpu_cores{kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Total\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"bytes\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 8,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 9,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"20%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"20%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_memory_working_set_bytes{id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Used\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"bytes\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 12,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 10,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (machine_memory_bytes{kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Total\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"bytes\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 16,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 13,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_fs_usage_bytes{device=~\\\"^/dev/(xvda|sda).$\\\",id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Used\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"bytes\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 20,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 14,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_fs_limit_bytes{device=~\\\"^/dev/(xvda|sda).$\\\",id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Total\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 15\n      },\n      \"id\": 47,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": false,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": true,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"(1 - (kubelet_volume_stats_available_bytes{instance=~\\\"^$Node$\\\"} / kubelet_volume_stats_capacity_bytes{instance=~\\\"^$Node$\\\"})) * 100\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{ persistentvolumeclaim }}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Persistent Volume Claim (% Used)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"percent\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": \"100\",\n          \"min\": \"0\",\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 23\n      },\n      \"id\": 37,\n      \"panels\": [],\n      \"repeat\": null,\n      \"title\": \"Containers CPU usage\",\n      \"type\": \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"decimals\": 3,\n      \"editable\": true,\n      \"error\": false,\n      \"fill\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 24\n      },\n      \"height\": \"\",\n      \"id\": 24,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"hideEmpty\": false,\n        \"hideZero\": false,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": true,\n        \"show\": true,\n        \"sideWidth\": null,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": true,\n      \"targets\": [\n        {\n          \"expr\": \"sum (rate (container_cpu_usage_seconds_total{image!=\\\"\\\", name=~\\\"^k8s_.*\\\", container_name!=\\\"POD\\\", namespace=~\\\"^$Namespace$\\\", pod_name=~\\\"^$deployment-.*\\\", pod_name=~\\\"^$Pod$\\\", kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (container_name, pod_name)\",\n          \"format\": \"time_series\",\n          \"hide\": false,\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"pod: {{ pod_name }} | {{ container_name }}\",\n          \"metric\": \"container_cpu\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Containers CPU usage ($interval avg)\",\n      \"tooltip\": {\n        \"msResolution\": true,\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"none\",\n          \"label\": \"cores\",\n          \"logBase\": 1,\n          \"max\": \"1\",\n          \"min\": \"0\",\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 31\n      },\n      \"id\": 41,\n      \"panels\": [],\n      \"repeat\": null,\n      \"title\": \"Containers memory usage\",\n      \"type\": \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"fill\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 32\n      },\n      \"id\": 27,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": true,\n        \"show\": true,\n        \"sideWidth\": 200,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": true,\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_memory_working_set_bytes{image!=\\\"\\\", name=~\\\"^k8s_.*\\\", container_name!=\\\"POD\\\", namespace=~\\\"^$Namespace$\\\", pod_name=~\\\"^$deployment-.*\\\", pod_name=~\\\"^$Pod$\\\", kubernetes_io_hostname=~\\\"^$Node$\\\"}) by (container_name, pod_name)\",\n          \"format\": \"time_series\",\n          \"hide\": false,\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"pod: {{ pod_name }} | {{ container_name }}\",\n          \"metric\": \"container_memory_usage:sort_desc\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Containers memory usage\",\n      \"tooltip\": {\n        \"msResolution\": false,\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"bytes\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"collapsed\": true,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 39\n      },\n      \"id\": 38,\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": \"$datasource\",\n          \"decimals\": 3,\n          \"editable\": true,\n          \"error\": false,\n          \"fill\": 0,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 13,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 33\n          },\n          \"id\": 20,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": false,\n            \"min\": false,\n            \"rightSide\": false,\n            \"show\": true,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n          \"percentage\": false,\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": true,\n          \"targets\": [\n            {\n              \"expr\": \"sum (rate (container_cpu_usage_seconds_total{id!=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (id)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"{{ id }}\",\n              \"metric\": \"container_cpu\",\n              \"refId\": \"A\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeFrom\": null,\n          \"timeShift\": null,\n          \"title\": \"All processes CPU usage ($interval avg)\",\n          \"tooltip\": {\n            \"msResolution\": true,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"buckets\": null,\n            \"mode\": \"time\",\n            \"name\": null,\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"format\": \"none\",\n              \"label\": \"cores\",\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": true\n            },\n            {\n              \"format\": \"short\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false,\n            \"alignLevel\": null\n          }\n        }\n      ],\n      \"repeat\": null,\n      \"title\": \"All processes CPU usage\",\n      \"type\": \"row\"\n    },\n    {\n      \"collapsed\": true,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 40\n      },\n      \"id\": 42,\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": \"$datasource\",\n          \"decimals\": 2,\n          \"editable\": true,\n          \"error\": false,\n          \"fill\": 0,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 13,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 44\n          },\n          \"id\": 28,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": false,\n            \"min\": false,\n            \"rightSide\": false,\n            \"show\": true,\n            \"sideWidth\": 200,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n          \"percentage\": false,\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": true,\n          \"targets\": [\n            {\n              \"expr\": \"sum (container_memory_working_set_bytes{id!=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}) by (id)\",\n              \"format\": \"time_series\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"{{ id }}\",\n              \"metric\": \"container_memory_usage:sort_desc\",\n              \"refId\": \"A\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeFrom\": null,\n          \"timeShift\": null,\n          \"title\": \"All processes memory usage\",\n          \"tooltip\": {\n            \"msResolution\": false,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"buckets\": null,\n            \"mode\": \"time\",\n            \"name\": null,\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"format\": \"bytes\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": true\n            },\n            {\n              \"format\": \"short\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false,\n            \"alignLevel\": null\n          }\n        }\n      ],\n      \"repeat\": null,\n      \"title\": \"All processes memory usage\",\n      \"type\": \"row\"\n    },\n    {\n      \"collapsed\": true,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 41\n      },\n      \"id\": 44,\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": \"$datasource\",\n          \"decimals\": 2,\n          \"editable\": true,\n          \"error\": false,\n          \"fill\": 1,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 7,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 46\n          },\n          \"id\": 30,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": false,\n            \"min\": false,\n            \"rightSide\": true,\n            \"show\": true,\n            \"sideWidth\": 200,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n          \"percentage\": false,\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": false,\n          \"targets\": [\n            {\n              \"expr\": \"sum (rate (container_network_receive_bytes_total{image!=\\\"\\\",name=~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (container_name, pod_name)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"-\u003e pod: {{ pod_name }} | {{ container_name }}\",\n              \"metric\": \"network\",\n              \"refId\": \"B\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"- sum (rate (container_network_transmit_bytes_total{image!=\\\"\\\",name=~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (container_name, pod_name)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"\u003c- pod: {{ pod_name }} | {{ container_name }}\",\n              \"metric\": \"network\",\n              \"refId\": \"D\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"sum (rate (container_network_receive_bytes_total{image!=\\\"\\\",name!~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (kubernetes_io_hostname, name, image)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"-\u003e docker: {{ kubernetes_io_hostname }} | {{ image }} ({{ name }})\",\n              \"metric\": \"network\",\n              \"refId\": \"A\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"- sum (rate (container_network_transmit_bytes_total{image!=\\\"\\\",name!~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (kubernetes_io_hostname, name, image)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"\u003c- docker: {{ kubernetes_io_hostname }} | {{ image }} ({{ name }})\",\n              \"metric\": \"network\",\n              \"refId\": \"C\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"sum (rate (container_network_transmit_bytes_total{rkt_container_name!=\\\"\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (kubernetes_io_hostname, rkt_container_name)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"-\u003e rkt: {{ kubernetes_io_hostname }} | {{ rkt_container_name }}\",\n              \"metric\": \"network\",\n              \"refId\": \"E\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"- sum (rate (container_network_transmit_bytes_total{rkt_container_name!=\\\"\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (kubernetes_io_hostname, rkt_container_name)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"\u003c- rkt: {{ kubernetes_io_hostname }} | {{ rkt_container_name }}\",\n              \"metric\": \"network\",\n              \"refId\": \"F\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeFrom\": null,\n          \"timeShift\": null,\n          \"title\": \"Containers network I/O ($interval avg)\",\n          \"tooltip\": {\n            \"msResolution\": false,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"buckets\": null,\n            \"mode\": \"time\",\n            \"name\": null,\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"format\": \"Bps\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": true\n            },\n            {\n              \"format\": \"short\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false,\n            \"alignLevel\": null\n          }\n        }\n      ],\n      \"repeat\": null,\n      \"title\": \"Containers network I/O\",\n      \"type\": \"row\"\n    },\n    {\n      \"collapsed\": true,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 42\n      },\n      \"id\": 45,\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": \"$datasource\",\n          \"decimals\": 2,\n          \"editable\": true,\n          \"error\": false,\n          \"fill\": 1,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 13,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 47\n          },\n          \"id\": 29,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": false,\n            \"min\": false,\n            \"rightSide\": false,\n            \"show\": true,\n            \"sideWidth\": 200,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n          \"percentage\": false,\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": false,\n          \"targets\": [\n            {\n              \"expr\": \"sum (rate (container_network_receive_bytes_total{id!=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (id)\",\n              \"format\": \"time_series\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"-\u003e {{ id }}\",\n              \"metric\": \"network\",\n              \"refId\": \"A\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"- sum (rate (container_network_transmit_bytes_total{id!=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (id)\",\n              \"format\": \"time_series\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"\u003c- {{ id }}\",\n              \"metric\": \"network\",\n              \"refId\": \"B\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeFrom\": null,\n          \"timeShift\": null,\n          \"title\": \"All processes network I/O ($interval avg)\",\n          \"tooltip\": {\n            \"msResolution\": false,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"buckets\": null,\n            \"mode\": \"time\",\n            \"name\": null,\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"format\": \"Bps\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": true\n            },\n            {\n              \"format\": \"short\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false,\n            \"alignLevel\": null\n          }\n        }\n      ],\n      \"repeat\": null,\n      \"title\": \"All processes network I/O\",\n      \"type\": \"row\"\n    }\n  ],\n  \"refresh\": \"5s\",\n  \"schemaVersion\": 16,\n  \"style\": \"dark\",\n  \"tags\": [\n    \"kubernetes\"\n  ],\n  \"templating\": {\n    \"list\": [\n      {\n        \"auto\": true,\n        \"auto_count\": 20,\n        \"auto_min\": \"2m\",\n        \"current\": {\n          \"text\": \"auto\",\n          \"value\": \"$__auto_interval_interval\"\n        },\n        \"hide\": 0,\n        \"label\": \"Interval\",\n        \"name\": \"interval\",\n        \"options\": [\n          {\n            \"selected\": true,\n            \"text\": \"auto\",\n            \"value\": \"$__auto_interval_interval\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"2m\",\n            \"value\": \"2m\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"5m10m\",\n            \"value\": \"5m10m\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"30m\",\n            \"value\": \"30m\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"1h\",\n            \"value\": \"1h\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"6h\",\n            \"value\": \"6h\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"12h\",\n            \"value\": \"12h\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"1d\",\n            \"value\": \"1d\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"7d\",\n            \"value\": \"7d\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"14d\",\n            \"value\": \"14d\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"30d\",\n            \"value\": \"30d\"\n          }\n        ],\n        \"query\": \"2m,5m10m,30m,1h,6h,12h,1d,7d,14d,30d\",\n        \"refresh\": 2,\n        \"type\": \"interval\"\n      },\n      {\n        \"current\": {\n          \"text\": \"prometheus\",\n          \"value\": \"prometheus\"\n        },\n        \"hide\": 0,\n        \"label\": null,\n        \"name\": \"datasource\",\n        \"options\": [],\n        \"query\": \"prometheus\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"type\": \"datasource\"\n      },\n      {\n        \"allValue\": \".*\",\n        \"current\": {\n          \"tags\": [],\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": \"$datasource\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": null,\n        \"multi\": false,\n        \"name\": \"Node\",\n        \"options\": [],\n        \"query\": \"label_values(kubernetes_io_hostname)\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"sort\": 0,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"allValue\": \".*\",\n        \"current\": {\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": \"$datasource\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Namespace\",\n        \"multi\": false,\n        \"name\": \"Namespace\",\n        \"options\": [],\n        \"query\": \"label_values(namespace)\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"sort\": 0,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"allValue\": \".*\",\n        \"current\": {\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": \"$datasource\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Pod\",\n        \"multi\": false,\n        \"name\": \"Pod\",\n        \"options\": [],\n        \"query\": \"label_values(pod_name)\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"sort\": 0,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"allValue\": \".*\",\n        \"current\": {\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": \"$datasource\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Deployment\",\n        \"multi\": false,\n        \"name\": \"deployment\",\n        \"options\": [],\n        \"query\": \"label_values(pod_name)\",\n        \"refresh\": 1,\n        \"regex\": \"/(\\\\w+)/\",\n        \"sort\": 0,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-5m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"browser\",\n  \"title\": \"Kubernetes - Cluster Monitoring\",\n  \"uid\": \"5zTZMuOmz\",\n  \"version\": 3\n}\n"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "name": "grafana"
                            },
                            "name": "grafana",
                            "namespace": "default"
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "v1",
                            "data": {
                                "dashboard-provider.yaml": "apiVersion: 1\nproviders:\n  - name: 'default'\n    folder: ''\n    type: file\n    disableDeletion: false\n    updateIntervalSeconds: 10 # how often Grafana will scan for changed dashboards\n    options:\n      path: /var/lib/grafana/dashboards",
                                "datasource-provider.yaml": "apiVersion: 1\ndatasources:\n  - name: prometheus\n    type: prometheus\n    access: proxy\n    url: http://prometheus:9090\n    basicAuth: false\n    editable: false\n  - name: loki\n    type: loki\n    access: proxy\n    url: http://loki:3100\n    basicAuth: false\n    editable: false",
                                "grafana.ini": "[auth.anonymous]\nenabled = true\norg_name = Main Org.\norg_role = Editor\n[auth.basic]\nenabled = false",
                                "kubernetes-monitoring.json": "{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": \"-- Grafana --\",\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations \u0026 Alerts\",\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"description\": \"https://grafana.com/dashboards/3119 - Monitors Kubernetes cluster using Prometheus. Shows overall cluster CPU / Memory / Filesystem usage as well as individual pod, containers, control plane (as deployed by kops) statistics. Uses cAdvisor metrics only.\\r\\nTweaked from original https://grafana.com/dashboards/315 to add templating for:\\r\\n- adaptable $interval (instead of hardcoded 1m)\\r\\n- selectable $datasource (very useful to have a single dashboard tackling several prometheis )\",\n  \"editable\": true,\n  \"gnetId\": 3119,\n  \"graphTooltip\": 0,\n  \"iteration\": 1541985505736,\n  \"links\": [],\n  \"panels\": [\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 33,\n      \"panels\": [],\n      \"repeat\": null,\n      \"title\": \"Network I/O pressure\",\n      \"type\": \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"fill\": 1,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 1\n      },\n      \"height\": \"200px\",\n      \"id\": 32,\n      \"legend\": {\n        \"alignAsTable\": false,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": false,\n        \"sideWidth\": 200,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"sum (rate (container_network_receive_bytes_total{kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval]))\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"Received\",\n          \"metric\": \"network\",\n          \"refId\": \"A\",\n          \"step\": 10\n        },\n        {\n          \"expr\": \"- sum (rate (container_network_transmit_bytes_total{kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval]))\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"Sent\",\n          \"metric\": \"network\",\n          \"refId\": \"B\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Network I/O pressure\",\n      \"tooltip\": {\n        \"msResolution\": false,\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"cumulative\"\n      },\n      \"transparent\": false,\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"Bps\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"Bps\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 6\n      },\n      \"id\": 34,\n      \"panels\": [],\n      \"repeat\": null,\n      \"title\": \"Total usage\",\n      \"type\": \"row\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": true,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"percent\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": true,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 8,\n        \"x\": 0,\n        \"y\": 7\n      },\n      \"height\": \"180px\",\n      \"id\": 6,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (rate (container_cpu_usage_seconds_total{id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) / sum (machine_cpu_cores{kubernetes_io_hostname=~\\\"^$Node$\\\"}) * 100\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"65, 90\",\n      \"title\": \"Cluster CPU usage ($interval avg)\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"80%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": true,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"percent\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": true,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 8,\n        \"x\": 8,\n        \"y\": 7\n      },\n      \"height\": \"180px\",\n      \"id\": 4,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_memory_working_set_bytes{id=\\\"/\\\", kubernetes_io_hostname=~\\\"^$Node$\\\"}) / sum (machine_memory_bytes{kubernetes_io_hostname=~\\\"^$Node$\\\"}) * 100\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"65, 90\",\n      \"title\": \"Cluster memory usage\",\n      \"transparent\": false,\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"80%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": true,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"percent\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": true,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 8,\n        \"x\": 16,\n        \"y\": 7\n      },\n      \"height\": \"180px\",\n      \"id\": 7,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_fs_usage_bytes{device=~\\\"^/dev/(xvda|sda).$\\\",id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}) / sum (container_fs_limit_bytes{device=~\\\"^/dev/(xvda|sda).$\\\",id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}) * 100\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\",\n          \"metric\": \"\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"65, 90\",\n      \"title\": \"Cluster filesystem usage\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"80%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"none\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 0,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 11,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \" cores\",\n      \"postfixFontSize\": \"30%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (rate (container_cpu_usage_seconds_total{id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval]))\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Used\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"none\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 4,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 12,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \" cores\",\n      \"postfixFontSize\": \"30%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (machine_cpu_cores{kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Total\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"bytes\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 8,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 9,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"20%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"20%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_memory_working_set_bytes{id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Used\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"bytes\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 12,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 10,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (machine_memory_bytes{kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Total\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"bytes\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 16,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 13,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_fs_usage_bytes{device=~\\\"^/dev/(xvda|sda).$\\\",id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Used\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"bytes\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 20,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 14,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_fs_limit_bytes{device=~\\\"^/dev/(xvda|sda).$\\\",id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Total\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 15\n      },\n      \"id\": 47,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": false,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": true,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"(1 - (kubelet_volume_stats_available_bytes{instance=~\\\"^$Node$\\\"} / kubelet_volume_stats_capacity_bytes{instance=~\\\"^$Node$\\\"})) * 100\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{ persistentvolumeclaim }}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Persistent Volume Claim (% Used)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"percent\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": \"100\",\n          \"min\": \"0\",\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 23\n      },\n      \"id\": 37,\n      \"panels\": [],\n      \"repeat\": null,\n      \"title\": \"Containers CPU usage\",\n      \"type\": \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"decimals\": 3,\n      \"editable\": true,\n      \"error\": false,\n      \"fill\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 24\n      },\n      \"height\": \"\",\n      \"id\": 24,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"hideEmpty\": false,\n        \"hideZero\": false,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": true,\n        \"show\": true,\n        \"sideWidth\": null,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": true,\n      \"targets\": [\n        {\n          \"expr\": \"sum (rate (container_cpu_usage_seconds_total{image!=\\\"\\\", name=~\\\"^k8s_.*\\\", container_name!=\\\"POD\\\", namespace=~\\\"^$Namespace$\\\", pod_name=~\\\"^$deployment-.*\\\", pod_name=~\\\"^$Pod$\\\", kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (container_name, pod_name)\",\n          \"format\": \"time_series\",\n          \"hide\": false,\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"pod: {{ pod_name }} | {{ container_name }}\",\n          \"metric\": \"container_cpu\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Containers CPU usage ($interval avg)\",\n      \"tooltip\": {\n        \"msResolution\": true,\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"none\",\n          \"label\": \"cores\",\n          \"logBase\": 1,\n          \"max\": \"1\",\n          \"min\": \"0\",\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 31\n      },\n      \"id\": 41,\n      \"panels\": [],\n      \"repeat\": null,\n      \"title\": \"Containers memory usage\",\n      \"type\": \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"fill\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 32\n      },\n      \"id\": 27,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": true,\n        \"show\": true,\n        \"sideWidth\": 200,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": true,\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_memory_working_set_bytes{image!=\\\"\\\", name=~\\\"^k8s_.*\\\", container_name!=\\\"POD\\\", namespace=~\\\"^$Namespace$\\\", pod_name=~\\\"^$deployment-.*\\\", pod_name=~\\\"^$Pod$\\\", kubernetes_io_hostname=~\\\"^$Node$\\\"}) by (container_name, pod_name)\",\n          \"format\": \"time_series\",\n          \"hide\": false,\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"pod: {{ pod_name }} | {{ container_name }}\",\n          \"metric\": \"container_memory_usage:sort_desc\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Containers memory usage\",\n      \"tooltip\": {\n        \"msResolution\": false,\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"bytes\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"collapsed\": true,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 39\n      },\n      \"id\": 38,\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": \"$datasource\",\n          \"decimals\": 3,\n          \"editable\": true,\n          \"error\": false,\n          \"fill\": 0,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 13,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 33\n          },\n          \"id\": 20,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": false,\n            \"min\": false,\n            \"rightSide\": false,\n            \"show\": true,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n          \"percentage\": false,\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": true,\n          \"targets\": [\n            {\n              \"expr\": \"sum (rate (container_cpu_usage_seconds_total{id!=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (id)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"{{ id }}\",\n              \"metric\": \"container_cpu\",\n              \"refId\": \"A\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeFrom\": null,\n          \"timeShift\": null,\n          \"title\": \"All processes CPU usage ($interval avg)\",\n          \"tooltip\": {\n            \"msResolution\": true,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"buckets\": null,\n            \"mode\": \"time\",\n            \"name\": null,\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"format\": \"none\",\n              \"label\": \"cores\",\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": true\n            },\n            {\n              \"format\": \"short\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false,\n            \"alignLevel\": null\n          }\n        }\n      ],\n      \"repeat\": null,\n      \"title\": \"All processes CPU usage\",\n      \"type\": \"row\"\n    },\n    {\n      \"collapsed\": true,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 40\n      },\n      \"id\": 42,\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": \"$datasource\",\n          \"decimals\": 2,\n          \"editable\": true,\n          \"error\": false,\n          \"fill\": 0,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 13,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 44\n          },\n          \"id\": 28,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": false,\n            \"min\": false,\n            \"rightSide\": false,\n            \"show\": true,\n            \"sideWidth\": 200,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n          \"percentage\": false,\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": true,\n          \"targets\": [\n            {\n              \"expr\": \"sum (container_memory_working_set_bytes{id!=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}) by (id)\",\n              \"format\": \"time_series\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"{{ id }}\",\n              \"metric\": \"container_memory_usage:sort_desc\",\n              \"refId\": \"A\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeFrom\": null,\n          \"timeShift\": null,\n          \"title\": \"All processes memory usage\",\n          \"tooltip\": {\n            \"msResolution\": false,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"buckets\": null,\n            \"mode\": \"time\",\n            \"name\": null,\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"format\": \"bytes\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": true\n            },\n            {\n              \"format\": \"short\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false,\n            \"alignLevel\": null\n          }\n        }\n      ],\n      \"repeat\": null,\n      \"title\": \"All processes memory usage\",\n      \"type\": \"row\"\n    },\n    {\n      \"collapsed\": true,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 41\n      },\n      \"id\": 44,\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": \"$datasource\",\n          \"decimals\": 2,\n          \"editable\": true,\n          \"error\": false,\n          \"fill\": 1,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 7,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 46\n          },\n          \"id\": 30,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": false,\n            \"min\": false,\n            \"rightSide\": true,\n            \"show\": true,\n            \"sideWidth\": 200,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n          \"percentage\": false,\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": false,\n          \"targets\": [\n            {\n              \"expr\": \"sum (rate (container_network_receive_bytes_total{image!=\\\"\\\",name=~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (container_name, pod_name)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"-\u003e pod: {{ pod_name }} | {{ container_name }}\",\n              \"metric\": \"network\",\n              \"refId\": \"B\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"- sum (rate (container_network_transmit_bytes_total{image!=\\\"\\\",name=~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (container_name, pod_name)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"\u003c- pod: {{ pod_name }} | {{ container_name }}\",\n              \"metric\": \"network\",\n              \"refId\": \"D\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"sum (rate (container_network_receive_bytes_total{image!=\\\"\\\",name!~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (kubernetes_io_hostname, name, image)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"-\u003e docker: {{ kubernetes_io_hostname }} | {{ image }} ({{ name }})\",\n              \"metric\": \"network\",\n              \"refId\": \"A\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"- sum (rate (container_network_transmit_bytes_total{image!=\\\"\\\",name!~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (kubernetes_io_hostname, name, image)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"\u003c- docker: {{ kubernetes_io_hostname }} | {{ image }} ({{ name }})\",\n              \"metric\": \"network\",\n              \"refId\": \"C\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"sum (rate (container_network_transmit_bytes_total{rkt_container_name!=\\\"\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (kubernetes_io_hostname, rkt_container_name)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"-\u003e rkt: {{ kubernetes_io_hostname }} | {{ rkt_container_name }}\",\n              \"metric\": \"network\",\n              \"refId\": \"E\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"- sum (rate (container_network_transmit_bytes_total{rkt_container_name!=\\\"\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (kubernetes_io_hostname, rkt_container_name)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"\u003c- rkt: {{ kubernetes_io_hostname }} | {{ rkt_container_name }}\",\n              \"metric\": \"network\",\n              \"refId\": \"F\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeFrom\": null,\n          \"timeShift\": null,\n          \"title\": \"Containers network I/O ($interval avg)\",\n          \"tooltip\": {\n            \"msResolution\": false,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"buckets\": null,\n            \"mode\": \"time\",\n            \"name\": null,\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"format\": \"Bps\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": true\n            },\n            {\n              \"format\": \"short\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false,\n            \"alignLevel\": null\n          }\n        }\n      ],\n      \"repeat\": null,\n      \"title\": \"Containers network I/O\",\n      \"type\": \"row\"\n    },\n    {\n      \"collapsed\": true,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 42\n      },\n      \"id\": 45,\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": \"$datasource\",\n          \"decimals\": 2,\n          \"editable\": true,\n          \"error\": false,\n          \"fill\": 1,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 13,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 47\n          },\n          \"id\": 29,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": false,\n            \"min\": false,\n            \"rightSide\": false,\n            \"show\": true,\n            \"sideWidth\": 200,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n          \"percentage\": false,\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": false,\n          \"targets\": [\n            {\n              \"expr\": \"sum (rate (container_network_receive_bytes_total{id!=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (id)\",\n              \"format\": \"time_series\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"-\u003e {{ id }}\",\n              \"metric\": \"network\",\n              \"refId\": \"A\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"- sum (rate (container_network_transmit_bytes_total{id!=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (id)\",\n              \"format\": \"time_series\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"\u003c- {{ id }}\",\n              \"metric\": \"network\",\n              \"refId\": \"B\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeFrom\": null,\n          \"timeShift\": null,\n          \"title\": \"All processes network I/O ($interval avg)\",\n          \"tooltip\": {\n            \"msResolution\": false,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"buckets\": null,\n            \"mode\": \"time\",\n            \"name\": null,\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"format\": \"Bps\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": true\n            },\n            {\n              \"format\": \"short\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false,\n            \"alignLevel\": null\n          }\n        }\n      ],\n      \"repeat\": null,\n      \"title\": \"All processes network I/O\",\n      \"type\": \"row\"\n    }\n  ],\n  \"refresh\": \"5s\",\n  \"schemaVersion\": 16,\n  \"style\": \"dark\",\n  \"tags\": [\n    \"kubernetes\"\n  ],\n  \"templating\": {\n    \"list\": [\n      {\n        \"auto\": true,\n        \"auto_count\": 20,\n        \"auto_min\": \"2m\",\n        \"current\": {\n          \"text\": \"auto\",\n          \"value\": \"$__auto_interval_interval\"\n        },\n        \"hide\": 0,\n        \"label\": \"Interval\",\n        \"name\": \"interval\",\n        \"options\": [\n          {\n            \"selected\": true,\n            \"text\": \"auto\",\n            \"value\": \"$__auto_interval_interval\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"2m\",\n            \"value\": \"2m\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"5m10m\",\n            \"value\": \"5m10m\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"30m\",\n            \"value\": \"30m\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"1h\",\n            \"value\": \"1h\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"6h\",\n            \"value\": \"6h\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"12h\",\n            \"value\": \"12h\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"1d\",\n            \"value\": \"1d\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"7d\",\n            \"value\": \"7d\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"14d\",\n            \"value\": \"14d\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"30d\",\n            \"value\": \"30d\"\n          }\n        ],\n        \"query\": \"2m,5m10m,30m,1h,6h,12h,1d,7d,14d,30d\",\n        \"refresh\": 2,\n        \"type\": \"interval\"\n      },\n      {\n        \"current\": {\n          \"text\": \"prometheus\",\n          \"value\": \"prometheus\"\n        },\n        \"hide\": 0,\n        \"label\": null,\n        \"name\": \"datasource\",\n        \"options\": [],\n        \"query\": \"prometheus\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"type\": \"datasource\"\n      },\n      {\n        \"allValue\": \".*\",\n        \"current\": {\n          \"tags\": [],\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": \"$datasource\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": null,\n        \"multi\": false,\n        \"name\": \"Node\",\n        \"options\": [],\n        \"query\": \"label_values(kubernetes_io_hostname)\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"sort\": 0,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"allValue\": \".*\",\n        \"current\": {\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": \"$datasource\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Namespace\",\n        \"multi\": false,\n        \"name\": \"Namespace\",\n        \"options\": [],\n        \"query\": \"label_values(namespace)\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"sort\": 0,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"allValue\": \".*\",\n        \"current\": {\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": \"$datasource\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Pod\",\n        \"multi\": false,\n        \"name\": \"Pod\",\n        \"options\": [],\n        \"query\": \"label_values(pod_name)\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"sort\": 0,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"allValue\": \".*\",\n        \"current\": {\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": \"$datasource\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Deployment\",\n        \"multi\": false,\n        \"name\": \"deployment\",\n        \"options\": [],\n        \"query\": \"label_values(pod_name)\",\n        \"refresh\": 1,\n        \"regex\": \"/(\\\\w+)/\",\n        \"sort\": 0,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-5m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"browser\",\n  \"title\": \"Kubernetes - Cluster Monitoring\",\n  \"uid\": \"5zTZMuOmz\",\n  \"version\": 3\n}\n"
                            },
                            "kind": "ConfigMap",
                            "metadata": {
                                "labels": {
                                    "name": "grafana"
                                },
                                "name": "grafana",
                                "namespace": "default"
                            }
                        },
                        "apiVersion": "v1",
                        "data": {
                            "dashboard-provider.yaml": "apiVersion: 1\nproviders:\n  - name: 'default'\n    folder: ''\n    type: file\n    disableDeletion: false\n    updateIntervalSeconds: 10 # how often Grafana will scan for changed dashboards\n    options:\n      path: /var/lib/grafana/dashboards",
                            "datasource-provider.yaml": "apiVersion: 1\ndatasources:\n  - name: prometheus\n    type: prometheus\n    access: proxy\n    url: http://prometheus:9090\n    basicAuth: false\n    editable: false\n  - name: loki\n    type: loki\n    access: proxy\n    url: http://loki:3100\n    basicAuth: false\n    editable: false",
                            "grafana.ini": "[auth.anonymous]\nenabled = true\norg_name = Main Org.\norg_role = Editor\n[auth.basic]\nenabled = false",
                            "kubernetes-monitoring.json": "{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": \"-- Grafana --\",\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations \u0026 Alerts\",\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"description\": \"https://grafana.com/dashboards/3119 - Monitors Kubernetes cluster using Prometheus. Shows overall cluster CPU / Memory / Filesystem usage as well as individual pod, containers, control plane (as deployed by kops) statistics. Uses cAdvisor metrics only.\\r\\nTweaked from original https://grafana.com/dashboards/315 to add templating for:\\r\\n- adaptable $interval (instead of hardcoded 1m)\\r\\n- selectable $datasource (very useful to have a single dashboard tackling several prometheis )\",\n  \"editable\": true,\n  \"gnetId\": 3119,\n  \"graphTooltip\": 0,\n  \"iteration\": 1541985505736,\n  \"links\": [],\n  \"panels\": [\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 33,\n      \"panels\": [],\n      \"repeat\": null,\n      \"title\": \"Network I/O pressure\",\n      \"type\": \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"fill\": 1,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 1\n      },\n      \"height\": \"200px\",\n      \"id\": 32,\n      \"legend\": {\n        \"alignAsTable\": false,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": false,\n        \"sideWidth\": 200,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"sum (rate (container_network_receive_bytes_total{kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval]))\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"Received\",\n          \"metric\": \"network\",\n          \"refId\": \"A\",\n          \"step\": 10\n        },\n        {\n          \"expr\": \"- sum (rate (container_network_transmit_bytes_total{kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval]))\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"Sent\",\n          \"metric\": \"network\",\n          \"refId\": \"B\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Network I/O pressure\",\n      \"tooltip\": {\n        \"msResolution\": false,\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"cumulative\"\n      },\n      \"transparent\": false,\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"Bps\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"Bps\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 6\n      },\n      \"id\": 34,\n      \"panels\": [],\n      \"repeat\": null,\n      \"title\": \"Total usage\",\n      \"type\": \"row\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": true,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"percent\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": true,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 8,\n        \"x\": 0,\n        \"y\": 7\n      },\n      \"height\": \"180px\",\n      \"id\": 6,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (rate (container_cpu_usage_seconds_total{id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) / sum (machine_cpu_cores{kubernetes_io_hostname=~\\\"^$Node$\\\"}) * 100\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"65, 90\",\n      \"title\": \"Cluster CPU usage ($interval avg)\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"80%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": true,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"percent\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": true,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 8,\n        \"x\": 8,\n        \"y\": 7\n      },\n      \"height\": \"180px\",\n      \"id\": 4,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_memory_working_set_bytes{id=\\\"/\\\", kubernetes_io_hostname=~\\\"^$Node$\\\"}) / sum (machine_memory_bytes{kubernetes_io_hostname=~\\\"^$Node$\\\"}) * 100\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"65, 90\",\n      \"title\": \"Cluster memory usage\",\n      \"transparent\": false,\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"80%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": true,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"percent\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": true,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 8,\n        \"x\": 16,\n        \"y\": 7\n      },\n      \"height\": \"180px\",\n      \"id\": 7,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_fs_usage_bytes{device=~\\\"^/dev/(xvda|sda).$\\\",id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}) / sum (container_fs_limit_bytes{device=~\\\"^/dev/(xvda|sda).$\\\",id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}) * 100\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\",\n          \"metric\": \"\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"65, 90\",\n      \"title\": \"Cluster filesystem usage\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"80%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"none\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 0,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 11,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \" cores\",\n      \"postfixFontSize\": \"30%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (rate (container_cpu_usage_seconds_total{id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval]))\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Used\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"none\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 4,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 12,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \" cores\",\n      \"postfixFontSize\": \"30%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (machine_cpu_cores{kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Total\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"bytes\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 8,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 9,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"20%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"20%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_memory_working_set_bytes{id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Used\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"bytes\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 12,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 10,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (machine_memory_bytes{kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Total\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"bytes\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 16,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 13,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_fs_usage_bytes{device=~\\\"^/dev/(xvda|sda).$\\\",id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Used\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"rgba(50, 172, 45, 0.97)\",\n        \"rgba(237, 129, 40, 0.89)\",\n        \"rgba(245, 54, 54, 0.9)\"\n      ],\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"format\": \"bytes\",\n      \"gauge\": {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 4,\n        \"x\": 20,\n        \"y\": 12\n      },\n      \"height\": \"1px\",\n      \"id\": 14,\n      \"interval\": null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n          \"name\": \"value to text\",\n          \"value\": 1\n        },\n        {\n          \"name\": \"range to text\",\n          \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n        \"full\": false,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n        \"show\": false\n      },\n      \"tableColumn\": \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_fs_limit_bytes{device=~\\\"^/dev/(xvda|sda).$\\\",id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": \"\",\n      \"title\": \"Total\",\n      \"type\": \"singlestat\",\n      \"valueFontSize\": \"50%\",\n      \"valueMaps\": [\n        {\n          \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n        }\n      ],\n      \"valueName\": \"current\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 15\n      },\n      \"id\": 47,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": false,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": true,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"(1 - (kubelet_volume_stats_available_bytes{instance=~\\\"^$Node$\\\"} / kubelet_volume_stats_capacity_bytes{instance=~\\\"^$Node$\\\"})) * 100\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{ persistentvolumeclaim }}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Persistent Volume Claim (% Used)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"percent\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": \"100\",\n          \"min\": \"0\",\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 23\n      },\n      \"id\": 37,\n      \"panels\": [],\n      \"repeat\": null,\n      \"title\": \"Containers CPU usage\",\n      \"type\": \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"decimals\": 3,\n      \"editable\": true,\n      \"error\": false,\n      \"fill\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 24\n      },\n      \"height\": \"\",\n      \"id\": 24,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"hideEmpty\": false,\n        \"hideZero\": false,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": true,\n        \"show\": true,\n        \"sideWidth\": null,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": true,\n      \"targets\": [\n        {\n          \"expr\": \"sum (rate (container_cpu_usage_seconds_total{image!=\\\"\\\", name=~\\\"^k8s_.*\\\", container_name!=\\\"POD\\\", namespace=~\\\"^$Namespace$\\\", pod_name=~\\\"^$deployment-.*\\\", pod_name=~\\\"^$Pod$\\\", kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (container_name, pod_name)\",\n          \"format\": \"time_series\",\n          \"hide\": false,\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"pod: {{ pod_name }} | {{ container_name }}\",\n          \"metric\": \"container_cpu\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Containers CPU usage ($interval avg)\",\n      \"tooltip\": {\n        \"msResolution\": true,\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"none\",\n          \"label\": \"cores\",\n          \"logBase\": 1,\n          \"max\": \"1\",\n          \"min\": \"0\",\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 31\n      },\n      \"id\": 41,\n      \"panels\": [],\n      \"repeat\": null,\n      \"title\": \"Containers memory usage\",\n      \"type\": \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"decimals\": 2,\n      \"editable\": true,\n      \"error\": false,\n      \"fill\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 32\n      },\n      \"id\": 27,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": true,\n        \"show\": true,\n        \"sideWidth\": 200,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": true,\n      \"targets\": [\n        {\n          \"expr\": \"sum (container_memory_working_set_bytes{image!=\\\"\\\", name=~\\\"^k8s_.*\\\", container_name!=\\\"POD\\\", namespace=~\\\"^$Namespace$\\\", pod_name=~\\\"^$deployment-.*\\\", pod_name=~\\\"^$Pod$\\\", kubernetes_io_hostname=~\\\"^$Node$\\\"}) by (container_name, pod_name)\",\n          \"format\": \"time_series\",\n          \"hide\": false,\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"pod: {{ pod_name }} | {{ container_name }}\",\n          \"metric\": \"container_memory_usage:sort_desc\",\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Containers memory usage\",\n      \"tooltip\": {\n        \"msResolution\": false,\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"bytes\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"collapsed\": true,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 39\n      },\n      \"id\": 38,\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": \"$datasource\",\n          \"decimals\": 3,\n          \"editable\": true,\n          \"error\": false,\n          \"fill\": 0,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 13,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 33\n          },\n          \"id\": 20,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": false,\n            \"min\": false,\n            \"rightSide\": false,\n            \"show\": true,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n          \"percentage\": false,\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": true,\n          \"targets\": [\n            {\n              \"expr\": \"sum (rate (container_cpu_usage_seconds_total{id!=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (id)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"{{ id }}\",\n              \"metric\": \"container_cpu\",\n              \"refId\": \"A\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeFrom\": null,\n          \"timeShift\": null,\n          \"title\": \"All processes CPU usage ($interval avg)\",\n          \"tooltip\": {\n            \"msResolution\": true,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"buckets\": null,\n            \"mode\": \"time\",\n            \"name\": null,\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"format\": \"none\",\n              \"label\": \"cores\",\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": true\n            },\n            {\n              \"format\": \"short\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false,\n            \"alignLevel\": null\n          }\n        }\n      ],\n      \"repeat\": null,\n      \"title\": \"All processes CPU usage\",\n      \"type\": \"row\"\n    },\n    {\n      \"collapsed\": true,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 40\n      },\n      \"id\": 42,\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": \"$datasource\",\n          \"decimals\": 2,\n          \"editable\": true,\n          \"error\": false,\n          \"fill\": 0,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 13,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 44\n          },\n          \"id\": 28,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": false,\n            \"min\": false,\n            \"rightSide\": false,\n            \"show\": true,\n            \"sideWidth\": 200,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n          \"percentage\": false,\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": true,\n          \"targets\": [\n            {\n              \"expr\": \"sum (container_memory_working_set_bytes{id!=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}) by (id)\",\n              \"format\": \"time_series\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"{{ id }}\",\n              \"metric\": \"container_memory_usage:sort_desc\",\n              \"refId\": \"A\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeFrom\": null,\n          \"timeShift\": null,\n          \"title\": \"All processes memory usage\",\n          \"tooltip\": {\n            \"msResolution\": false,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"buckets\": null,\n            \"mode\": \"time\",\n            \"name\": null,\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"format\": \"bytes\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": true\n            },\n            {\n              \"format\": \"short\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false,\n            \"alignLevel\": null\n          }\n        }\n      ],\n      \"repeat\": null,\n      \"title\": \"All processes memory usage\",\n      \"type\": \"row\"\n    },\n    {\n      \"collapsed\": true,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 41\n      },\n      \"id\": 44,\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": \"$datasource\",\n          \"decimals\": 2,\n          \"editable\": true,\n          \"error\": false,\n          \"fill\": 1,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 7,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 46\n          },\n          \"id\": 30,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": false,\n            \"min\": false,\n            \"rightSide\": true,\n            \"show\": true,\n            \"sideWidth\": 200,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n          \"percentage\": false,\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": false,\n          \"targets\": [\n            {\n              \"expr\": \"sum (rate (container_network_receive_bytes_total{image!=\\\"\\\",name=~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (container_name, pod_name)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"-\u003e pod: {{ pod_name }} | {{ container_name }}\",\n              \"metric\": \"network\",\n              \"refId\": \"B\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"- sum (rate (container_network_transmit_bytes_total{image!=\\\"\\\",name=~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (container_name, pod_name)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"\u003c- pod: {{ pod_name }} | {{ container_name }}\",\n              \"metric\": \"network\",\n              \"refId\": \"D\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"sum (rate (container_network_receive_bytes_total{image!=\\\"\\\",name!~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (kubernetes_io_hostname, name, image)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"-\u003e docker: {{ kubernetes_io_hostname }} | {{ image }} ({{ name }})\",\n              \"metric\": \"network\",\n              \"refId\": \"A\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"- sum (rate (container_network_transmit_bytes_total{image!=\\\"\\\",name!~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (kubernetes_io_hostname, name, image)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"\u003c- docker: {{ kubernetes_io_hostname }} | {{ image }} ({{ name }})\",\n              \"metric\": \"network\",\n              \"refId\": \"C\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"sum (rate (container_network_transmit_bytes_total{rkt_container_name!=\\\"\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (kubernetes_io_hostname, rkt_container_name)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"-\u003e rkt: {{ kubernetes_io_hostname }} | {{ rkt_container_name }}\",\n              \"metric\": \"network\",\n              \"refId\": \"E\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"- sum (rate (container_network_transmit_bytes_total{rkt_container_name!=\\\"\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (kubernetes_io_hostname, rkt_container_name)\",\n              \"format\": \"time_series\",\n              \"hide\": false,\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"\u003c- rkt: {{ kubernetes_io_hostname }} | {{ rkt_container_name }}\",\n              \"metric\": \"network\",\n              \"refId\": \"F\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeFrom\": null,\n          \"timeShift\": null,\n          \"title\": \"Containers network I/O ($interval avg)\",\n          \"tooltip\": {\n            \"msResolution\": false,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"buckets\": null,\n            \"mode\": \"time\",\n            \"name\": null,\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"format\": \"Bps\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": true\n            },\n            {\n              \"format\": \"short\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false,\n            \"alignLevel\": null\n          }\n        }\n      ],\n      \"repeat\": null,\n      \"title\": \"Containers network I/O\",\n      \"type\": \"row\"\n    },\n    {\n      \"collapsed\": true,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 42\n      },\n      \"id\": 45,\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": \"$datasource\",\n          \"decimals\": 2,\n          \"editable\": true,\n          \"error\": false,\n          \"fill\": 1,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 13,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 47\n          },\n          \"id\": 29,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": false,\n            \"min\": false,\n            \"rightSide\": false,\n            \"show\": true,\n            \"sideWidth\": 200,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n          \"percentage\": false,\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": false,\n          \"targets\": [\n            {\n              \"expr\": \"sum (rate (container_network_receive_bytes_total{id!=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (id)\",\n              \"format\": \"time_series\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"-\u003e {{ id }}\",\n              \"metric\": \"network\",\n              \"refId\": \"A\",\n              \"step\": 10\n            },\n            {\n              \"expr\": \"- sum (rate (container_network_transmit_bytes_total{id!=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[$interval])) by (id)\",\n              \"format\": \"time_series\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"\u003c- {{ id }}\",\n              \"metric\": \"network\",\n              \"refId\": \"B\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeFrom\": null,\n          \"timeShift\": null,\n          \"title\": \"All processes network I/O ($interval avg)\",\n          \"tooltip\": {\n            \"msResolution\": false,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"buckets\": null,\n            \"mode\": \"time\",\n            \"name\": null,\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"format\": \"Bps\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": true\n            },\n            {\n              \"format\": \"short\",\n              \"label\": null,\n              \"logBase\": 1,\n              \"max\": null,\n              \"min\": null,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false,\n            \"alignLevel\": null\n          }\n        }\n      ],\n      \"repeat\": null,\n      \"title\": \"All processes network I/O\",\n      \"type\": \"row\"\n    }\n  ],\n  \"refresh\": \"5s\",\n  \"schemaVersion\": 16,\n  \"style\": \"dark\",\n  \"tags\": [\n    \"kubernetes\"\n  ],\n  \"templating\": {\n    \"list\": [\n      {\n        \"auto\": true,\n        \"auto_count\": 20,\n        \"auto_min\": \"2m\",\n        \"current\": {\n          \"text\": \"auto\",\n          \"value\": \"$__auto_interval_interval\"\n        },\n        \"hide\": 0,\n        \"label\": \"Interval\",\n        \"name\": \"interval\",\n        \"options\": [\n          {\n            \"selected\": true,\n            \"text\": \"auto\",\n            \"value\": \"$__auto_interval_interval\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"2m\",\n            \"value\": \"2m\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"5m10m\",\n            \"value\": \"5m10m\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"30m\",\n            \"value\": \"30m\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"1h\",\n            \"value\": \"1h\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"6h\",\n            \"value\": \"6h\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"12h\",\n            \"value\": \"12h\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"1d\",\n            \"value\": \"1d\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"7d\",\n            \"value\": \"7d\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"14d\",\n            \"value\": \"14d\"\n          },\n          {\n            \"selected\": false,\n            \"text\": \"30d\",\n            \"value\": \"30d\"\n          }\n        ],\n        \"query\": \"2m,5m10m,30m,1h,6h,12h,1d,7d,14d,30d\",\n        \"refresh\": 2,\n        \"type\": \"interval\"\n      },\n      {\n        \"current\": {\n          \"text\": \"prometheus\",\n          \"value\": \"prometheus\"\n        },\n        \"hide\": 0,\n        \"label\": null,\n        \"name\": \"datasource\",\n        \"options\": [],\n        \"query\": \"prometheus\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"type\": \"datasource\"\n      },\n      {\n        \"allValue\": \".*\",\n        \"current\": {\n          \"tags\": [],\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": \"$datasource\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": null,\n        \"multi\": false,\n        \"name\": \"Node\",\n        \"options\": [],\n        \"query\": \"label_values(kubernetes_io_hostname)\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"sort\": 0,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"allValue\": \".*\",\n        \"current\": {\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": \"$datasource\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Namespace\",\n        \"multi\": false,\n        \"name\": \"Namespace\",\n        \"options\": [],\n        \"query\": \"label_values(namespace)\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"sort\": 0,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"allValue\": \".*\",\n        \"current\": {\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": \"$datasource\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Pod\",\n        \"multi\": false,\n        \"name\": \"Pod\",\n        \"options\": [],\n        \"query\": \"label_values(pod_name)\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"sort\": 0,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"allValue\": \".*\",\n        \"current\": {\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": \"$datasource\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Deployment\",\n        \"multi\": false,\n        \"name\": \"deployment\",\n        \"options\": [],\n        \"query\": \"label_values(pod_name)\",\n        \"refresh\": 1,\n        \"regex\": \"/(\\\\w+)/\",\n        \"sort\": 0,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-5m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"browser\",\n  \"title\": \"Kubernetes - Cluster Monitoring\",\n  \"uid\": \"5zTZMuOmz\",\n  \"version\": 3\n}\n"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "creationTimestamp": "2019-03-19T08:27:19Z",
                            "labels": {
                                "name": "grafana"
                            },
                            "name": "grafana",
                            "namespace": "default",
                            "resourceVersion": "13288",
                            "selfLink": "/api/v1/namespaces/default/configmaps/grafana",
                            "uid": "cfee3228-4a20-11e9-ba02-000c29997d29"
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:Grafana::grafana",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:core/v1:Service::prometheus-service",
                        "urn:pulumi:dev::pulumi-ts::james:monitoring:loki$kubernetes:core/v1:Service::loki-service",
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "data": [
                            "urn:pulumi:dev::pulumi-ts::james:monitoring:prometheus$kubernetes:core/v1:Service::prometheus-service",
                            "urn:pulumi:dev::pulumi-ts::james:monitoring:loki$kubernetes:core/v1:Service::loki-service"
                        ],
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ]
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:Grafana$kubernetes:apps/v1:Deployment::grafana-deployment",
                    "custom": true,
                    "id": "default/grafana",
                    "type": "kubernetes:apps/v1:Deployment",
                    "inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "labels": {
                                "name": "grafana"
                            },
                            "name": "grafana",
                            "namespace": "default"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "name": "grafana"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "name": "grafana"
                                    },
                                    "name": "grafana",
                                    "namespace": "default"
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "image": "grafana/grafana:6.0.0-beta1",
                                            "name": "grafana",
                                            "ports": [
                                                {
                                                    "containerPort": 3000
                                                }
                                            ],
                                            "securityContext": {
                                                "fsGroup": 472,
                                                "runAsUser": 472
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/lib/grafana",
                                                    "name": "grafana-storage"
                                                },
                                                {
                                                    "mountPath": "/etc/grafana",
                                                    "name": "grafana-config"
                                                },
                                                {
                                                    "mountPath": "/var/lib/grafana/dashboards",
                                                    "name": "grafana-dashboards"
                                                }
                                            ]
                                        }
                                    ],
                                    "volumes": [
                                        {
                                            "name": "grafana-storage",
                                            "persistentVolumeClaim": {
                                                "claimName": "grafana"
                                            }
                                        },
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "grafana.ini",
                                                        "path": "grafana.ini"
                                                    },
                                                    {
                                                        "key": "dashboard-provider.yaml",
                                                        "path": "provisioning/dashboards/dashboard-provider.yaml"
                                                    },
                                                    {
                                                        "key": "datasource-provider.yaml",
                                                        "path": "provisioning/datasources/datasource-provider.yaml"
                                                    }
                                                ],
                                                "name": "grafana"
                                            },
                                            "name": "grafana-config"
                                        },
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "kubernetes-monitoring.json",
                                                        "path": "kubernetes-monitoring.json"
                                                    }
                                                ],
                                                "name": "grafana"
                                            },
                                            "name": "grafana-dashboards"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "apps/v1",
                            "kind": "Deployment",
                            "metadata": {
                                "labels": {
                                    "name": "grafana"
                                },
                                "name": "grafana",
                                "namespace": "default"
                            },
                            "spec": {
                                "replicas": 1,
                                "selector": {
                                    "matchLabels": {
                                        "name": "grafana"
                                    }
                                },
                                "template": {
                                    "metadata": {
                                        "labels": {
                                            "name": "grafana"
                                        },
                                        "name": "grafana",
                                        "namespace": "default"
                                    },
                                    "spec": {
                                        "containers": [
                                            {
                                                "image": "grafana/grafana:6.0.0-beta1",
                                                "name": "grafana",
                                                "ports": [
                                                    {
                                                        "containerPort": 3000
                                                    }
                                                ],
                                                "securityContext": {
                                                    "fsGroup": 472,
                                                    "runAsUser": 472
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "mountPath": "/var/lib/grafana",
                                                        "name": "grafana-storage"
                                                    },
                                                    {
                                                        "mountPath": "/etc/grafana",
                                                        "name": "grafana-config"
                                                    },
                                                    {
                                                        "mountPath": "/var/lib/grafana/dashboards",
                                                        "name": "grafana-dashboards"
                                                    }
                                                ]
                                            }
                                        ],
                                        "volumes": [
                                            {
                                                "name": "grafana-storage",
                                                "persistentVolumeClaim": {
                                                    "claimName": "grafana"
                                                }
                                            },
                                            {
                                                "configMap": {
                                                    "items": [
                                                        {
                                                            "key": "grafana.ini",
                                                            "path": "grafana.ini"
                                                        },
                                                        {
                                                            "key": "dashboard-provider.yaml",
                                                            "path": "provisioning/dashboards/dashboard-provider.yaml"
                                                        },
                                                        {
                                                            "key": "datasource-provider.yaml",
                                                            "path": "provisioning/datasources/datasource-provider.yaml"
                                                        }
                                                    ],
                                                    "name": "grafana"
                                                },
                                                "name": "grafana-config"
                                            },
                                            {
                                                "configMap": {
                                                    "items": [
                                                        {
                                                            "key": "kubernetes-monitoring.json",
                                                            "path": "kubernetes-monitoring.json"
                                                        }
                                                    ],
                                                    "name": "grafana"
                                                },
                                                "name": "grafana-dashboards"
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "deployment.kubernetes.io/revision": "1"
                            },
                            "creationTimestamp": "2019-03-19T08:27:20Z",
                            "generation": 1,
                            "labels": {
                                "name": "grafana"
                            },
                            "name": "grafana",
                            "namespace": "default",
                            "resourceVersion": "13334",
                            "selfLink": "/apis/apps/v1/namespaces/default/deployments/grafana",
                            "uid": "d02d0100-4a20-11e9-ba02-000c29997d29"
                        },
                        "spec": {
                            "progressDeadlineSeconds": 600,
                            "replicas": 1,
                            "revisionHistoryLimit": 10,
                            "selector": {
                                "matchLabels": {
                                    "name": "grafana"
                                }
                            },
                            "strategy": {
                                "rollingUpdate": {
                                    "maxSurge": "25%",
                                    "maxUnavailable": "25%"
                                },
                                "type": "RollingUpdate"
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "name": "grafana"
                                    },
                                    "name": "grafana",
                                    "namespace": "default"
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "image": "grafana/grafana:6.0.0-beta1",
                                            "imagePullPolicy": "IfNotPresent",
                                            "name": "grafana",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "protocol": "TCP"
                                                }
                                            ],
                                            "resources": {},
                                            "securityContext": {
                                                "procMount": "Default",
                                                "runAsUser": 472
                                            },
                                            "terminationMessagePath": "/dev/termination-log",
                                            "terminationMessagePolicy": "File",
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/lib/grafana",
                                                    "name": "grafana-storage"
                                                },
                                                {
                                                    "mountPath": "/etc/grafana",
                                                    "name": "grafana-config"
                                                },
                                                {
                                                    "mountPath": "/var/lib/grafana/dashboards",
                                                    "name": "grafana-dashboards"
                                                }
                                            ]
                                        }
                                    ],
                                    "dnsPolicy": "ClusterFirst",
                                    "restartPolicy": "Always",
                                    "schedulerName": "default-scheduler",
                                    "securityContext": {},
                                    "terminationGracePeriodSeconds": 30,
                                    "volumes": [
                                        {
                                            "name": "grafana-storage",
                                            "persistentVolumeClaim": {
                                                "claimName": "grafana"
                                            }
                                        },
                                        {
                                            "configMap": {
                                                "defaultMode": 420,
                                                "items": [
                                                    {
                                                        "key": "grafana.ini",
                                                        "path": "grafana.ini"
                                                    },
                                                    {
                                                        "key": "dashboard-provider.yaml",
                                                        "path": "provisioning/dashboards/dashboard-provider.yaml"
                                                    },
                                                    {
                                                        "key": "datasource-provider.yaml",
                                                        "path": "provisioning/datasources/datasource-provider.yaml"
                                                    }
                                                ],
                                                "name": "grafana"
                                            },
                                            "name": "grafana-config"
                                        },
                                        {
                                            "configMap": {
                                                "defaultMode": 420,
                                                "items": [
                                                    {
                                                        "key": "kubernetes-monitoring.json",
                                                        "path": "kubernetes-monitoring.json"
                                                    }
                                                ],
                                                "name": "grafana"
                                            },
                                            "name": "grafana-dashboards"
                                        }
                                    ]
                                }
                            }
                        },
                        "status": {
                            "availableReplicas": 1,
                            "conditions": [
                                {
                                    "lastTransitionTime": "2019-03-19T08:27:42Z",
                                    "lastUpdateTime": "2019-03-19T08:27:42Z",
                                    "message": "Deployment has minimum availability.",
                                    "reason": "MinimumReplicasAvailable",
                                    "status": "True",
                                    "type": "Available"
                                },
                                {
                                    "lastTransitionTime": "2019-03-19T08:27:20Z",
                                    "lastUpdateTime": "2019-03-19T08:27:42Z",
                                    "message": "ReplicaSet \"grafana-77dddfcfcd\" has successfully progressed.",
                                    "reason": "NewReplicaSetAvailable",
                                    "status": "True",
                                    "type": "Progressing"
                                }
                            ],
                            "observedGeneration": 1,
                            "readyReplicas": 1,
                            "replicas": 1,
                            "updatedReplicas": 1
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:Grafana::grafana",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace",
                        "urn:pulumi:dev::pulumi-ts::james:monitoring:Grafana$kubernetes:core/v1:PersistentVolumeClaim::grafana-storage",
                        "urn:pulumi:dev::pulumi-ts::james:monitoring:Grafana$kubernetes:core/v1:ConfigMap::grafana-config"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ],
                        "spec": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace",
                            "urn:pulumi:dev::pulumi-ts::james:monitoring:Grafana$kubernetes:core/v1:PersistentVolumeClaim::grafana-storage",
                            "urn:pulumi:dev::pulumi-ts::james:monitoring:Grafana$kubernetes:core/v1:ConfigMap::grafana-config"
                        ]
                    }
                },
                {
                    "urn": "urn:pulumi:dev::pulumi-ts::james:monitoring:Grafana$kubernetes:core/v1:Service::grafana-service",
                    "custom": true,
                    "id": "default/grafana",
                    "type": "kubernetes:core/v1:Service",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "labels": {
                                "name": "grafana"
                            },
                            "name": "grafana",
                            "namespace": "default"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "port": 3000,
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "name": "grafana"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "outputs": {
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "Service",
                            "metadata": {
                                "labels": {
                                    "name": "grafana"
                                },
                                "name": "grafana",
                                "namespace": "default"
                            },
                            "spec": {
                                "ports": [
                                    {
                                        "port": 3000,
                                        "targetPort": 3000
                                    }
                                ],
                                "selector": {
                                    "name": "grafana"
                                },
                                "type": "ClusterIP"
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "creationTimestamp": "2019-03-19T08:27:42Z",
                            "labels": {
                                "name": "grafana"
                            },
                            "name": "grafana",
                            "namespace": "default",
                            "resourceVersion": "13338",
                            "selfLink": "/api/v1/namespaces/default/services/grafana",
                            "uid": "dd9f33e7-4a20-11e9-ba02-000c29997d29"
                        },
                        "spec": {
                            "clusterIP": "10.101.172.208",
                            "ports": [
                                {
                                    "port": 3000,
                                    "protocol": "TCP",
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "name": "grafana"
                            },
                            "sessionAffinity": "None",
                            "type": "ClusterIP"
                        },
                        "status": {
                            "loadBalancer": {}
                        }
                    },
                    "parent": "urn:pulumi:dev::pulumi-ts::james:monitoring:Grafana::grafana",
                    "dependencies": [
                        "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace",
                        "urn:pulumi:dev::pulumi-ts::james:monitoring:Grafana$kubernetes:apps/v1:Deployment::grafana-deployment"
                    ],
                    "provider": "urn:pulumi:dev::pulumi-ts::pulumi:providers:kubernetes::default::3ce8a23e-bd9e-4180-ae20-8190c50ea5ba",
                    "propertyDependencies": {
                        "apiVersion": null,
                        "kind": null,
                        "metadata": [
                            "urn:pulumi:dev::pulumi-ts::kubernetes:core/v1:Namespace::monitoring-namespace"
                        ],
                        "spec": [
                            "urn:pulumi:dev::pulumi-ts::james:monitoring:Grafana$kubernetes:apps/v1:Deployment::grafana-deployment"
                        ]
                    }
                }
            ]
        }
    }
}